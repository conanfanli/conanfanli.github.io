{"version":3,"sources":["webpack:///./queries/GetEvents.graphql","webpack:///./App/index.tsx","webpack:///./queries/ImportWaveTransactions.graphql","webpack:///./queries/GetLatestImportDate.graphql","webpack:///./queries/GetTransactions.graphql","webpack:///./queries/CreateTransaction.graphql","webpack:///./queries/AcceptPrediction.graphql","webpack:///./queries/CategorizeTransaction.graphql","webpack:///./queries/UpdateTransaction.graphql","webpack:///./queries/GetEventLogs.graphql","webpack:///./queries/ArchiveTransaction.graphql","webpack:///./queries/SignCheckpoint.graphql","webpack:///./queries/GetCategories.graphql","webpack:///./queries/GetProfitAndLossChart.graphql","webpack:///./styles.tsx","webpack:///./queries/__generated__/ImportWaveTransactions.hooks.ts","webpack:///./queries/__generated__/GetLatestImportDate.hooks.ts","webpack:///./TransactionList/ImportForm.tsx","webpack:///./queries/__generated__/GetTransactions.hooks.ts","webpack:///./components/DialogSelect.tsx","webpack:///./queries/__generated__/CreateTransaction.hooks.ts","webpack:///./utils.ts","webpack:///./TransactionList/NewTransactionForm.tsx","webpack:///./components/IconMenu.tsx","webpack:///./App/hooks.ts","webpack:///./TransactionList/FilterDialog.tsx","webpack:///./TransactionList/TransactionListAppBar.tsx","webpack:///./queries/__generated__/AcceptPrediction.hooks.ts","webpack:///./TransactionList/SmartCatField.tsx","webpack:///./components/ResponsiveLabel.tsx","webpack:///./queries/__generated__/CategorizeTransaction.hooks.ts","webpack:///./TransactionList/CategoryField.tsx","webpack:///./queries/__generated__/UpdateTransaction.hooks.ts","webpack:///./components/DebouncedTextField.tsx","webpack:///./TransactionList/BalanceAdjustField.tsx","webpack:///./queries/__generated__/GetEventLogs.hooks.ts","webpack:///./TransactionList/EventLog.tsx","webpack:///./queries/__generated__/ArchiveTransaction.hooks.ts","webpack:///./TransactionList/TransactionRow.tsx","webpack:///./theme.tsx","webpack:///./queries/__generated__/SignCheckpoint.hooks.ts","webpack:///./App/Timeline/EventRow.tsx","webpack:///./App/Timeline/utils.ts","webpack:///./queries/__generated__/GetEvents.hooks.ts","webpack:///./App/Timeline/index.tsx","webpack:///./TransactionList/index.tsx","webpack:///./components/IconSelect.tsx","webpack:///./CategoryPage/Tree.tsx","webpack:///./CategoryPage/selectors.tsx","webpack:///./queries/__generated__/GetCategories.hooks.ts","webpack:///./CategoryPage/index.tsx","webpack:///./queries/__generated__/GetProfitAndLossChart.hooks.ts","webpack:///./Report/PnlChart.tsx","webpack:///./App/Home.tsx","webpack:///./index.tsx","webpack:///./queries/FragmentTransaction.graphql","webpack:///./types/index.ts","webpack:///./history.ts"],"names":["doc","loc","source","definitionRefs","findOperation","name","i","definitions","length","element","value","forEach","def","refs","Set","collectFragmentReferences","node","kind","add","type","selectionSet","selections","selection","variableDefinitions","module","exports","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","size","prevRefs","has","childRef","op","push","oneQuery","Routes","exact","path","onLogin","BASE_URL","component","Home","client","getClient","uri","App","hot","names","concat","filter","isWide","window","innerWidth","useStyles","makeStyles","theme","createStyles","appBar","position","header","backgroundColor","palette","info","light","disabled","opacity","cursor","title","marginLeft","spacing","flex","formControl","margin","minWidth","QUERY","ImportWaveTransactions__QUERY","GetLatestImportDate__QUERY","today","Date","toISOString","slice","ImportButton","options","onClose","startDate","endDate","useMutation","importWaveTransactions","loading","Button","fullWidth","onClick","variables","then","res","location","reload","style","marginTop","color","variant","ImportForm","props","data","useQuery","initialStartDate","latestImportDate","ImportFormComponent","React","setStartDate","setEndDate","Grid","container","item","xs","sm","TextField","label","onChange","e","target","defaultValue","GetTransactions__QUERY","DialogSelect","choices","onSelectOption","isOpen","setIsOpen","initialOption","option","find","x","Error","getInitialOption","Icon","marginRight","iconId","Dialog","open","DialogTitle","DialogContent","Autocomplete","getOptionLabel","getOptionSelected","event","newValue","renderInput","params","CreateTransaction__QUERY","getIsoDateString","d","year","getFullYear","month","getMonth","day","getDate","fieldConfig","issuedDate","required","merchantName","notes","categoryId","balanceAdjust","totalAmount","FieldInput","fieldName","updateField","instance","config","error","initialForm","getToday","NewTransactionForm","selectableCategories","formData","setFormData","update","cache","filters","offset","limit","createTransaction","isOk","cached","readQuery","query","GET_TRANSACTIONS_QUERY","writeQuery","Object","assign","transactions","transaction","message","t","old","newState","paddingTop","ExpansionPanel","expanded","ExpansionPanelSummary","map","cat","id","description","Divider","ExpansionPanelActions","input","every","Boolean","SimpleMenu","children","buttonText","useState","anchorEl","setAnchorEl","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","useHistory","history","useReactRouterHistory","_history","pathname","qs","JSON","stringify","useLocation","search","useReactRouterLocation","querystring","parse","split","FilterDialog","categoryChoices","setOpen","batchId","setBatchId","sharedOnly","setSharedOnly","uncategorizedOnly","setUncategorizedOnly","searchText","setSearchText","setCategoryId","handleClickOpen","handleClose","IconButton","aria-labelledby","DialogContentText","FormControl","InputLabel","Select","parseInt","MenuItem","choice","key","FormControlLabel","control","Checkbox","checked","DialogActions","undefined","TransactionListAppBar","AppBar","Toolbar","Tooltip","toggleTimeline","History","balance","Typography","IconMenu","Add","showForm","ListItemIcon","AttachMoney","ListItemText","Waves","sessionStorage","removeItem","href","className","AcceptPrediction__QUERY","SmartCatField","predicatedSplit","predicatedCategory","transactionId","openCategoryDialog","category","acceptPrediction","ButtonGroup","aria-label","ResponsiveLabel","ResponsiveLink","rest","Link","CategorizeTransaction__QUERY","CategoryField","showDialog","setShowDialog","categoryName","editable","selected","CategoryDialogSelect","initialTextValue","c","classes","categorizeTransaction","textValue","setTextValue","includes","toUpperCase","fullScreen","edge","Close","autoFocus","List","ListItem","button","ListItemSecondaryAction","UpdateTransaction__QUERY","DebouncedTextField","helperText","setter","onBounce","debounced","_","PrettoSlider","withStyles","root","height","thumb","width","border","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","BalanceAdjustField","total","setBalanceAdjust","Number","toFixed","percentage","setPercentage","updateTransaction","gutterBottom","alignItems","newPercentage","newBalanceAdjust","toString","min","max","step","valueLabelDisplay","marks","valueLabelFormat","paddingBottom","GetEventLogs__QUERY","EventLog","entityId","eventLogs","log","eventName","createdTs","changes","change","index","ArchiveTransaction__QUERY","TransactionRowComponent","showDate","onToggleExpansion","setNotes","MUTATION","archiveTransaction","ARCHIVE_TRANSACTION_MUTATION","removed","Card","CardHeader","toLocaleDateString","timeZone","CardContent","float","Collapse","in","unmountOnExit","parseFloat","textAlign","Fab","Delete","areEqual","last","next","TransactionRow","TransactionRows","setExpanded","eventId","categories","is_selectable","isDarkMode","getItem","createMuiTheme","SignCheckpoint__QUERY","EventRow","eventType","checkpoint","eventIcon","batch","origin","plaid","wave","getEventIcon","eventButtonIcon","getEventButtonIcon","signedTs","signedBalance","batch_import","getEventDescription","CheckpointListItem","snackbar","SnackContext","checkpointId","SIGN_CHECKPOINT_MUTATION","refetchQueries","GET_EVENTS","signCheckpoint","success","main","GetEvents__QUERY","Timeline","LinearProgress","events","checkpoints","batches","sort","a","b","TransactionList","showTimeline","setShowTimeline","formType","setFormType","isTransactionLoading","fetchMore","Paper","maxWidth","amount","innerHeight","overflow","marginBottom","updateQuery","prev","fetchMoreResult","ICON_IDS","IconSelect","initialValue","background","paper","Tree","level","onSelectIcon","onSaveNode","paddingLeft","primary","ExpandLess","ExpandMore","timeout","disablePadding","child","NodeListItem","setEditable","pickingIcon","setPickingIcon","nodeName","setNodeName","setIconId","dense","role","onBlur","addNode","tree","visited","remaining","p","parent_id","parentNode","v","GetCategories__QUERY","CategoryPage","pop","getCategoryTree","is_active","__typename","keys","k","console","GetProfitAndLossChart__QUERY","HighchartsData","Highchart","Highcharts","HighchartsDrilldown","sixMonthsAgo","setDate","PnlChart","initial","chart","text","xAxis","yAxis","align","labels","tooltip","valueSuffix","plotOptions","bar","dataLabels","enabled","column","allowPointSelect","click","onClickColumn","legend","layout","verticalAlign","y","floating","borderWidth","shadow","credits","titled","u","profitAndLossChart","routes","linkText","ThemeProvider","setItem","redirectToLoginIfUnauthenticated","ReactDOM","document","getElementById","UrlPathEnum","Root","LoginPage","TablesPage","createBrowserHistory","isLocal","port","protocol","hostname"],"mappings":"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","file":"app.js","sourcesContent":["\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetEvents\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpoints\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"batches\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"origin\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"userId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":205}};\n    doc.loc.source = {\"body\":\"query GetEvents {\\n  checkpoints {\\n    id\\n    eventType\\n    createdTs\\n    signedTs\\n    signedBalance\\n  }\\n  batches {\\n    id\\n    eventType\\n    createdTs\\n    origin\\n    userId\\n    startDate\\n    endDate\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"GetEvents\"] = oneQuery(doc, \"GetEvents\");\n        \n","import * as React from 'react'\nimport { hot } from 'react-hot-loader'\nimport { ApolloProvider } from '@apollo/client'\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { getClient, LoginForm } from 'rice-instructor'\nimport { Home } from './Home'\nimport { BASE_URL } from '@src/history'\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/LoginPage\">\n            <LoginForm onLogin={`${BASE_URL}/login`} />\n          </Route>\n          <Route path=\"/\" component={Home}></Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  )\n}\nconst client = getClient({\n  uri: `${BASE_URL}/graphql`,\n})\nexport const App = hot(module)(() => (\n  <ApolloProvider client={client}>\n    <Routes />\n  </ApolloProvider>\n))\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ImportWaveTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"importFromWave\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":244}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation ImportWaveTransactions($startDate: String!, $endDate: String!) {\\n  importFromWave(startDate: $startDate, endDate: $endDate) {\\n    isOk\\n    transactions {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"ImportWaveTransactions\"] = oneQuery(doc, \"ImportWaveTransactions\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetLatestImportDate\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"latestImportDate\"},\"arguments\":[],\"directives\":[]}]}}],\"loc\":{\"start\":0,\"end\":49}};\n    doc.loc.source = {\"body\":\"query GetLatestImportDate {\\n  latestImportDate\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"GetLatestImportDate\"] = oneQuery(doc, \"GetLatestImportDate\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"TransactionFilters\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"parent_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"iconId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_selectable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":306}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nquery GetTransactions($filters: TransactionFilters!) {\\n  balance {\\n    id\\n    amount\\n  }\\n  transactions(filters: $filters) {\\n    ...FragmentTransaction\\n  }\\n  categories {\\n    id\\n    description\\n    name\\n    parent_id\\n    iconId\\n    is_selectable\\n    is_active\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"GetTransactions\"] = oneQuery(doc, \"GetTransactions\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransactionInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":207}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation CreateTransaction($input: CreateTransactionInput!) {\\n  createTransaction(input: $input) {\\n    isOk\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"CreateTransaction\"] = oneQuery(doc, \"CreateTransaction\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"AcceptPrediction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"acceptPrediction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":219}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation AcceptPrediction($id: Int!) {\\n  acceptPrediction(id: $id) {\\n    isOk\\n    balance {\\n      id\\n      amount\\n    }\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"AcceptPrediction\"] = oneQuery(doc, \"AcceptPrediction\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"CategorizeTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categorizeTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":231}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation CategorizeTransaction($id: Int!, $categoryId: Int!) {\\n  categorizeTransaction(id: $id, categoryId: $categoryId) {\\n    isOk\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"CategorizeTransaction\"] = oneQuery(doc, \"CategorizeTransaction\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateTransactionInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":249}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation UpdateTransaction($input: UpdateTransactionInput!) {\\n  updateTransaction(input: $input) {\\n    isOk\\n    balance {\\n      id\\n      amount\\n    }\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"UpdateTransaction\"] = oneQuery(doc, \"UpdateTransaction\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetEventLogs\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"EventLogFilters\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventLogs\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"actorId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"entityId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"changes\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":160}};\n    doc.loc.source = {\"body\":\"query GetEventLogs($filters: EventLogFilters!) {\\n  eventLogs(filters: $filters) {\\n    id\\n    actorId\\n    eventName\\n    entityId\\n    createdTs\\n    changes\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"GetEventLogs\"] = oneQuery(doc, \"GetEventLogs\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ArchiveTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"archiveTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":88}};\n    doc.loc.source = {\"body\":\"mutation ArchiveTransaction($id: Int!) {\\n  archiveTransaction(id: $id) {\\n    isOk\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"ArchiveTransaction\"] = oneQuery(doc, \"ArchiveTransaction\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"SignCheckpoint\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signCheckpoint\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpoint\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"groupId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":178}};\n    doc.loc.source = {\"body\":\"mutation SignCheckpoint($id: Int!) {\\n  signCheckpoint(id: $id) {\\n    isOk\\n    checkpoint {\\n      id\\n      signedTs\\n      signedById\\n      groupId\\n      signedBalance\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"SignCheckpoint\"] = oneQuery(doc, \"SignCheckpoint\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetCategories\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"parent_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"iconId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_selectable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":132}};\n    doc.loc.source = {\"body\":\"query GetCategories {\\n  categories {\\n    id\\n    description\\n    name\\n    parent_id\\n    iconId\\n    is_selectable\\n    is_active\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"GetCategories\"] = oneQuery(doc, \"GetCategories\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetProfitAndLossChart\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"profitAndLossChart\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"series\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"y\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":215}};\n    doc.loc.source = {\"body\":\"query GetProfitAndLossChart($startDate: String!, $endDate: String!) {\\n  profitAndLossChart(startDate: $startDate, endDate: $endDate) {\\n    series {\\n      name\\n      data {\\n        name\\n        y\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"GetProfitAndLossChart\"] = oneQuery(doc, \"GetProfitAndLossChart\");\n        \n","import { Theme, makeStyles, createStyles } from '@material-ui/core'\n\nexport const isWide = window.innerWidth > 600\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      position: 'relative',\n    },\n    header: {\n      backgroundColor: theme.palette.info.light,\n    },\n    disabled: {\n      opacity: '0.5',\n      backgroundColor: 'rgba(0, 0, 0, 0.12)',\n      cursor: 'not-allowed',\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: '100%',\n    },\n  }),\n)\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  ImportWaveTransactions, ImportWaveTransactionsVariables,\n} from '@src/queries/__generated__/ImportWaveTransactions'\nimport ImportWaveTransactions__QUERY from '@src/queries/ImportWaveTransactions.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/ImportWaveTransactions'\n\nexport const QUERY = ImportWaveTransactions__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ImportWaveTransactions, ImportWaveTransactionsVariables>,\n) {\n  return useMutation<ImportWaveTransactions, ImportWaveTransactionsVariables>(QUERY, options)\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetLatestImportDate, \n} from '@src/queries/__generated__/GetLatestImportDate'\nimport GetLatestImportDate__QUERY from '@src/queries/GetLatestImportDate.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/GetLatestImportDate'\n\nexport const QUERY = GetLatestImportDate__QUERY\nexport type GetLatestImportDateVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options?: QueryHookOptions<GetLatestImportDate, GetLatestImportDateVariables>,\n) {\n  return useQuery<GetLatestImportDate, GetLatestImportDateVariables>(QUERY, options)\n}\n","import { Button, Grid, TextField } from '@material-ui/core'\nimport * as React from 'react'\nimport { isWide } from '@src/styles'\nimport { useApolloQuery } from '@src/queries/__generated__/ImportWaveTransactions.hooks'\nimport { useApolloQuery as GetLatestImportDate } from '@src/queries/__generated__/GetLatestImportDate.hooks'\n\nconst today = new Date().toISOString().slice(0, 10)\n\nconst ImportButton: React.FC<{ onClose: () => void; startDate: string; endDate: string }> = ({\n  onClose,\n  startDate,\n  endDate,\n}) => {\n  const [importWaveTransactions, { loading }] = useApolloQuery({})\n\n  return (\n    <Button\n      fullWidth={!isWide}\n      onClick={() =>\n        importWaveTransactions({\n          variables: {\n            startDate,\n            endDate,\n          },\n        }).then((res) => {\n          onClose()\n          window.location.reload()\n        })\n      }\n      style={{ marginTop: '10px' }}\n      color=\"primary\"\n      variant=\"contained\"\n    >\n      {loading ? 'importing ...' : 'Import'}\n    </Button>\n  )\n}\n\nexport const ImportForm = (props: { onClose: () => void }) => {\n  const { data } = GetLatestImportDate({})\n  if (!data) return <div></div>\n\n  return <ImportFormComponent onClose={props.onClose} initialStartDate={data.latestImportDate} />\n}\n\nconst ImportFormComponent = (props: { onClose: () => void; initialStartDate: string }) => {\n  const [startDate, setStartDate] = React.useState(props.initialStartDate)\n  const [endDate, setEndDate] = React.useState(today)\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={4}>\n        <TextField\n          fullWidth={!isWide}\n          type=\"date\"\n          label=\"from\"\n          value={startDate}\n          onChange={(e) => setStartDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <TextField\n          fullWidth={!isWide}\n          type=\"date\"\n          label=\"to\"\n          defaultValue={today}\n          onChange={(e) => setEndDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <ImportButton onClose={props.onClose} startDate={startDate} endDate={endDate} />\n      </Grid>\n    </Grid>\n  )\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetTransactions, GetTransactionsVariables,\n} from '@src/queries/__generated__/GetTransactions'\nimport GetTransactions__QUERY from '@src/queries/GetTransactions.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/GetTransactions'\n\nexport const QUERY = GetTransactions__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetTransactions, GetTransactionsVariables>,\n) {\n  return useQuery<GetTransactions, GetTransactionsVariables>(QUERY, options)\n}\n","import { TextField, Button, Dialog, DialogContent, DialogTitle, Icon } from '@material-ui/core'\n\nimport * as React from 'react'\n\nimport Autocomplete from '@material-ui/lab/Autocomplete'\n\ninterface DialogSelectProps {\n  choices: Array<{\n    value: string | number\n    iconId?: string\n    label: string\n  }>\n  onSelectOption: (option) => void\n  value: string | null | number\n}\nconst getInitialOption = (\n  value: string | number | null,\n  choices: Array<{\n    value: string | number\n    iconId?: string\n    label: string\n  }>,\n) => {\n  if (!value) return null\n  const option = choices.find((x) => x.value === value)\n  if (!option) {\n    throw new Error(`${value} not found `)\n  }\n\n  return option\n}\nconst isWide = window.innerWidth > 600\nexport const DialogSelect = (props: DialogSelectProps) => {\n  const { choices, value, onSelectOption } = props\n  const [isOpen, setIsOpen] = React.useState(false)\n  const initialOption = getInitialOption(value, choices)\n  return (\n    <div>\n      <Button\n        size={isWide ? 'large' : 'small'}\n        onClick={() => setIsOpen(true)}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        {initialOption ? initialOption.label : 'Select a Category'}\n        {initialOption ? <Icon style={{ marginRight: '5px' }}>{initialOption.iconId}</Icon> : null}\n      </Button>\n      <Dialog open={isOpen} fullWidth onClose={() => setIsOpen(false)}>\n        <DialogTitle>Select a Category</DialogTitle>\n        <DialogContent>\n          <Autocomplete\n            options={choices}\n            getOptionLabel={(option) => option.label}\n            getOptionSelected={(option, value) => {\n              return option.value === value.value\n            }}\n            onChange={(event, newValue) => {\n              onSelectOption(newValue)\n              setIsOpen(false)\n            }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Select a category\" margin=\"normal\" />\n            )}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  CreateTransaction, CreateTransactionVariables,\n} from '@src/queries/__generated__/CreateTransaction'\nimport CreateTransaction__QUERY from '@src/queries/CreateTransaction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/CreateTransaction'\n\nexport const QUERY = CreateTransaction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<CreateTransaction, CreateTransactionVariables>,\n) {\n  return useMutation<CreateTransaction, CreateTransactionVariables>(QUERY, options)\n}\n","import querystring from 'querystring'\n\nexport function stringToDate(dateString: string): Date {\n  const [year, month, day] = dateString.split('-').map((v) => parseInt(v))\n  const ret = new Date(year, month - 1, day)\n  return ret\n}\nexport function formatDate(d: string): string {\n  const date = new Date(d)\n  return date.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    timeZone: 'UTC',\n  })\n}\n\nexport const getIsoDateString = (d: Date) => {\n  const year = d.getFullYear()\n  const month = d.getMonth() < 9 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1\n  const day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport function getToday(): string {\n  const today = new Date()\n  const year = today.getFullYear()\n  const month = today.getMonth() < 9 ? '0' + (today.getMonth() + 1) : today.getMonth() + 1\n  const day = today.getDate() < 10 ? '0' + today.getDate() : today.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport interface Identifiable {\n  id: string | number\n}\nexport const mergeArrays = <T extends Identifiable>(\n  existing: Array<T>,\n  incoming: Array<T>,\n  prependOrAppend: 'prepend' | 'append',\n): Array<T> => {\n  return incoming.reduce(\n    function (accumulator: Array<T>, value: T) {\n      const index = existing.findIndex((x) => x.id === value.id)\n      if (index >= 0) {\n        const ret = [\n          ...accumulator.slice(0, index),\n          value,\n          ...accumulator.slice(index + 1, accumulator.length),\n        ]\n        return ret\n      } else {\n        return prependOrAppend === 'append' ? [...accumulator, value] : [value, ...accumulator]\n      }\n    },\n    [...existing],\n  )\n}\n\nexport function parseSearchString(search: string) {\n  const params = querystring.parse(search.split('?')[1])\n  return params\n}\n","import {\n  Button,\n  Divider,\n  ExpansionPanel,\n  ExpansionPanelActions,\n  ExpansionPanelSummary,\n  Grid,\n  TextField,\n} from '@material-ui/core'\nimport * as React from 'react'\nimport {\n  QUERY as GET_TRANSACTIONS_QUERY,\n  GetTransactions,\n  GetTransactions_categories as ICategory,\n} from '@src/queries/__generated__/GetTransactions.hooks'\nimport { DialogSelect } from '@src/components/DialogSelect'\nimport { useApolloQuery } from '@src/queries/__generated__/CreateTransaction.hooks'\nimport { CreateTransactionInput } from '@src/types/__generated__/globalTypes'\n\nimport { getToday } from '@src/utils'\n\ninterface NewTransactionFormProps {\n  onClose: () => void\n  selectableCategories: Array<ICategory>\n}\n\ntype FieldName =\n  | 'issuedDate'\n  | 'merchantName'\n  | 'notes'\n  | 'categoryId'\n  | 'totalAmount'\n  | 'balanceAdjust'\n\nconst fieldConfig = {\n  issuedDate: { type: 'date', required: true },\n  merchantName: { type: 'text', required: true },\n  notes: { type: 'text', required: false },\n  categoryId: { type: 'number', required: false },\n  balanceAdjust: { type: 'number', required: false },\n  totalAmount: { type: 'number', required: true },\n}\n\nconst FieldInput = (props: {\n  fieldName: FieldName\n  updateField: (fieldName) => (event) => void\n  instance: CreateTransactionInput\n}) => {\n  const { fieldName, updateField, instance } = props\n  const config = fieldConfig[fieldName]\n  let error = false\n  if (config.required && !instance[fieldName]) {\n    error = true\n  } else if (config.required && config.type === 'number' && !instance[fieldName]) {\n    error = true\n  }\n\n  return (\n    <TextField\n      type={config.type}\n      required={config.required}\n      error={error}\n      label={fieldName}\n      value={instance[fieldName]}\n      onChange={updateField(fieldName)}\n    />\n  )\n}\nconst initialForm: CreateTransactionInput = {\n  issuedDate: getToday(),\n  merchantName: '',\n  notes: '',\n  categoryId: null,\n  totalAmount: '0',\n  balanceAdjust: '0',\n}\n\nexport const NewTransactionForm: React.FC<NewTransactionFormProps> = (props) => {\n  const { selectableCategories, onClose } = props\n  const [formData, setFormData] = React.useState<CreateTransactionInput>(initialForm)\n  const [createTransaction, { error, loading }] = useApolloQuery({\n    update(cache, { data }) {\n      const variables = {\n        // TODO: send real offset and limit\n        filters: { offset: 0, limit: 40 },\n      }\n      if (data?.createTransaction?.isOk) {\n        const cached = cache.readQuery<GetTransactions>({\n          query: GET_TRANSACTIONS_QUERY,\n          variables,\n        })\n        cache.writeQuery({\n          query: GET_TRANSACTIONS_QUERY,\n          data: Object.assign({}, cached, {\n            transactions: [data.createTransaction.transaction, ...cached!.transactions],\n          }),\n          variables,\n        })\n      }\n    },\n  })\n\n  if (error) {\n    return <div>{error.message}</div>\n  }\n\n  const createNewTransaction = () => {\n    createTransaction({\n      variables: {\n        input: {\n          issuedDate: formData.issuedDate,\n          totalAmount: formData.totalAmount,\n          merchantName: formData.merchantName,\n          balanceAdjust: formData.balanceAdjust || '0',\n          categoryId: formData.categoryId,\n          notes: formData.notes,\n        },\n      },\n    })\n    onClose()\n  }\n  const updateField = (fieldName: FieldName) => {\n    const old = formData\n    return (event) => {\n      const newState = Object.assign({}, old, {\n        [fieldName]: event.target.value,\n      })\n      setFormData(newState)\n    }\n  }\n  const isValid = () => {\n    const t = formData\n    return [t.issuedDate, t.merchantName, +t.totalAmount].every(Boolean)\n  }\n  const transaction = formData\n  return (\n    <div style={{ paddingTop: '10px' }}>\n      <ExpansionPanel expanded={true}>\n        <ExpansionPanelSummary>\n          <Grid container spacing={10}>\n            <Grid item xs={6} sm={4}>\n              <FieldInput instance={transaction} fieldName=\"issuedDate\" updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"merchantName\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"totalAmount\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <DialogSelect\n                value={transaction.categoryId || ''}\n                onSelectOption={(option) => {\n                  const newState = Object.assign({}, formData, {\n                    categoryId: option.value,\n                  })\n                  setFormData(newState)\n                }}\n                choices={selectableCategories.map((cat) => {\n                  return {\n                    value: cat.id,\n                    label: cat.description,\n                    iconId: cat.iconId || '',\n                  }\n                })}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput fieldName=\"notes\" instance={transaction} updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"balanceAdjust\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <Divider />\n        <ExpansionPanelActions>\n          <Button\n            size=\"small\"\n            onClick={() => {\n              setFormData(initialForm)\n              onClose()\n            }}\n          >\n            Cancel\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={createNewTransaction} disabled={!isValid()}>\n            {loading ? `saving ...` : `Save`}\n          </Button>\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\n\ninterface SimpleMenuProps {\n  buttonText: React.ReactNode\n  children: React.ReactNode\n}\nconst SimpleMenu: React.FC<SimpleMenuProps> = ({ children, buttonText }) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        {buttonText}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {children}\n      </Menu>\n    </div>\n  )\n}\nexport default SimpleMenu\n","import {\n  useLocation as useReactRouterLocation,\n  useHistory as useReactRouterHistory,\n} from 'react-router-dom'\nimport { parseSearchString } from '@src/utils'\n\ninterface SearchFilters {\n  batchId?: number\n  checkpointId?: number\n  searchText?: string\n  categoryId?: number\n  sharedOnly?: boolean\n  uncategorizedOnly?: boolean\n}\nexport const useHistory = () => {\n  const history = useReactRouterHistory()\n  const push = (pathname: string, filters?: SearchFilters) => {\n    const qs = JSON.stringify(filters)\n    history.push(`${pathname}?filters=${qs}`)\n  }\n  return { _history: history, push }\n}\n\nexport const useLocation = () => {\n  const location = useReactRouterLocation()\n  const params = parseSearchString(location.search)\n  let filters: SearchFilters = {}\n  if (params && params.filters) {\n    filters = JSON.parse(params.filters as string)\n  }\n  return { ...location, filters }\n}\n","import * as React from 'react'\nimport {\n  DialogContentText,\n  DialogTitle,\n  Icon,\n  InputLabel,\n  IconButton,\n  FormControl,\n  MenuItem,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  TextField,\n  Select,\n  Dialog,\n  DialogActions,\n  DialogContent,\n} from '@material-ui/core'\nimport { useHistory, useLocation } from '@src/App/hooks'\n\ninterface Prop {\n  categoryChoices: Array<{ id: number; label: string }>\n}\n\nexport const FilterDialog: React.FC<Prop> = ({ categoryChoices }) => {\n  const history = useHistory()\n  const location = useLocation()\n\n  const filters = location.filters\n  const [open, setOpen] = React.useState(false)\n  const [batchId, setBatchId] = React.useState(location.filters.batchId)\n  const [sharedOnly, setSharedOnly] = React.useState(filters.sharedOnly)\n  const [uncategorizedOnly, setUncategorizedOnly] = React.useState(filters.uncategorizedOnly)\n  const [searchText, setSearchText] = React.useState(filters.searchText)\n  const [categoryId, setCategoryId] = React.useState(filters.categoryId)\n\n  const clearFilters = () => {\n    setBatchId(undefined)\n    setSharedOnly(undefined)\n    setUncategorizedOnly(undefined)\n    setSearchText(undefined)\n    setCategoryId(undefined)\n  }\n  const resetFilters = () => {\n    setBatchId(filters.batchId)\n    setSharedOnly(filters.sharedOnly)\n    setSearchText(filters.searchText)\n    setCategoryId(filters.categoryId)\n    setUncategorizedOnly(filters.uncategorizedOnly)\n  }\n\n  const handleClickOpen = () => {\n    resetFilters()\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  if (!open) {\n    return (\n      <IconButton onClick={handleClickOpen}>\n        <Icon color=\"primary\">filter_alt</Icon>\n      </IconButton>\n    )\n  }\n  return (\n    <div>\n      <IconButton onClick={handleClickOpen}>\n        <Icon color=\"primary\">filter_alt</Icon>\n      </IconButton>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Filter Transactions</DialogTitle>\n        {open ? (\n          <DialogContent>\n            <DialogContentText>\n              Search transactions by category, text (merchant name and notes). By checking \"Shared\",\n              you can limit the results to be shared transactions only.\n            </DialogContentText>\n            <FormControl style={{ minWidth: 120 }}>\n              <InputLabel>Category</InputLabel>\n              <Select\n                id=\"categoryId\"\n                value={categoryId || ''}\n                onChange={(e) => setCategoryId(parseInt(e.target.value as string))}\n              >\n                <MenuItem value={''}>None</MenuItem>\n                {categoryChoices.map((choice) => (\n                  <MenuItem key={choice.id} value={choice.id}>\n                    {choice.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <TextField\n              onChange={(e) => setSearchText(e.target.value)}\n              value={searchText || ''}\n              margin=\"dense\"\n              id=\"searchText\"\n              label=\"Text Search\"\n              type=\"text\"\n              fullWidth\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={sharedOnly}\n                  onChange={(e) => setSharedOnly(e.target.checked)}\n                  name=\"sharedOnly\"\n                />\n              }\n              label=\"Shared\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={uncategorizedOnly}\n                  onChange={(e) => setUncategorizedOnly(e.target.checked)}\n                  name=\"uncategorizedOnly\"\n                />\n              }\n              label=\"Uncategorized\"\n            />\n          </DialogContent>\n        ) : null}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={clearFilters} color=\"primary\">\n            Reset\n          </Button>\n          <Button\n            onClick={() => {\n              history.push('/TransactionList', {\n                batchId,\n                searchText,\n                sharedOnly,\n                categoryId,\n                uncategorizedOnly,\n              })\n              handleClose()\n            }}\n            color=\"primary\"\n          >\n            Apply\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import {\n  AppBar,\n  Icon,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@material-ui/core'\nimport { Add, AttachMoney, History, Waves } from '@material-ui/icons'\nimport * as React from 'react'\nimport IconMenu from '@src/components/IconMenu'\nimport { FilterDialog } from '@src/TransactionList/FilterDialog'\n\ninterface Prop {\n  balance: string\n  showForm: (formType: string) => void\n  toggleTimeline: () => void\n  categoryChoices: Array<{ id: number; label: string }>\n}\n\nexport const TransactionListAppBar = (props: Prop) => {\n  const { categoryChoices } = props\n  const showNewTransactionForm = () => {\n    props.showForm('transaction')\n  }\n\n  const showWaveImportForm = () => {\n    props.showForm('wave')\n  }\n\n  const toggleTimeline = () => {\n    props.toggleTimeline()\n  }\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\">\n      <Toolbar>\n        <Tooltip title=\"Timeline\">\n          <IconButton onClick={toggleTimeline}>\n            <History />\n          </IconButton>\n        </Tooltip>\n        {props.balance ? (\n          <Typography variant=\"body1\" key=\"balance\">{`Balance: $${props.balance}`}</Typography>\n        ) : null}\n        <div style={{ flex: 1 }} />\n        <FilterDialog categoryChoices={categoryChoices} />\n        <IconMenu buttonText={<Add />}>\n          <MenuItem key=\"new-transaction-menu\" onClick={showNewTransactionForm}>\n            <ListItemIcon>\n              <AttachMoney />\n            </ListItemIcon>\n            <ListItemText>Transaction</ListItemText>\n          </MenuItem>\n          <MenuItem key=\"new-wave-menu\" onClick={showWaveImportForm}>\n            <ListItemIcon>\n              <Waves color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText>Wave Import</ListItemText>\n          </MenuItem>\n        </IconMenu>\n        <IconButton\n          onClick={() => {\n            sessionStorage.removeItem('authToken')\n            window.location.href = '/'\n          }}\n        >\n          <Icon className=\"material-icons\">exit_to_app</Icon>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  AcceptPrediction, AcceptPredictionVariables,\n} from '@src/queries/__generated__/AcceptPrediction'\nimport AcceptPrediction__QUERY from '@src/queries/AcceptPrediction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/AcceptPrediction'\n\nexport const QUERY = AcceptPrediction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<AcceptPrediction, AcceptPredictionVariables>,\n) {\n  return useMutation<AcceptPrediction, AcceptPredictionVariables>(QUERY, options)\n}\n","import * as React from 'react'\n\nimport { ButtonGroup, Button, Typography } from '@material-ui/core'\nimport { useApolloQuery } from '@src/queries/__generated__/AcceptPrediction.hooks'\nimport { GetTransactions_categories as ICategory } from '@src/queries/__generated__/GetTransactions.hooks'\n\ninterface SmartCatProp {\n  predicatedSplit: boolean | null\n  predicatedCategory: number | null\n  transactionId: number\n  openCategoryDialog: () => void\n\n  selectableCategories: Array<ICategory>\n}\nconst isWide = window.innerWidth > 600\nexport const SmartCatField: React.FC<SmartCatProp> = (props) => {\n  const {\n    predicatedSplit,\n    selectableCategories,\n    predicatedCategory,\n    transactionId,\n    openCategoryDialog,\n  } = props\n\n  const category = selectableCategories.find((x) => x.id === predicatedCategory)\n  if (!category) {\n    throw new Error('cannot find predicated category')\n  }\n\n  const [acceptPrediction, { loading, error }] = useApolloQuery({\n    variables: { id: transactionId },\n  })\n  const split = predicatedSplit ? 'Split ' : ''\n  if (error) return <div>{error.message}</div>\n  if (loading) return <div>saving...</div>\n  return (\n    <div>\n      <Typography variant={isWide ? 'body1' : 'caption'}>{`${split}${category.name}?`}</Typography>\n      <ButtonGroup aria-label=\"outlined primary button group\">\n        <Button size=\"small\" onClick={(e) => acceptPrediction()} variant=\"contained\">\n          YES\n        </Button>\n        <Button\n          size=\"small\"\n          onClick={(e) => openCategoryDialog()}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          NO\n        </Button>\n      </ButtonGroup>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Link, TypographyProps, Typography } from '@material-ui/core'\n\nconst isWide = window.innerWidth > 600\n\nexport const ResponsiveLabel = (props: TypographyProps) => {\n  return <Typography variant={isWide ? 'body1' : 'caption'} {...props} />\n}\ninterface ResponsiveLinkProps extends TypographyProps {\n  disabled?: boolean\n}\n\nexport const ResponsiveLink = (props: ResponsiveLinkProps) => {\n  const { onClick, children, disabled, ...rest } = props\n  return (\n    <ResponsiveLabel {...rest}>\n      {disabled === true ? (\n        children\n      ) : (\n        <Link color={rest.color} onClick={onClick}>\n          {children}\n        </Link>\n      )}\n    </ResponsiveLabel>\n  )\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  CategorizeTransaction, CategorizeTransactionVariables,\n} from '@src/queries/__generated__/CategorizeTransaction'\nimport CategorizeTransaction__QUERY from '@src/queries/CategorizeTransaction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/CategorizeTransaction'\n\nexport const QUERY = CategorizeTransaction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<CategorizeTransaction, CategorizeTransactionVariables>,\n) {\n  return useMutation<CategorizeTransaction, CategorizeTransactionVariables>(QUERY, options)\n}\n","import * as React from 'react'\nimport {\n  AppBar,\n  ListItemSecondaryAction,\n  Icon,\n  TextField,\n  ListItemText,\n  List,\n  ListItem,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  Dialog,\n  DialogContent,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\n\nimport { SmartCatField } from './SmartCatField'\nimport { useStyles } from '@src/styles'\nimport { ResponsiveLink } from '@src/components/ResponsiveLabel'\nimport {\n  GetTransactions_categories as ICategory,\n  GetTransactions_transactions as IUserTransaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\n\nimport { useApolloQuery } from '@src/queries/__generated__/CategorizeTransaction.hooks'\n\ninterface CategoryFieldProp {\n  transaction: IUserTransaction\n  selectableCategories: Array<ICategory>\n}\n\nexport const CategoryField: React.FC<CategoryFieldProp> = ({\n  selectableCategories,\n  transaction,\n}) => {\n  const [showDialog, setShowDialog] = React.useState(false)\n\n  const category = selectableCategories.find((x) => x.id === transaction.categoryId)\n  const categoryName = category ? category.name : '????'\n\n  return (\n    <div>\n      {!transaction.categoryId && transaction.predicatedCategory ? (\n        <SmartCatField\n          openCategoryDialog={() => setShowDialog(true)}\n          predicatedSplit={transaction.predicatedSplit}\n          predicatedCategory={transaction.predicatedCategory}\n          selectableCategories={selectableCategories}\n          transactionId={transaction.id}\n        />\n      ) : (\n        <ResponsiveLink\n          color=\"textPrimary\"\n          disabled={!transaction.editable}\n          onClick={() => setShowDialog(true)}\n        >\n          {categoryName}\n        </ResponsiveLink>\n      )}\n      {showDialog ? (\n        <CategoryDialogSelect\n          transactionId={transaction.id}\n          selectableCategories={selectableCategories}\n          selected={transaction.categoryId}\n          showDialog={showDialog}\n          setShowDialog={setShowDialog}\n        />\n      ) : null}\n    </div>\n  )\n}\n\ninterface CategoryDialogSelectProps {\n  setShowDialog: (boolean) => void\n  showDialog: boolean\n  selected: number | null\n  transactionId: number\n  selectableCategories: Array<ICategory>\n}\nconst CategoryDialogSelect: React.FC<CategoryDialogSelectProps> = ({\n  showDialog,\n  setShowDialog,\n  selected,\n  transactionId,\n  selectableCategories,\n}) => {\n  const initialTextValue = selectableCategories.find((c) => c.id === selected)?.name || ''\n  const classes = useStyles()\n  const [categorizeTransaction, { loading }] = useApolloQuery({})\n  const [textValue, setTextValue] = React.useState<string>(initialTextValue)\n\n  const choices =\n    !textValue.length || textValue === initialTextValue\n      ? selectableCategories\n      : selectableCategories.filter((c) => c.name.includes(textValue.toUpperCase()))\n  return (\n    <Dialog fullScreen={true} onClose={() => setShowDialog(false)} open={showDialog}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => setShowDialog(false)}\n            aria-label=\"close\"\n          >\n            <Close />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Select a Category\n          </Typography>\n          <Button autoFocus color=\"inherit\" onClick={() => setShowDialog(false)}>\n            Cancel\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <DialogContent>\n        {loading ? (\n          <div>loading...</div>\n        ) : (\n          <TextField\n            value={textValue}\n            onChange={(e) => {\n              setTextValue(e.target.value)\n            }}\n            variant=\"outlined\"\n          />\n        )}\n        <List>\n          {choices.map((c) => (\n            <ListItem\n              key={c.id}\n              button\n              selected={c.id === selected}\n              onClick={(e) =>\n                categorizeTransaction({\n                  variables: {\n                    id: transactionId,\n                    categoryId: c.id,\n                  },\n                }).then(() => setShowDialog(false))\n              }\n            >\n              <ListItemText>{c.name}</ListItemText>\n              <ListItemSecondaryAction>\n                <Icon color=\"action\">{c.iconId}</Icon>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  UpdateTransaction, UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction'\nimport UpdateTransaction__QUERY from '@src/queries/UpdateTransaction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/UpdateTransaction'\n\nexport const QUERY = UpdateTransaction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<UpdateTransaction, UpdateTransactionVariables>,\n) {\n  return useMutation<UpdateTransaction, UpdateTransactionVariables>(QUERY, options)\n}\n","import * as React from 'react'\nimport * as _ from 'lodash'\nimport { TextField } from '@material-ui/core'\n\ninterface IDebouncedTextField {\n  helperText?: string\n  onBounce: (newValue) => void\n  setter: (newValue) => void\n  type?: string\n  value?: any\n  loading?: boolean\n  fullWidth?: boolean\n  label?: string\n}\n\nexport const DebouncedTextField: React.FunctionComponent<IDebouncedTextField> = ({\n  helperText,\n  setter,\n  onBounce,\n  label,\n  type,\n  value,\n  loading,\n  fullWidth,\n}) => {\n  const debounced = React.useCallback(_.debounce(onBounce, 1000), [])\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      error={!!loading}\n      fullWidth={fullWidth}\n      label={label}\n      helperText={loading ? 'saving ...' : helperText}\n      type={type}\n      onChange={(event) => {\n        setter(event.target.value)\n        debounced(event.target.value)\n      }}\n      value={value}\n    />\n  )\n}\n","import * as React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Slider from '@material-ui/core/Slider'\nimport { useApolloQuery } from '@src/queries/__generated__/UpdateTransaction.hooks'\nimport { DebouncedTextField } from '@src/components/DebouncedTextField'\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#3f51b5',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider)\n\nconst getPercentage = (balance: number, total: number) => {\n  return Number(((balance / total) * 100).toFixed(2))\n}\n\nexport const BalanceAdjustField = (props: {\n  transactionId\n  total: number\n  balanceAdjust: number\n}) => {\n  const [balanceAdjust, setBalanceAdjust] = React.useState<number>(props.balanceAdjust)\n  const [percentage, setPercentage] = React.useState<number>(\n    getPercentage(balanceAdjust, props.total),\n  )\n  const [updateTransaction, { loading, error }] = useApolloQuery({})\n\n  const handleSliderChange = (event: any, newPercentage: number) => {\n    const newBalanceAdjust = (newPercentage * props.total) / 100\n    setPercentage(newPercentage)\n    setBalanceAdjust(newBalanceAdjust)\n    updateTransaction({\n      variables: {\n        input: {\n          id: props.transactionId,\n          balanceAdjust: newBalanceAdjust.toString(),\n        },\n      },\n    })\n  }\n  if (error) return <div>{error.message}</div>\n\n  return (\n    <div>\n      <Typography color=\"textSecondary\" id=\"input-slider\" gutterBottom>\n        Balance Adjust\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs={9}>\n          <PrettoSlider\n            style={{ marginTop: '1.5rem' }}\n            value={typeof percentage === 'number' ? percentage : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n            defaultValue={0}\n            min={-100}\n            max={100}\n            step={null}\n            valueLabelDisplay=\"on\"\n            marks={[\n              { value: -100, label: '-100%' },\n              { value: -50, label: '-50%' },\n              { value: 0, label: '0%' },\n              { value: 50, label: '50%' },\n              { value: 100, label: '100%' },\n            ]}\n            valueLabelFormat={(value: number) => `${value}%`}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <div style={{ paddingBottom: '2rem' }}>\n            <DebouncedTextField\n              type=\"number\"\n              loading={loading}\n              value={balanceAdjust}\n              setter={(newValue) => {\n                setBalanceAdjust(newValue)\n                setPercentage((Number(newValue) / props.total) * 100)\n              }}\n              onBounce={(newValue) => {\n                updateTransaction({\n                  variables: {\n                    input: { id: props.transactionId, balanceAdjust: newValue as string },\n                  },\n                })\n              }}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetEventLogs, GetEventLogsVariables,\n} from '@src/queries/__generated__/GetEventLogs'\nimport GetEventLogs__QUERY from '@src/queries/GetEventLogs.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/GetEventLogs'\n\nexport const QUERY = GetEventLogs__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetEventLogs, GetEventLogsVariables>,\n) {\n  return useQuery<GetEventLogs, GetEventLogsVariables>(QUERY, options)\n}\n","import * as React from 'react'\nimport { Grid } from '@material-ui/core'\nimport { useApolloQuery } from '@src/queries/__generated__/GetEventLogs.hooks'\n\ninterface IEventLogProps {\n  transactionId: number\n}\nexport const EventLog = (props: IEventLogProps) => {\n  const { data } = useApolloQuery({\n    variables: {\n      filters: {\n        offset: 0,\n        limit: 10,\n        entityId: props.transactionId.toString(),\n      },\n    },\n  })\n  if (data) {\n    return (\n      <div>\n        {data.eventLogs.map((log) => (\n          <div key={log.id}>\n            <Grid container spacing={10}>\n              <Grid item xs={3} sm={3}>\n                <div>{log.eventName}</div>\n              </Grid>\n              <Grid item xs={3} sm={3}>\n                <div>{log.createdTs}</div>\n              </Grid>\n              <Grid item xs={6} sm={6}>\n                <div>\n                  {log.changes.map((change, index) => (\n                    <div key={index}>{change}</div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        ))}\n      </div>\n    )\n  }\n  return <div />\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  ArchiveTransaction, ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction'\nimport ArchiveTransaction__QUERY from '@src/queries/ArchiveTransaction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/ArchiveTransaction'\n\nexport const QUERY = ArchiveTransaction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ArchiveTransaction, ArchiveTransactionVariables>,\n) {\n  return useMutation<ArchiveTransaction, ArchiveTransactionVariables>(QUERY, options)\n}\n","import { Card, Collapse, CardHeader, CardContent, Fab, Grid, Typography } from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\nimport { useMutation } from '@apollo/client'\nimport * as _ from 'lodash'\nimport * as React from 'react'\nimport { CategoryField } from './CategoryField'\nimport { BalanceAdjustField } from './BalanceAdjustField'\nimport { EventLog } from './EventLog'\nimport { useStyles } from '@src/styles'\nimport { ResponsiveLink, ResponsiveLabel } from '@src/components/ResponsiveLabel'\nimport {\n  QUERY as MUTATION,\n  UpdateTransaction,\n  UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction.hooks'\nimport {\n  QUERY as GET_TRANSACTIONS_QUERY,\n  GetTransactions,\n  GetTransactions_categories,\n  GetTransactions_transactions as GetTransactions_transaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\nimport { DebouncedTextField } from '@src/components/DebouncedTextField'\nimport { formatDate } from '@src/utils'\n\nimport {\n  QUERY as ARCHIVE_TRANSACTION_MUTATION,\n  ArchiveTransaction,\n  ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction.hooks'\n\ninterface ITransactionRowProps {\n  transaction: GetTransactions_transaction\n  expanded: boolean\n  selectableCategories: Array<GetTransactions_categories>\n  onToggleExpansion: (event) => void\n  showDate: boolean\n}\n\nexport const TransactionRowComponent = (props: ITransactionRowProps) => {\n  const classes = useStyles()\n\n  const { showDate, selectableCategories, transaction, expanded, onToggleExpansion } = props\n  const [notes, setNotes] = React.useState(transaction.notes)\n\n  const [updateTransaction, { loading }] = useMutation<\n    UpdateTransaction,\n    UpdateTransactionVariables\n  >(MUTATION)\n  const [archiveTransaction] = useMutation<ArchiveTransaction, ArchiveTransactionVariables>(\n    ARCHIVE_TRANSACTION_MUTATION,\n    {\n      update(cache, { data }) {\n        const variables = {\n          // TODO: send real offset and limit\n          filters: { offset: 0, limit: 40 },\n        }\n        if (data?.archiveTransaction?.isOk) {\n          const cached = cache.readQuery<GetTransactions>({\n            query: GET_TRANSACTIONS_QUERY,\n            variables,\n          })\n          const removed = [...cached!.transactions]\n          _.remove(removed, (t) => t.id === transaction.id)\n          cache.writeQuery({\n            query: GET_TRANSACTIONS_QUERY,\n            data: Object.assign({}, cached, { transactions: removed }),\n            variables,\n          })\n        }\n      },\n    },\n  )\n\n  return (\n    <div>\n      <Card style={showDate ? { marginTop: '1rem' } : undefined}>\n        {showDate ? (\n          <CardHeader className={classes.header} title={formatDate(transaction.issuedDate)} />\n        ) : null}\n        <CardContent className={!transaction.editable ? classes.disabled : undefined}>\n          <Grid container spacing={10}>\n            <Grid item xs={4} sm={4}>\n              <CategoryField\n                transaction={transaction}\n                selectableCategories={selectableCategories}\n              />\n            </Grid>\n            <Grid item xs={5} sm={4}>\n              <ResponsiveLink\n                color=\"textPrimary\"\n                disabled={!transaction.editable}\n                onClick={onToggleExpansion}\n              >\n                {transaction.merchantName}\n              </ResponsiveLink>\n              <div>\n                <ResponsiveLabel color=\"textSecondary\">{transaction.notes}</ResponsiveLabel>\n              </div>\n            </Grid>\n            <Grid item xs={3} sm={4}>\n              <div style={{ float: 'right' }}>\n                <ResponsiveLabel>{`${transaction.totalAmount}`}</ResponsiveLabel>\n                <Typography\n                  variant=\"subtitle2\"\n                  style={{\n                    color: +transaction.balanceAdjust > 0 ? 'green' : 'red',\n                  }}\n                >\n                  {`${transaction.balanceAdjust}`}\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Collapse style={{ margin: '1rem' }} in={expanded} unmountOnExit>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={12}>\n              <BalanceAdjustField\n                transactionId={transaction.id}\n                balanceAdjust={Number(transaction.balanceAdjust)}\n                total={parseFloat(transaction.totalAmount)}\n              />\n            </Grid>\n            <Grid item xs={10} sm={11}>\n              <DebouncedTextField\n                fullWidth={true}\n                loading={loading}\n                label=\"Notes\"\n                value={notes}\n                setter={(newValue) => {\n                  setNotes(newValue)\n                }}\n                onBounce={(newValue) =>\n                  updateTransaction({\n                    variables: { input: { id: transaction.id, notes: newValue as string } },\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={2} sm={1} style={{ textAlign: 'right' }}>\n              <Fab\n                size=\"medium\"\n                color=\"secondary\"\n                aria-label=\"Delete\"\n                onClick={() =>\n                  archiveTransaction({\n                    variables: {\n                      id: transaction.id,\n                    },\n                  })\n                }\n              >\n                <Delete />\n              </Fab>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <EventLog transactionId={transaction.id}></EventLog>\n            </Grid>\n          </Grid>\n        </Collapse>\n      </Card>\n    </div>\n  )\n}\nconst areEqual = (last: ITransactionRowProps, next: ITransactionRowProps) => {\n  if (\n    _.isEqual(last.transaction, next.transaction) &&\n    last.expanded === next.expanded &&\n    last.selectableCategories.length === next.selectableCategories.length\n  ) {\n    return true\n  }\n  return false\n}\nconst TransactionRow = React.memo(TransactionRowComponent, areEqual)\n\n/*\n * This is a wrapper component that is used to control the expansion states of\n * the rows. We do not want a compolicated component to manage the expansion\n * state becaue the rerending will be too expensive.\n */\nexport const TransactionRows: React.FC<{\n  categories: Array<GetTransactions_categories>\n  transactions: Array<GetTransactions_transaction>\n}> = (props) => {\n  const [expanded, setExpanded] = React.useState<number | null>(null)\n  const handleChange = (eventId: number) => (event: React.ChangeEvent<{}>) => {\n    if (eventId === expanded) {\n      return setExpanded(null)\n    }\n    setExpanded(eventId)\n  }\n  return (\n    <>\n      {props.transactions.map((t, index) => {\n        let showDate = false\n        if (index > 0) {\n          const prev = props.transactions[index - 1]\n          showDate = prev.issuedDate !== t.issuedDate\n        } else {\n          // First transaction always show date\n          showDate = true\n        }\n        return (\n          <TransactionRow\n            showDate={showDate}\n            selectableCategories={props.categories.filter((c) => c.is_selectable)}\n            expanded={expanded === t.id}\n            key={t.id}\n            transaction={t}\n            onToggleExpansion={handleChange(t.id)}\n          />\n        )\n      })}\n    </>\n  )\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nexport const isDarkMode = sessionStorage.getItem('colorTheme') === 'dark'\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: isDarkMode ? 'dark' : 'light',\n  },\n})\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  SignCheckpoint, SignCheckpointVariables,\n} from '@src/queries/__generated__/SignCheckpoint'\nimport SignCheckpoint__QUERY from '@src/queries/SignCheckpoint.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/SignCheckpoint'\n\nexport const QUERY = SignCheckpoint__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<SignCheckpoint, SignCheckpointVariables>,\n) {\n  return useMutation<SignCheckpoint, SignCheckpointVariables>(QUERY, options)\n}\n","import * as React from 'react'\nimport { useMutation } from '@apollo/client'\nimport {\n  ListItemSecondaryAction,\n  ButtonGroup,\n  Button,\n  Tooltip,\n  Icon,\n  ListItemIcon,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@material-ui/core'\nimport { getEventButtonIcon, getEventIcon, getEventDescription } from './utils'\nimport { IEvent, ICheckPoint } from './types'\nimport GET_EVENTS from '@src/queries/GetEvents.graphql'\nimport { SnackContext } from 'rice-instructor'\nimport { theme } from '@src/theme'\nimport {\n  QUERY as SIGN_CHECKPOINT_MUTATION,\n  SignCheckpoint,\n  SignCheckpointVariables,\n} from '@src/queries/__generated__/SignCheckpoint.hooks'\nimport { BASE_URL } from '@src/history'\nimport { useHistory, useLocation } from '@src/App/hooks'\n\nexport const EventRow = (props: { event: IEvent }) => {\n  const location = useLocation()\n  const history = useHistory()\n\n  const { event } = props\n  const disabled = location.filters.batchId === event.id\n  if (event.eventType === 'CHECKPOINT') {\n    return <CheckpointListItem disabled={disabled} checkpoint={event as ICheckPoint} />\n  }\n  const eventIcon = getEventIcon(event)\n  const onFilterBatch = () => {\n    history.push(`/TransactionList`, { batchId: event.id })\n  }\n  const eventButtonIcon = getEventButtonIcon(event)\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilterBatch}>\n      <ListItemIcon>\n        <Tooltip title={event.eventType || ''}>\n          <Icon>{eventIcon}</Icon>\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(event.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{getEventDescription(event)}</Typography>\n      </ListItemText>\n      {eventButtonIcon ? (\n        <ListItemSecondaryAction>\n          <Button>\n            <Icon>{eventButtonIcon}</Icon>\n          </Button>\n        </ListItemSecondaryAction>\n      ) : null}\n    </ListItem>\n  )\n}\n\nexport const CheckpointListItem: React.FC<{\n  disabled: boolean\n  checkpoint: ICheckPoint\n}> = ({ checkpoint, disabled }) => {\n  const snackbar = React.useContext(SnackContext)\n  const history = useHistory()\n  // Set id to 0 if it's virtual\n  const checkpointId = checkpoint['isVirtual'] ? 0 : checkpoint.id\n\n  const [signCheckpoint, { loading }] = useMutation<SignCheckpoint, SignCheckpointVariables>(\n    SIGN_CHECKPOINT_MUTATION,\n    {\n      refetchQueries: [{ query: GET_EVENTS }],\n    },\n  )\n  const onFilter = () => {\n    history.push('/TransactionList', {\n      checkpointId,\n    })\n  }\n  const description = checkpoint.signedTs\n    ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n        checkpoint.signedTs,\n      ).toLocaleDateString()}`\n    : 'Not Signed'\n\n  if (loading) {\n    return <div>Signing ...</div>\n  }\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilter}>\n      <ListItemIcon>\n        <Tooltip title={checkpoint.eventType || ''}>\n          {checkpoint.signedTs ? (\n            <Icon>toll</Icon>\n          ) : (\n            <Icon style={{ color: theme.palette.success.main }}>fiber_new</Icon>\n          )}\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(checkpoint.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{description}</Typography>\n      </ListItemText>\n      <ListItemSecondaryAction>\n        <ButtonGroup\n          color=\"secondary\"\n          variant=\"contained\"\n          size=\"small\"\n          aria-label=\"Small outlined button group\"\n        >\n          {checkpoint.signedTs ? null : (\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              onClick={() =>\n                signCheckpoint({\n                  variables: {\n                    id: checkpointId,\n                  },\n                }).then(\n                  () => {},\n                  (e) => snackbar.push(e.message),\n                )\n              }\n            >\n              <Icon>plus_one</Icon>\n            </Button>\n          )}\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            disabled={!sessionStorage.getItem('authToken')}\n            onClick={() => {\n              window.open(\n                `${BASE_URL}/checkpoint/${checkpoint.id}?token=${sessionStorage.getItem(\n                  'authToken',\n                )}`,\n                '_blank',\n              )\n            }}\n          >\n            <Icon>cloud_download</Icon>\n          </Button>\n        </ButtonGroup>\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n}\n","import { IBatch, ICheckPoint, IEvent } from './types'\n\nexport const getEventDescription = (e: IEvent) => {\n  if (e.eventType === 'CHECKPOINT') {\n    const checkpoint = e as ICheckPoint\n    return checkpoint.signedTs\n      ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n          checkpoint.signedTs,\n        ).toLocaleDateString()}`\n      : 'Not Signed'\n  }\n  const batch: IBatch = e as IBatch\n  // bank uploads\n  if (batch.origin != 'wave') {\n    return `${batch.origin}: ${batch.startDate} TO ${batch.endDate}`\n  }\n  // Imported from wave or plaid\n  if (e.eventType === 'BATCH_IMPORT') {\n    const batch_import = e as IBatch\n    return `${batch_import.origin}: ${batch_import.startDate.slice(\n      0,\n      10,\n    )} TO ${batch_import.endDate.slice(0, 10)}`\n  }\n\n  throw new Error('not possible')\n}\nexport const getEventIcon = (event: IEvent) => {\n  if (event.eventType === 'CHECKPOINT') {\n    return 'toll'\n  }\n  const batch: IBatch = event as IBatch\n  // bank uploads\n  if (batch.origin != 'wave') {\n    return 'cloud_upload'\n  }\n  if (batch.eventType === 'BATCH_IMPORT') {\n    const batch_import = batch\n    return { plaid: 'grid_on', wave: 'waves' }[batch_import.origin]\n  }\n  throw new Error('not possible')\n}\n\nexport const getEventButtonIcon = (event: IEvent) => {\n  if (event.eventType === 'CHECKPOINT') {\n    return 'plus_one'\n  }\n  return null\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetEvents, \n} from '@src/queries/__generated__/GetEvents'\nimport GetEvents__QUERY from '@src/queries/GetEvents.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/GetEvents'\n\nexport const QUERY = GetEvents__QUERY\nexport type GetEventsVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options?: QueryHookOptions<GetEvents, GetEventsVariables>,\n) {\n  return useQuery<GetEvents, GetEventsVariables>(QUERY, options)\n}\n","import { LinearProgress, List } from '@material-ui/core'\nimport * as React from 'react'\nimport { EventRow } from './EventRow'\nimport { useApolloQuery } from '@src/queries/__generated__/GetEvents.hooks'\n\ninterface Prop {}\nexport const Timeline: React.FC<Prop> = () => {\n  const { loading, error, data } = useApolloQuery()\n  if (loading) return <LinearProgress />\n  if (error) return <p>Error :(</p>\n  if (!data) throw new Error('bad')\n  const events = [...data.checkpoints, ...data.batches]\n  events.sort((a, b) => {\n    // Latest first\n    return Date.parse(b.createdTs) - Date.parse(a.createdTs)\n  })\n  return (\n    <div>\n      <List>\n        {events.map((e, index) => {\n          return e ? <EventRow event={e} key={index} /> : null\n        })}\n      </List>\n    </div>\n  )\n}\n","import { Paper, LinearProgress, Button, Grid } from '@material-ui/core'\nimport * as React from 'react'\nimport { ImportForm } from './ImportForm'\n\nimport { NewTransactionForm } from './NewTransactionForm'\nimport { TransactionListAppBar } from './TransactionListAppBar'\nimport { TransactionRows } from './TransactionRow'\nimport { useLocation } from '@src/App/hooks'\nimport { useApolloQuery } from '@src/queries/__generated__/GetTransactions.hooks'\nimport { Timeline } from '@src/App/Timeline'\n\ntype FormType = 'transaction' | 'wave'\n\nconst limit = 40\nconst isWide = window.innerWidth > 600\n\nexport const TransactionList = () => {\n  const location = useLocation()\n\n  const [showTimeline, setShowTimeline] = React.useState(isWide)\n  const [formType, setFormType] = React.useState<FormType | null>(null)\n  const filters = location.filters\n\n  const { loading: isTransactionLoading, data, fetchMore } = useApolloQuery({\n    variables: {\n      filters: {\n        offset: 0,\n        limit,\n        ...filters,\n      },\n    },\n  })\n  const transactions = data?.transactions || []\n  const categories = data?.categories || []\n  // TODO: implement selectable\n  const selectableCategories = categories.filter((c) => c)\n\n  const loadMoreTransactions = () => {\n    fetchMore({\n      variables: { filters: { offset: transactions.length || -1, limit, ...filters } },\n      updateQuery: (prev: any, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev\n        return Object.assign({}, prev, {\n          transactions: [...prev.transactions, ...fetchMoreResult.transactions],\n        })\n      },\n    })\n  }\n\n  const showForm = (formType: FormType) => {\n    setFormType(formType)\n  }\n  return (\n    <Paper variant=\"outlined\">\n      <div style={{ maxWidth: '100%' }}>\n        <TransactionListAppBar\n          toggleTimeline={() => setShowTimeline(!showTimeline)}\n          showForm={showForm}\n          balance={data?.balance.amount || '?'}\n          categoryChoices={selectableCategories.map((c) => {\n            return { id: c.id, label: c.description }\n          })}\n        />\n        <div\n          style={{\n            height: window.innerHeight - 70,\n            overflow: 'scroll',\n          }}\n        >\n          <Grid container>\n            {showTimeline ? (\n              <Grid item sm={3}>\n                <Timeline />\n              </Grid>\n            ) : null}\n            <Grid item sm={showTimeline ? 9 : 12}>\n              <div style={{ marginBottom: '20px' }}>\n                {formType === 'transaction' ? (\n                  <NewTransactionForm\n                    selectableCategories={selectableCategories || []}\n                    onClose={() => setFormType(null)}\n                  />\n                ) : null}\n                {formType === 'wave' ? <ImportForm onClose={() => setFormType(null)} /> : null}\n              </div>\n              {isTransactionLoading ? (\n                <LinearProgress />\n              ) : (\n                <TransactionRows categories={categories || []} transactions={transactions || []} />\n              )}\n              <Button fullWidth size=\"large\" color=\"secondary\" onClick={loadMoreTransactions}>\n                ({transactions.length}) Click to Load More ...\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import { Typography, Icon, ListItemIcon, Select, MenuItem } from '@material-ui/core'\nimport * as React from 'react'\n\ninterface IIconSelect {\n  initialValue: string | null\n  onChange: (event, child) => void\n  /*\n  options: Array<{\n    value: number | string\n    label: string\n  }>\n   */\n}\nconst ICON_IDS = [\n  'attach_money',\n  'beach_access',\n  'cake',\n  'compare_arrows',\n  'free_breakfast',\n  'gavel',\n  'home',\n  'local_activity',\n  'local_bar',\n  'local_car_wash',\n  'local_gas_station',\n  'local_grocery_store',\n  'local_hospital',\n  'local_parking',\n  'local_taxi',\n  'motorcycle',\n  'movie',\n  'not_interested',\n  'perm_scan_wifi',\n  'phone_iphone',\n  'power',\n  'help',\n  'restaurant',\n  'rowing',\n  'school',\n  'settings_input_component',\n  'settings_input_hdmi',\n  'shopping_basket',\n  'subway',\n  'theaters',\n  'pets',\n]\nexport const IconSelect: React.FC<IIconSelect> = ({ initialValue, onChange }) => {\n  return (\n    <Select onChange={onChange} value={initialValue}>\n      {ICON_IDS.map((iconId) => (\n        <MenuItem key={iconId} value={iconId}>\n          <ListItemIcon>\n            <Icon color=\"primary\">{iconId}</Icon>\n          </ListItemIcon>\n          <Typography style={{ float: 'right' }}>{iconId}</Typography>\n        </MenuItem>\n      ))}\n    </Select>\n  )\n}\n","import * as React from 'react'\n\nimport {\n  makeStyles,\n  TextField,\n  ListItemSecondaryAction,\n  IconButton,\n  Theme,\n  createStyles,\n  Icon,\n  ListItemIcon,\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core'\nimport { ExpandMore, ExpandLess } from '@material-ui/icons'\nimport { Node } from './selectors'\nimport { IconSelect } from '@src/components/IconSelect'\n\ninterface ITreeProps {\n  node: Node\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n  level?: number\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    node: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n)\n\nexport const Tree: React.FC<ITreeProps> = (props) => {\n  const { node, level = 0, onSelectIcon, onSaveNode } = props\n  const classes = useStyles()\n\n  const [open, setOpen] = React.useState(true)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n  return (\n    <List component=\"nav\" className={classes.node}>\n      <ListItem button onClick={handleClick} style={{ paddingLeft: `${32 * level}px` }}>\n        <ListItemIcon>\n          <Icon color=\"secondary\">{node.iconId}</Icon>\n        </ListItemIcon>\n        <ListItemText primary={node.name}></ListItemText>\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {node.children.map((child) =>\n            child.children.length ? (\n              <Tree\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ) : (\n              <NodeListItem\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ),\n          )}\n        </List>\n      </Collapse>\n    </List>\n  )\n}\n\nconst NodeListItem: React.FC<{\n  node: Node\n  level: number\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n}> = ({ node, level, onSaveNode, onSelectIcon }) => {\n  const [editable, setEditable] = React.useState(false)\n  const [pickingIcon, setPickingIcon] = React.useState(false)\n  const [nodeName, setNodeName] = React.useState(node.name)\n  const [iconId, setIconId] = React.useState(node.iconId)\n  return (\n    <>\n      <ListItem\n        key={node.id}\n        dense\n        button\n        role={undefined}\n        style={{ paddingLeft: `${32 * (level + 1)}px` }}\n      >\n        {editable ? (\n          <TextField\n            autoFocus={true}\n            value={nodeName}\n            onChange={(event) => setNodeName(event.target.value)}\n            onBlur={() => {\n              setEditable(false)\n              onSaveNode(node.id, nodeName)\n            }}\n          />\n        ) : (\n          <>\n            {pickingIcon ? (\n              <IconSelect\n                onChange={(e, child) => {\n                  onSelectIcon(node.id, e.target.value)\n                  setIconId(e.target.value)\n                  setPickingIcon(false)\n                }}\n                initialValue={iconId}\n              ></IconSelect>\n            ) : (\n              <ListItemText onClick={() => setEditable(true)} primary={nodeName}></ListItemText>\n            )}\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => setPickingIcon(true)} edge=\"end\">\n                <Icon color=\"primary\">{iconId}</Icon>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </>\n        )}\n      </ListItem>\n    </>\n  )\n}\n","import { GetCategories_categories } from 'src/queries/__generated__/GetCategories.hooks'\n\nexport interface Node extends GetCategories_categories {\n  children: Array<Node>\n}\n\n/*\n * Recursive: add a node to a tree. If node has no parent, add to root.\n * Otherwise, add to its parent\n */\nconst addNode = (node: Node, tree, visited: Array<Node>, remaining: Array<Node>) => {\n  // Add to root\n  visited.push(node)\n  const p = visited.find((x) => x.id === node.parent_id)\n\n  if (!node.parent_id) {\n    tree[node.id] = node\n    return\n  } else if (p) {\n    // Find parent who is in visited attach\n    const parentNode = p\n    if (!parentNode.children.find((x) => x.id === node.id)) {\n      parentNode.children.push(node)\n    }\n    return\n  } else {\n    //parent is not visited either\n    const parentNode = remaining.find((v) => v.id === node.parent_id)\n    if (!parentNode) {\n      throw new Error('no parent cat')\n    }\n    if (!parentNode.children.find((x) => x.id === node.id)) {\n      parentNode.children.push(node)\n    }\n    // const parentNode = { ...parentCat, children: [node] }\n    return addNode(parentNode, tree, visited, remaining)\n  }\n}\n\nexport const getCategoryTree = (categories: Array<GetCategories_categories>) => {\n  const tree = {}\n  const visited: Array<Node> = []\n  const remaining = categories.map((c) => {\n    return { ...c, children: [] }\n  })\n\n  while (remaining.length > 0) {\n    // Take node out of remaining\n    const node = remaining.pop()\n    if (!node) throw new Error()\n\n    addNode(node, tree, visited, remaining)\n  }\n\n  return tree\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetCategories, \n} from '@src/queries/__generated__/GetCategories'\nimport GetCategories__QUERY from '@src/queries/GetCategories.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/GetCategories'\n\nexport const QUERY = GetCategories__QUERY\nexport type GetCategoriesVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options?: QueryHookOptions<GetCategories, GetCategoriesVariables>,\n) {\n  return useQuery<GetCategories, GetCategoriesVariables>(QUERY, options)\n}\n","import * as React from 'react'\nimport { Tree } from './Tree'\nimport { getCategoryTree } from './selectors'\nimport { useApolloQuery } from '@src/queries/__generated__/GetCategories.hooks'\n\nexport const CategoryPage: React.FC<{}> = (props) => {\n  const { data } = useApolloQuery()\n\n  if (!data) {\n    return <div>loading...</div>\n  }\n  const tree = getCategoryTree(data.categories)\n  const root = {\n    id: 0,\n    name: 'root',\n    iconId: null,\n    parent_id: null,\n    is_selectable: false,\n    is_active: true,\n    __typename: 'Category',\n    description: 'root',\n    children: Object.keys(tree).map((k) => tree[k]),\n  }\n\n  return (\n    <Tree\n      onSaveNode={(id: number, name: string) => console.log(id, name)}\n      onSelectIcon={(id: number, iconId: string) => console.log(id, iconId)}\n      node={root as any}\n    />\n  )\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetProfitAndLossChart, GetProfitAndLossChartVariables,\n} from '@src/queries/__generated__/GetProfitAndLossChart'\nimport GetProfitAndLossChart__QUERY from '@src/queries/GetProfitAndLossChart.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/GetProfitAndLossChart'\n\nexport const QUERY = GetProfitAndLossChart__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetProfitAndLossChart, GetProfitAndLossChartVariables>,\n) {\n  return useQuery<GetProfitAndLossChart, GetProfitAndLossChartVariables>(QUERY, options)\n}\n","import HighchartsData from 'highcharts-data'\nimport HighchartsDrilldown from 'highcharts-drilldown'\nimport * as React from 'react'\nimport Highchart from 'react-highcharts'\nimport u from 'updeep'\nimport { useApolloQuery } from '@src/queries/__generated__/GetProfitAndLossChart.hooks'\nimport { getIsoDateString } from '@src/utils'\n\nHighchartsData(Highchart.Highcharts)\nHighchartsDrilldown(Highchart.Highcharts)\n\nconst getChartConfig = ({ onClickColumn }) => {\n  return {\n    chart: {\n      type: 'column',\n      //height: 800,\n      //width: 800\n    },\n    title: {\n      text: 'Income/Expense Report',\n    },\n    xAxis: {\n      type: 'category',\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Spend',\n        align: 'high',\n      },\n      labels: {\n        overflow: 'justify',\n      },\n    },\n    tooltip: {\n      valueSuffix: ' dollars',\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: true,\n        },\n      },\n      column: {\n        dataLabels: {\n          enabled: true,\n        },\n        allowPointSelect: false,\n        events: {\n          click: onClickColumn,\n        },\n      },\n    },\n    legend: {\n      enabled: true,\n      layout: 'vertical',\n      align: 'right',\n      verticalAlign: 'top',\n      x: -40,\n      y: 80,\n      floating: true,\n      borderWidth: 1,\n      shadow: true,\n    },\n    credits: {\n      enabled: false,\n    },\n  }\n}\nconst today = new Date()\nconst sixMonthsAgo = new Date()\nsixMonthsAgo.setDate(sixMonthsAgo.getDate() - 180)\n// Set to start of the month\nsixMonthsAgo.setDate(1)\n\nexport const PnlChart: React.FC<{}> = (props) => {\n  const { loading, error, data } = useApolloQuery({\n    variables: {\n      startDate: getIsoDateString(sixMonthsAgo),\n      endDate: getIsoDateString(today),\n    },\n  })\n  if (loading) {\n    return <div>loading ...</div>\n  }\n  if (error) return <div>error ...</div>\n\n  const initial = getChartConfig({\n    onClickColumn: (e) => console.log(e),\n  })\n  const titled = u(\n    {\n      title: {\n        text: 'Profit & Loss Report',\n      },\n    },\n    initial,\n  )\n  const config = Object.assign({}, titled, data!.profitAndLossChart)\n  return (\n    <div>\n      <Highchart config={config} />\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { FormControlLabel, Checkbox } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/core/styles'\n\nimport { Admin, SnackProvider, Directory } from 'rice-instructor'\nimport { TransactionList } from '@src/TransactionList'\n\nimport { CategoryPage } from '../CategoryPage'\nimport { PnlChart } from '@src/Report/PnlChart'\n\nimport { theme, isDarkMode } from '@src/theme'\n\nconst routes = [\n  { path: '/ProfitAndLoss', children: <PnlChart />, linkText: 'Profit and Loss Chart' },\n  { path: '/TransactionList', children: <TransactionList /> },\n  { path: '/CategoryPage', children: <CategoryPage /> },\n  { path: '/Admin', children: <Admin />, exact: false },\n]\n\nexport const Home: React.FC<unknown> = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <SnackProvider>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={isDarkMode}\n              onChange={(e) => {\n                sessionStorage.setItem('colorTheme', e.target.checked ? 'dark' : 'light')\n                window.location.reload()\n              }}\n              name=\"sharedOnly\"\n            />\n          }\n          label=\"Dark Mode\"\n        />\n        <Directory redirectToLoginIfUnauthenticated={true} routes={routes} />\n      </SnackProvider>\n    </ThemeProvider>\n  )\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport { App } from '@src/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IUserTransaction\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalAmount\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issuedDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpointId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"editable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"predicatedCategory\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"predicatedSplit\"},\"arguments\":[],\"directives\":[]}]}}],\"loc\":{\"start\":0,\"end\":216}};\n    doc.loc.source = {\"body\":\"fragment FragmentTransaction on IUserTransaction {\\n  id\\n  totalAmount\\n  issuedDate\\n  notes\\n  categoryId\\n  checkpointId\\n  merchantName\\n  balanceAdjust\\n  createdById\\n  editable\\n  predicatedCategory\\n  predicatedSplit\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"FragmentTransaction\"] = oneQuery(doc, \"FragmentTransaction\");\n        \n","/*\nexport enum UrlPathEnum {\n  Root = '',\n  LoginPage = 'LoginPage',\n  TablesPage = 'TablesPage',\n  TransactionList = 'TransactionList',\n  CategoryPage = 'CategoryPage',\n  PnlChart = 'PnlChart',\n}\n*/\nexport enum UrlPathEnum {\n  Root,\n  LoginPage,\n  TablesPage,\n  TransactionList,\n  CategoryPage,\n  PnlChart,\n}\n","import { createBrowserHistory } from 'history'\nimport * as _ from 'lodash'\nimport { UrlPathEnum } from '@src/types'\n\nconst pathMap: { [v: string]: UrlPathEnum } = {\n  '': UrlPathEnum.Root,\n  LoginPage: UrlPathEnum.LoginPage,\n  TablesPage: UrlPathEnum.TablesPage,\n  TransactionList: UrlPathEnum.TransactionList,\n  CategoryPage: UrlPathEnum.CategoryPage,\n  PnlChart: UrlPathEnum.PnlChart,\n}\n\nexport const history = createBrowserHistory()\nexport const pushHistory = (\n  pathname: UrlPathEnum,\n  subpath = '',\n  urlState?: {} | null,\n  state: {} | null = null,\n) => {\n  const searchString =\n    urlState && urlState && Object.keys(urlState).length\n      ? '?urlState=' + JSON.stringify(_.pickBy(urlState, _.identity))\n      : ''\n\n  const pathValue = Object.keys(pathMap).find((k) => pathMap[k] === pathname)\n  if (pathValue === undefined) {\n    throw new Error(`cannot find ${pathname}`)\n  }\n\n  let path: string\n  if (pathValue) {\n    path = ['/' + pathValue, subpath].join('/')\n  } else {\n    path = [pathValue, subpath].join('/')\n  }\n  console.log(`pathname: ${pathname} pathValue: ${pathValue} subpath: ${subpath} path: ${path}`)\n\n  return history.push({\n    pathname: path,\n    search: searchString,\n    state,\n  })\n}\n\nexport const getPathName = (): UrlPathEnum => {\n  const splitPaths = history.location.pathname.split('/').filter((p) => !!p)\n\n  const stripped = splitPaths\n\n  if (stripped.length === 0) {\n    return UrlPathEnum.Root\n  }\n  /*\n  else if (stripped.length !== 1) {\n    throw new Error(`${stripped}: Expected exactly 1 path`)\n  }\n  */\n\n  if (!pathMap[stripped[0]]) {\n    throw new Error(`cannot find ${stripped}`)\n  }\n\n  return pathMap[stripped[0]]\n}\n\nconst isLocal = !!window.location.port\n\nexport const BASE_URL = `${window.location.protocol}//${window.location.hostname}:${\n  isLocal ? '8888' : ''\n}`\n"],"sourceRoot":""}