{"version":3,"sources":["webpack:///./queries/__generated__/UpdateTransaction.hooks.ts","webpack:///./queries/GetEvents.graphql","webpack:///./App/index.tsx","webpack:///./queries/__generated__/ImportWaveTransactions.hooks.ts","webpack:///./queries/ImportWaveTransactions.graphql","webpack:///./queries/__generated__/GetLatestImportDate.hooks.ts","webpack:///./queries/GetLatestImportDate.graphql","webpack:///./queries/GetTransactions.graphql","webpack:///./queries/__generated__/CreateTransaction.hooks.ts","webpack:///./queries/CreateTransaction.graphql","webpack:///./queries/__generated__/AcceptPrediction.hooks.ts","webpack:///./queries/AcceptPrediction.graphql","webpack:///./queries/__generated__/CategorizeTransaction.hooks.ts","webpack:///./queries/CategorizeTransaction.graphql","webpack:///./queries/UpdateTransaction.graphql","webpack:///./queries/__generated__/GetEventLogs.hooks.ts","webpack:///./queries/GetEventLogs.graphql","webpack:///./queries/__generated__/ArchiveTransaction.hooks.ts","webpack:///./queries/ArchiveTransaction.graphql","webpack:///./queries/__generated__/SignCheckpoint.hooks.ts","webpack:///./queries/SignCheckpoint.graphql","webpack:///./queries/__generated__/GetEvents.hooks.ts","webpack:///./queries/__generated__/GetCategories.hooks.ts","webpack:///./queries/GetCategories.graphql","webpack:///./queries/__generated__/GetProfitAndLossChart.hooks.ts","webpack:///./queries/GetProfitAndLossChart.graphql","webpack:///./styles.tsx","webpack:///./TransactionList/ImportForm.tsx","webpack:///./components/DialogSelect.tsx","webpack:///./utils.ts","webpack:///./TransactionList/NewTransactionForm.tsx","webpack:///./components/IconMenu.tsx","webpack:///./App/hooks.ts","webpack:///./TransactionList/FilterDialog.tsx","webpack:///./TransactionList/TransactionListAppBar.tsx","webpack:///./TransactionList/SmartCatField.tsx","webpack:///./components/ResponsiveLabel.tsx","webpack:///./TransactionList/CategoryField.tsx","webpack:///./components/DebouncedTextField.tsx","webpack:///./TransactionList/BalanceAdjustField.tsx","webpack:///./TransactionList/EventLog.tsx","webpack:///./TransactionList/TransactionRow.tsx","webpack:///./theme.tsx","webpack:///./App/Timeline/EventRow.tsx","webpack:///./App/Timeline/utils.ts","webpack:///./App/Timeline/index.tsx","webpack:///./TransactionList/index.tsx","webpack:///./components/IconSelect.tsx","webpack:///./CategoryPage/Tree.tsx","webpack:///./CategoryPage/selectors.tsx","webpack:///./CategoryPage/index.tsx","webpack:///./Report/PnlChart.tsx","webpack:///./App/Home.tsx","webpack:///./index.tsx","webpack:///./queries/__generated__/GetTransactions.hooks.ts","webpack:///./queries/FragmentTransaction.graphql","webpack:///./types/index.ts","webpack:///./history.ts"],"names":["QUERY","UpdateTransaction__QUERY","useApolloQuery","options","useMutation","doc","loc","source","definitionRefs","findOperation","name","i","definitions","length","element","value","forEach","def","refs","Set","collectFragmentReferences","node","kind","add","type","selectionSet","selections","selection","variableDefinitions","module","exports","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","size","prevRefs","has","childRef","op","push","oneQuery","Routes","exact","path","onLogin","BASE_URL","component","Home","client","getClient","uri","App","hot","ImportWaveTransactions__QUERY","names","concat","filter","GetLatestImportDate__QUERY","useQuery","CreateTransaction__QUERY","AcceptPrediction__QUERY","CategorizeTransaction__QUERY","GetEventLogs__QUERY","ArchiveTransaction__QUERY","SignCheckpoint__QUERY","GetEvents__QUERY","GetCategories__QUERY","GetProfitAndLossChart__QUERY","isWide","window","innerWidth","useStyles","makeStyles","theme","createStyles","appBar","position","header","backgroundColor","palette","info","light","disabled","opacity","cursor","title","marginLeft","spacing","flex","formControl","margin","minWidth","today","Date","toISOString","slice","ImportButton","onClose","startDate","endDate","importWaveTransactions","loading","Button","fullWidth","onClick","variables","then","res","location","reload","style","marginTop","color","variant","ImportForm","props","data","GetLatestImportDate","initialStartDate","latestImportDate","ImportFormComponent","React","setStartDate","setEndDate","Grid","container","item","xs","sm","TextField","label","onChange","e","target","defaultValue","DialogSelect","choices","onSelectOption","isOpen","setIsOpen","initialOption","option","find","x","Error","getInitialOption","Icon","marginRight","iconId","Dialog","open","DialogTitle","DialogContent","Autocomplete","getOptionLabel","getOptionSelected","event","newValue","renderInput","params","getIsoDateString","d","year","getFullYear","month","getMonth","day","getDate","fieldConfig","issuedDate","required","merchantName","notes","categoryId","balanceAdjust","totalAmount","FieldInput","fieldName","updateField","instance","config","error","initialForm","getToday","NewTransactionForm","selectableCategories","formData","setFormData","update","cache","filters","offset","limit","createTransaction","isOk","cached","readQuery","query","GET_TRANSACTIONS_QUERY","writeQuery","Object","assign","transactions","transaction","message","t","old","newState","paddingTop","ExpansionPanel","expanded","ExpansionPanelSummary","map","cat","id","description","Divider","ExpansionPanelActions","input","every","Boolean","SimpleMenu","children","buttonText","useState","anchorEl","setAnchorEl","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","useHistory","history","useReactRouterHistory","_history","pathname","qs","JSON","stringify","useLocation","search","useReactRouterLocation","querystring","parse","split","FilterDialog","categoryChoices","setOpen","batchId","setBatchId","sharedOnly","setSharedOnly","uncategorizedOnly","setUncategorizedOnly","searchText","setSearchText","setCategoryId","handleClickOpen","handleClose","IconButton","aria-labelledby","DialogContentText","FormControl","InputLabel","Select","parseInt","MenuItem","choice","key","FormControlLabel","control","Checkbox","checked","DialogActions","undefined","TransactionListAppBar","AppBar","Toolbar","Tooltip","toggleTimeline","History","balance","Typography","IconMenu","Add","showForm","ListItemIcon","AttachMoney","ListItemText","Waves","sessionStorage","removeItem","href","className","SmartCatField","predicatedSplit","predicatedCategory","transactionId","openCategoryDialog","category","acceptPrediction","ButtonGroup","aria-label","ResponsiveLabel","ResponsiveLink","rest","Link","CategoryField","showDialog","setShowDialog","categoryName","editable","selected","CategoryDialogSelect","initialTextValue","c","classes","categorizeTransaction","textValue","setTextValue","includes","toUpperCase","fullScreen","edge","Close","autoFocus","List","ListItem","button","ListItemSecondaryAction","DebouncedTextField","helperText","setter","onBounce","debounced","_","PrettoSlider","withStyles","root","height","thumb","width","border","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","BalanceAdjustField","total","setBalanceAdjust","Number","toFixed","percentage","setPercentage","updateTransaction","gutterBottom","alignItems","newPercentage","newBalanceAdjust","toString","min","max","step","valueLabelDisplay","marks","valueLabelFormat","paddingBottom","EventLog","entityId","eventLogs","log","eventName","createdTs","changes","change","index","TransactionRowComponent","showDate","onToggleExpansion","setNotes","MUTATION","archiveTransaction","ARCHIVE_TRANSACTION_MUTATION","removed","Card","CardHeader","toLocaleDateString","timeZone","CardContent","float","Collapse","in","unmountOnExit","parseFloat","textAlign","Fab","Delete","areEqual","last","next","TransactionRow","TransactionRows","setExpanded","eventId","categories","is_selectable","isDarkMode","getItem","createMuiTheme","EventRow","eventType","checkpoint","eventIcon","batch","origin","plaid","wave","getEventIcon","eventButtonIcon","getEventButtonIcon","signedTs","signedBalance","batch_import","getEventDescription","CheckpointListItem","snackbar","SnackContext","checkpointId","SIGN_CHECKPOINT_MUTATION","refetchQueries","GET_EVENTS","signCheckpoint","success","main","Timeline","LinearProgress","events","checkpoints","batches","sort","a","b","TransactionList","showTimeline","setShowTimeline","formType","setFormType","isTransactionLoading","fetchMore","Paper","maxWidth","amount","innerHeight","overflow","marginBottom","updateQuery","prev","fetchMoreResult","ICON_IDS","IconSelect","initialValue","background","paper","Tree","level","onSelectIcon","onSaveNode","paddingLeft","primary","ExpandLess","ExpandMore","timeout","disablePadding","child","NodeListItem","setEditable","pickingIcon","setPickingIcon","nodeName","setNodeName","setIconId","dense","role","onBlur","addNode","tree","visited","remaining","p","parent_id","parentNode","v","CategoryPage","pop","getCategoryTree","is_active","__typename","keys","k","console","HighchartsData","Highchart","Highcharts","HighchartsDrilldown","sixMonthsAgo","setDate","PnlChart","initial","chart","text","xAxis","yAxis","align","labels","tooltip","valueSuffix","plotOptions","bar","dataLabels","enabled","column","allowPointSelect","click","onClickColumn","legend","layout","verticalAlign","y","floating","borderWidth","shadow","credits","titled","u","profitAndLossChart","routes","linkText","ThemeProvider","setItem","redirectToLoginIfUnauthenticated","ReactDOM","document","getElementById","GetTransactions__QUERY","UrlPathEnum","Root","LoginPage","TablesPage","createBrowserHistory","isLocal","port","protocol","hostname"],"mappings":"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","file":"app.js","sourcesContent":["\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  UpdateTransaction, UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction'\nimport UpdateTransaction__QUERY from '@src/queries/UpdateTransaction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/UpdateTransaction'\n\nexport const QUERY = UpdateTransaction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<UpdateTransaction, UpdateTransactionVariables>,\n) {\n  return useMutation<UpdateTransaction, UpdateTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetEvents\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpoints\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"batches\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"origin\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"userId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":205}};\n    doc.loc.source = {\"body\":\"query GetEvents {\\n  checkpoints {\\n    id\\n    eventType\\n    createdTs\\n    signedTs\\n    signedBalance\\n  }\\n  batches {\\n    id\\n    eventType\\n    createdTs\\n    origin\\n    userId\\n    startDate\\n    endDate\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetEvents\"] = oneQuery(doc, \"GetEvents\");\n        \n","import * as React from 'react'\nimport { hot } from 'react-hot-loader'\nimport { ApolloProvider } from '@apollo/client'\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { getClient, LoginForm } from 'rice-instructor'\nimport { Home } from './Home'\nimport { BASE_URL } from '@src/history'\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/LoginPage\">\n            <LoginForm onLogin={`${BASE_URL}/login`} />\n          </Route>\n          <Route path=\"/\" component={Home}></Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  )\n}\nconst client = getClient({\n  uri: `${BASE_URL}/graphql`,\n})\nexport const App = hot(module)(() => (\n  <ApolloProvider client={client}>\n    <Routes />\n  </ApolloProvider>\n))\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  ImportWaveTransactions, ImportWaveTransactionsVariables,\n} from '@src/queries/__generated__/ImportWaveTransactions'\nimport ImportWaveTransactions__QUERY from '@src/queries/ImportWaveTransactions.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/ImportWaveTransactions'\n\nexport const QUERY = ImportWaveTransactions__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ImportWaveTransactions, ImportWaveTransactionsVariables>,\n) {\n  return useMutation<ImportWaveTransactions, ImportWaveTransactionsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ImportWaveTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"importFromWave\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":244}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation ImportWaveTransactions($startDate: String!, $endDate: String!) {\\n  importFromWave(startDate: $startDate, endDate: $endDate) {\\n    isOk\\n    transactions {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"ImportWaveTransactions\"] = oneQuery(doc, \"ImportWaveTransactions\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetLatestImportDate, \n} from '@src/queries/__generated__/GetLatestImportDate'\nimport GetLatestImportDate__QUERY from '@src/queries/GetLatestImportDate.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/GetLatestImportDate'\n\nexport const QUERY = GetLatestImportDate__QUERY\nexport type GetLatestImportDateVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options?: QueryHookOptions<GetLatestImportDate, GetLatestImportDateVariables>,\n) {\n  return useQuery<GetLatestImportDate, GetLatestImportDateVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetLatestImportDate\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"latestImportDate\"},\"arguments\":[],\"directives\":[]}]}}],\"loc\":{\"start\":0,\"end\":49}};\n    doc.loc.source = {\"body\":\"query GetLatestImportDate {\\n  latestImportDate\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetLatestImportDate\"] = oneQuery(doc, \"GetLatestImportDate\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"TransactionFilters\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"parent_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"iconId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_selectable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":306}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nquery GetTransactions($filters: TransactionFilters!) {\\n  balance {\\n    id\\n    amount\\n  }\\n  transactions(filters: $filters) {\\n    ...FragmentTransaction\\n  }\\n  categories {\\n    id\\n    description\\n    name\\n    parent_id\\n    iconId\\n    is_selectable\\n    is_active\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetTransactions\"] = oneQuery(doc, \"GetTransactions\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  CreateTransaction, CreateTransactionVariables,\n} from '@src/queries/__generated__/CreateTransaction'\nimport CreateTransaction__QUERY from '@src/queries/CreateTransaction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/CreateTransaction'\n\nexport const QUERY = CreateTransaction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<CreateTransaction, CreateTransactionVariables>,\n) {\n  return useMutation<CreateTransaction, CreateTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransactionInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":207}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation CreateTransaction($input: CreateTransactionInput!) {\\n  createTransaction(input: $input) {\\n    isOk\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"CreateTransaction\"] = oneQuery(doc, \"CreateTransaction\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  AcceptPrediction, AcceptPredictionVariables,\n} from '@src/queries/__generated__/AcceptPrediction'\nimport AcceptPrediction__QUERY from '@src/queries/AcceptPrediction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/AcceptPrediction'\n\nexport const QUERY = AcceptPrediction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<AcceptPrediction, AcceptPredictionVariables>,\n) {\n  return useMutation<AcceptPrediction, AcceptPredictionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"AcceptPrediction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"acceptPrediction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":219}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation AcceptPrediction($id: Int!) {\\n  acceptPrediction(id: $id) {\\n    isOk\\n    balance {\\n      id\\n      amount\\n    }\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"AcceptPrediction\"] = oneQuery(doc, \"AcceptPrediction\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  CategorizeTransaction, CategorizeTransactionVariables,\n} from '@src/queries/__generated__/CategorizeTransaction'\nimport CategorizeTransaction__QUERY from '@src/queries/CategorizeTransaction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/CategorizeTransaction'\n\nexport const QUERY = CategorizeTransaction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<CategorizeTransaction, CategorizeTransactionVariables>,\n) {\n  return useMutation<CategorizeTransaction, CategorizeTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"CategorizeTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categorizeTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":231}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation CategorizeTransaction($id: Int!, $categoryId: Int!) {\\n  categorizeTransaction(id: $id, categoryId: $categoryId) {\\n    isOk\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"CategorizeTransaction\"] = oneQuery(doc, \"CategorizeTransaction\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateTransactionInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":249}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation UpdateTransaction($input: UpdateTransactionInput!) {\\n  updateTransaction(input: $input) {\\n    isOk\\n    balance {\\n      id\\n      amount\\n    }\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"UpdateTransaction\"] = oneQuery(doc, \"UpdateTransaction\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetEventLogs, GetEventLogsVariables,\n} from '@src/queries/__generated__/GetEventLogs'\nimport GetEventLogs__QUERY from '@src/queries/GetEventLogs.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/GetEventLogs'\n\nexport const QUERY = GetEventLogs__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetEventLogs, GetEventLogsVariables>,\n) {\n  return useQuery<GetEventLogs, GetEventLogsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetEventLogs\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"EventLogFilters\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventLogs\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"actorId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"entityId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"changes\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":160}};\n    doc.loc.source = {\"body\":\"query GetEventLogs($filters: EventLogFilters!) {\\n  eventLogs(filters: $filters) {\\n    id\\n    actorId\\n    eventName\\n    entityId\\n    createdTs\\n    changes\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetEventLogs\"] = oneQuery(doc, \"GetEventLogs\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  ArchiveTransaction, ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction'\nimport ArchiveTransaction__QUERY from '@src/queries/ArchiveTransaction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/ArchiveTransaction'\n\nexport const QUERY = ArchiveTransaction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ArchiveTransaction, ArchiveTransactionVariables>,\n) {\n  return useMutation<ArchiveTransaction, ArchiveTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ArchiveTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"archiveTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":88}};\n    doc.loc.source = {\"body\":\"mutation ArchiveTransaction($id: Int!) {\\n  archiveTransaction(id: $id) {\\n    isOk\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"ArchiveTransaction\"] = oneQuery(doc, \"ArchiveTransaction\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  SignCheckpoint, SignCheckpointVariables,\n} from '@src/queries/__generated__/SignCheckpoint'\nimport SignCheckpoint__QUERY from '@src/queries/SignCheckpoint.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/SignCheckpoint'\n\nexport const QUERY = SignCheckpoint__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<SignCheckpoint, SignCheckpointVariables>,\n) {\n  return useMutation<SignCheckpoint, SignCheckpointVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"SignCheckpoint\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signCheckpoint\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpoint\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"groupId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":178}};\n    doc.loc.source = {\"body\":\"mutation SignCheckpoint($id: Int!) {\\n  signCheckpoint(id: $id) {\\n    isOk\\n    checkpoint {\\n      id\\n      signedTs\\n      signedById\\n      groupId\\n      signedBalance\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"SignCheckpoint\"] = oneQuery(doc, \"SignCheckpoint\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetEvents, \n} from '@src/queries/__generated__/GetEvents'\nimport GetEvents__QUERY from '@src/queries/GetEvents.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/GetEvents'\n\nexport const QUERY = GetEvents__QUERY\nexport type GetEventsVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options?: QueryHookOptions<GetEvents, GetEventsVariables>,\n) {\n  return useQuery<GetEvents, GetEventsVariables>(QUERY, options)\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetCategories, \n} from '@src/queries/__generated__/GetCategories'\nimport GetCategories__QUERY from '@src/queries/GetCategories.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/GetCategories'\n\nexport const QUERY = GetCategories__QUERY\nexport type GetCategoriesVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options?: QueryHookOptions<GetCategories, GetCategoriesVariables>,\n) {\n  return useQuery<GetCategories, GetCategoriesVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetCategories\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"parent_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"iconId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_selectable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":132}};\n    doc.loc.source = {\"body\":\"query GetCategories {\\n  categories {\\n    id\\n    description\\n    name\\n    parent_id\\n    iconId\\n    is_selectable\\n    is_active\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetCategories\"] = oneQuery(doc, \"GetCategories\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetProfitAndLossChart, GetProfitAndLossChartVariables,\n} from '@src/queries/__generated__/GetProfitAndLossChart'\nimport GetProfitAndLossChart__QUERY from '@src/queries/GetProfitAndLossChart.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/GetProfitAndLossChart'\n\nexport const QUERY = GetProfitAndLossChart__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetProfitAndLossChart, GetProfitAndLossChartVariables>,\n) {\n  return useQuery<GetProfitAndLossChart, GetProfitAndLossChartVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetProfitAndLossChart\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"profitAndLossChart\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"series\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"y\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":215}};\n    doc.loc.source = {\"body\":\"query GetProfitAndLossChart($startDate: String!, $endDate: String!) {\\n  profitAndLossChart(startDate: $startDate, endDate: $endDate) {\\n    series {\\n      name\\n      data {\\n        name\\n        y\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetProfitAndLossChart\"] = oneQuery(doc, \"GetProfitAndLossChart\");\n        \n","import { Theme, makeStyles, createStyles } from '@material-ui/core'\n\nexport const isWide = window.innerWidth > 600\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      position: 'relative',\n    },\n    header: {\n      backgroundColor: theme.palette.info.light,\n    },\n    disabled: {\n      opacity: '0.5',\n      backgroundColor: 'rgba(0, 0, 0, 0.12)',\n      cursor: 'not-allowed',\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: '100%',\n    },\n  }),\n)\n","import { Button, Grid, TextField } from '@material-ui/core'\nimport * as React from 'react'\nimport { isWide } from '@src/styles'\nimport { useApolloQuery } from '@src/queries/__generated__/ImportWaveTransactions.hooks'\nimport { useApolloQuery as GetLatestImportDate } from '@src/queries/__generated__/GetLatestImportDate.hooks'\n\nconst today = new Date().toISOString().slice(0, 10)\n\nconst ImportButton: React.FC<{ onClose: () => void; startDate: string; endDate: string }> = ({\n  onClose,\n  startDate,\n  endDate,\n}) => {\n  const [importWaveTransactions, { loading }] = useApolloQuery({})\n\n  return (\n    <Button\n      fullWidth={!isWide}\n      onClick={() =>\n        importWaveTransactions({\n          variables: {\n            startDate,\n            endDate,\n          },\n        }).then((res) => {\n          onClose()\n          window.location.reload()\n        })\n      }\n      style={{ marginTop: '10px' }}\n      color=\"primary\"\n      variant=\"contained\"\n    >\n      {loading ? 'importing ...' : 'Import'}\n    </Button>\n  )\n}\n\nexport const ImportForm = (props: { onClose: () => void }) => {\n  const { data } = GetLatestImportDate({})\n  if (!data) return <div></div>\n\n  return <ImportFormComponent onClose={props.onClose} initialStartDate={data.latestImportDate} />\n}\n\nconst ImportFormComponent = (props: { onClose: () => void; initialStartDate: string }) => {\n  const [startDate, setStartDate] = React.useState(props.initialStartDate)\n  const [endDate, setEndDate] = React.useState(today)\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={4}>\n        <TextField\n          fullWidth={!isWide}\n          type=\"date\"\n          label=\"from\"\n          value={startDate}\n          onChange={(e) => setStartDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <TextField\n          fullWidth={!isWide}\n          type=\"date\"\n          label=\"to\"\n          defaultValue={today}\n          onChange={(e) => setEndDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <ImportButton onClose={props.onClose} startDate={startDate} endDate={endDate} />\n      </Grid>\n    </Grid>\n  )\n}\n","import { TextField, Button, Dialog, DialogContent, DialogTitle, Icon } from '@material-ui/core'\n\nimport * as React from 'react'\n\nimport Autocomplete from '@material-ui/lab/Autocomplete'\n\ninterface DialogSelectProps {\n  choices: Array<{\n    value: string | number\n    iconId?: string\n    label: string\n  }>\n  onSelectOption: (option) => void\n  value: string | null | number\n}\nconst getInitialOption = (\n  value: string | number | null,\n  choices: Array<{\n    value: string | number\n    iconId?: string\n    label: string\n  }>,\n) => {\n  if (!value) return null\n  const option = choices.find((x) => x.value === value)\n  if (!option) {\n    throw new Error(`${value} not found `)\n  }\n\n  return option\n}\nconst isWide = window.innerWidth > 600\nexport const DialogSelect = (props: DialogSelectProps) => {\n  const { choices, value, onSelectOption } = props\n  const [isOpen, setIsOpen] = React.useState(false)\n  const initialOption = getInitialOption(value, choices)\n  return (\n    <div>\n      <Button\n        size={isWide ? 'large' : 'small'}\n        onClick={() => setIsOpen(true)}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        {initialOption ? initialOption.label : 'Select a Category'}\n        {initialOption ? <Icon style={{ marginRight: '5px' }}>{initialOption.iconId}</Icon> : null}\n      </Button>\n      <Dialog open={isOpen} fullWidth onClose={() => setIsOpen(false)}>\n        <DialogTitle>Select a Category</DialogTitle>\n        <DialogContent>\n          <Autocomplete\n            options={choices}\n            getOptionLabel={(option) => option.label}\n            getOptionSelected={(option, value) => {\n              return option.value === value.value\n            }}\n            onChange={(event, newValue) => {\n              onSelectOption(newValue)\n              setIsOpen(false)\n            }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Select a category\" margin=\"normal\" />\n            )}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import querystring from 'querystring'\n\nexport function stringToDate(dateString: string): Date {\n  const [year, month, day] = dateString.split('-').map((v) => parseInt(v))\n  const ret = new Date(year, month - 1, day)\n  return ret\n}\nexport function formatDate(d: string): string {\n  const date = new Date(d)\n  return date.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    timeZone: 'UTC',\n  })\n}\n\nexport const getIsoDateString = (d: Date) => {\n  const year = d.getFullYear()\n  const month = d.getMonth() < 9 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1\n  const day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport function getToday(): string {\n  const today = new Date()\n  const year = today.getFullYear()\n  const month = today.getMonth() < 9 ? '0' + (today.getMonth() + 1) : today.getMonth() + 1\n  const day = today.getDate() < 10 ? '0' + today.getDate() : today.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport interface Identifiable {\n  id: string | number\n}\nexport const mergeArrays = <T extends Identifiable>(\n  existing: Array<T>,\n  incoming: Array<T>,\n  prependOrAppend: 'prepend' | 'append',\n): Array<T> => {\n  return incoming.reduce(\n    function (accumulator: Array<T>, value: T) {\n      const index = existing.findIndex((x) => x.id === value.id)\n      if (index >= 0) {\n        const ret = [\n          ...accumulator.slice(0, index),\n          value,\n          ...accumulator.slice(index + 1, accumulator.length),\n        ]\n        return ret\n      } else {\n        return prependOrAppend === 'append' ? [...accumulator, value] : [value, ...accumulator]\n      }\n    },\n    [...existing],\n  )\n}\n\nexport function parseSearchString(search: string) {\n  const params = querystring.parse(search.split('?')[1])\n  return params\n}\n","import {\n  Button,\n  Divider,\n  ExpansionPanel,\n  ExpansionPanelActions,\n  ExpansionPanelSummary,\n  Grid,\n  TextField,\n} from '@material-ui/core'\nimport * as React from 'react'\nimport {\n  QUERY as GET_TRANSACTIONS_QUERY,\n  GetTransactions,\n  GetTransactions_categories as ICategory,\n} from '@src/queries/__generated__/GetTransactions.hooks'\nimport { DialogSelect } from '@src/components/DialogSelect'\nimport { useApolloQuery } from '@src/queries/__generated__/CreateTransaction.hooks'\nimport { CreateTransactionInput } from '@src/types/__generated__/globalTypes'\n\nimport { getToday } from '@src/utils'\n\ninterface NewTransactionFormProps {\n  onClose: () => void\n  selectableCategories: Array<ICategory>\n}\n\ntype FieldName =\n  | 'issuedDate'\n  | 'merchantName'\n  | 'notes'\n  | 'categoryId'\n  | 'totalAmount'\n  | 'balanceAdjust'\n\nconst fieldConfig = {\n  issuedDate: { type: 'date', required: true },\n  merchantName: { type: 'text', required: true },\n  notes: { type: 'text', required: false },\n  categoryId: { type: 'number', required: false },\n  balanceAdjust: { type: 'number', required: false },\n  totalAmount: { type: 'number', required: true },\n}\n\nconst FieldInput = (props: {\n  fieldName: FieldName\n  updateField: (fieldName) => (event) => void\n  instance: CreateTransactionInput\n}) => {\n  const { fieldName, updateField, instance } = props\n  const config = fieldConfig[fieldName]\n  let error = false\n  if (config.required && !instance[fieldName]) {\n    error = true\n  } else if (config.required && config.type === 'number' && !instance[fieldName]) {\n    error = true\n  }\n\n  return (\n    <TextField\n      type={config.type}\n      required={config.required}\n      error={error}\n      label={fieldName}\n      value={instance[fieldName]}\n      onChange={updateField(fieldName)}\n    />\n  )\n}\nconst initialForm: CreateTransactionInput = {\n  issuedDate: getToday(),\n  merchantName: '',\n  notes: '',\n  categoryId: null,\n  totalAmount: '0',\n  balanceAdjust: '0',\n}\n\nexport const NewTransactionForm: React.FC<NewTransactionFormProps> = (props) => {\n  const { selectableCategories, onClose } = props\n  const [formData, setFormData] = React.useState<CreateTransactionInput>(initialForm)\n  const [createTransaction, { error, loading }] = useApolloQuery({\n    update(cache, { data }) {\n      const variables = {\n        // TODO: send real offset and limit\n        filters: { offset: 0, limit: 40 },\n      }\n      if (data?.createTransaction?.isOk) {\n        const cached = cache.readQuery<GetTransactions>({\n          query: GET_TRANSACTIONS_QUERY,\n          variables,\n        })\n        cache.writeQuery({\n          query: GET_TRANSACTIONS_QUERY,\n          data: Object.assign({}, cached, {\n            transactions: [data.createTransaction.transaction, ...cached!.transactions],\n          }),\n          variables,\n        })\n      }\n    },\n  })\n\n  if (error) {\n    return <div>{error.message}</div>\n  }\n\n  const createNewTransaction = () => {\n    createTransaction({\n      variables: {\n        input: {\n          issuedDate: formData.issuedDate,\n          totalAmount: formData.totalAmount,\n          merchantName: formData.merchantName,\n          balanceAdjust: formData.balanceAdjust || '0',\n          categoryId: formData.categoryId,\n          notes: formData.notes,\n        },\n      },\n    })\n    onClose()\n  }\n  const updateField = (fieldName: FieldName) => {\n    const old = formData\n    return (event) => {\n      const newState = Object.assign({}, old, {\n        [fieldName]: event.target.value,\n      })\n      setFormData(newState)\n    }\n  }\n  const isValid = () => {\n    const t = formData\n    return [t.issuedDate, t.merchantName, +t.totalAmount].every(Boolean)\n  }\n  const transaction = formData\n  return (\n    <div style={{ paddingTop: '10px' }}>\n      <ExpansionPanel expanded={true}>\n        <ExpansionPanelSummary>\n          <Grid container spacing={10}>\n            <Grid item xs={6} sm={4}>\n              <FieldInput instance={transaction} fieldName=\"issuedDate\" updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"merchantName\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"totalAmount\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <DialogSelect\n                value={transaction.categoryId || ''}\n                onSelectOption={(option) => {\n                  const newState = Object.assign({}, formData, {\n                    categoryId: option.value,\n                  })\n                  setFormData(newState)\n                }}\n                choices={selectableCategories.map((cat) => {\n                  return {\n                    value: cat.id,\n                    label: cat.description,\n                    iconId: cat.iconId || '',\n                  }\n                })}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput fieldName=\"notes\" instance={transaction} updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"balanceAdjust\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <Divider />\n        <ExpansionPanelActions>\n          <Button\n            size=\"small\"\n            onClick={() => {\n              setFormData(initialForm)\n              onClose()\n            }}\n          >\n            Cancel\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={createNewTransaction} disabled={!isValid()}>\n            {loading ? `saving ...` : `Save`}\n          </Button>\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\n\ninterface SimpleMenuProps {\n  buttonText: React.ReactNode\n  children: React.ReactNode\n}\nconst SimpleMenu: React.FC<SimpleMenuProps> = ({ children, buttonText }) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        {buttonText}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {children}\n      </Menu>\n    </div>\n  )\n}\nexport default SimpleMenu\n","import {\n  useLocation as useReactRouterLocation,\n  useHistory as useReactRouterHistory,\n} from 'react-router-dom'\nimport { parseSearchString } from '@src/utils'\n\ninterface SearchFilters {\n  batchId?: number\n  checkpointId?: number\n  searchText?: string\n  categoryId?: number\n  sharedOnly?: boolean\n  uncategorizedOnly?: boolean\n}\nexport const useHistory = () => {\n  const history = useReactRouterHistory()\n  const push = (pathname: string, filters?: SearchFilters) => {\n    const qs = JSON.stringify(filters)\n    history.push(`${pathname}?filters=${qs}`)\n  }\n  return { _history: history, push }\n}\n\nexport const useLocation = () => {\n  const location = useReactRouterLocation()\n  const params = parseSearchString(location.search)\n  let filters: SearchFilters = {}\n  if (params && params.filters) {\n    filters = JSON.parse(params.filters as string)\n  }\n  return { ...location, filters }\n}\n","import * as React from 'react'\nimport {\n  DialogContentText,\n  DialogTitle,\n  Icon,\n  InputLabel,\n  IconButton,\n  FormControl,\n  MenuItem,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  TextField,\n  Select,\n  Dialog,\n  DialogActions,\n  DialogContent,\n} from '@material-ui/core'\nimport { useHistory, useLocation } from '@src/App/hooks'\n\ninterface Prop {\n  categoryChoices: Array<{ id: number; label: string }>\n}\n\nexport const FilterDialog: React.FC<Prop> = ({ categoryChoices }) => {\n  const history = useHistory()\n  const location = useLocation()\n\n  const filters = location.filters\n  const [open, setOpen] = React.useState(false)\n  const [batchId, setBatchId] = React.useState(location.filters.batchId)\n  const [sharedOnly, setSharedOnly] = React.useState(filters.sharedOnly)\n  const [uncategorizedOnly, setUncategorizedOnly] = React.useState(filters.uncategorizedOnly)\n  const [searchText, setSearchText] = React.useState(filters.searchText)\n  const [categoryId, setCategoryId] = React.useState(filters.categoryId)\n\n  const clearFilters = () => {\n    setBatchId(undefined)\n    setSharedOnly(undefined)\n    setUncategorizedOnly(undefined)\n    setSearchText(undefined)\n    setCategoryId(undefined)\n  }\n  const resetFilters = () => {\n    setBatchId(filters.batchId)\n    setSharedOnly(filters.sharedOnly)\n    setSearchText(filters.searchText)\n    setCategoryId(filters.categoryId)\n    setUncategorizedOnly(filters.uncategorizedOnly)\n  }\n\n  const handleClickOpen = () => {\n    resetFilters()\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  if (!open) {\n    return (\n      <IconButton onClick={handleClickOpen}>\n        <Icon color=\"primary\">filter_alt</Icon>\n      </IconButton>\n    )\n  }\n  return (\n    <div>\n      <IconButton onClick={handleClickOpen}>\n        <Icon color=\"primary\">filter_alt</Icon>\n      </IconButton>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Filter Transactions</DialogTitle>\n        {open ? (\n          <DialogContent>\n            <DialogContentText>\n              Search transactions by category, text (merchant name and notes). By checking \"Shared\",\n              you can limit the results to be shared transactions only.\n            </DialogContentText>\n            <FormControl style={{ minWidth: 120 }}>\n              <InputLabel>Category</InputLabel>\n              <Select\n                id=\"categoryId\"\n                value={categoryId || ''}\n                onChange={(e) => setCategoryId(parseInt(e.target.value as string))}\n              >\n                <MenuItem value={''}>None</MenuItem>\n                {categoryChoices.map((choice) => (\n                  <MenuItem key={choice.id} value={choice.id}>\n                    {choice.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <TextField\n              onChange={(e) => setSearchText(e.target.value)}\n              value={searchText || ''}\n              margin=\"dense\"\n              id=\"searchText\"\n              label=\"Text Search\"\n              type=\"text\"\n              fullWidth\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={sharedOnly}\n                  onChange={(e) => setSharedOnly(e.target.checked)}\n                  name=\"sharedOnly\"\n                />\n              }\n              label=\"Shared\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={uncategorizedOnly}\n                  onChange={(e) => setUncategorizedOnly(e.target.checked)}\n                  name=\"uncategorizedOnly\"\n                />\n              }\n              label=\"Uncategorized\"\n            />\n          </DialogContent>\n        ) : null}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={clearFilters} color=\"primary\">\n            Reset\n          </Button>\n          <Button\n            onClick={() => {\n              history.push('/TransactionList', {\n                batchId,\n                searchText,\n                sharedOnly,\n                categoryId,\n                uncategorizedOnly,\n              })\n              handleClose()\n            }}\n            color=\"primary\"\n          >\n            Apply\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import {\n  AppBar,\n  Icon,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@material-ui/core'\nimport { Add, AttachMoney, History, Waves } from '@material-ui/icons'\nimport * as React from 'react'\nimport IconMenu from '@src/components/IconMenu'\nimport { FilterDialog } from '@src/TransactionList/FilterDialog'\n\ninterface Prop {\n  balance: string\n  showForm: (formType: string) => void\n  toggleTimeline: () => void\n  categoryChoices: Array<{ id: number; label: string }>\n}\n\nexport const TransactionListAppBar = (props: Prop) => {\n  const { categoryChoices } = props\n  const showNewTransactionForm = () => {\n    props.showForm('transaction')\n  }\n\n  const showWaveImportForm = () => {\n    props.showForm('wave')\n  }\n\n  const toggleTimeline = () => {\n    props.toggleTimeline()\n  }\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\">\n      <Toolbar>\n        <Tooltip title=\"Timeline\">\n          <IconButton onClick={toggleTimeline}>\n            <History />\n          </IconButton>\n        </Tooltip>\n        {props.balance ? (\n          <Typography variant=\"body1\" key=\"balance\">{`Balance: $${props.balance}`}</Typography>\n        ) : null}\n        <div style={{ flex: 1 }} />\n        <FilterDialog categoryChoices={categoryChoices} />\n        <IconMenu buttonText={<Add />}>\n          <MenuItem key=\"new-transaction-menu\" onClick={showNewTransactionForm}>\n            <ListItemIcon>\n              <AttachMoney />\n            </ListItemIcon>\n            <ListItemText>Transaction</ListItemText>\n          </MenuItem>\n          <MenuItem key=\"new-wave-menu\" onClick={showWaveImportForm}>\n            <ListItemIcon>\n              <Waves color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText>Wave Import</ListItemText>\n          </MenuItem>\n        </IconMenu>\n        <IconButton\n          onClick={() => {\n            sessionStorage.removeItem('authToken')\n            window.location.href = '/'\n          }}\n        >\n          <Icon className=\"material-icons\">exit_to_app</Icon>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import * as React from 'react'\n\nimport { ButtonGroup, Button, Typography } from '@material-ui/core'\nimport { useApolloQuery } from '@src/queries/__generated__/AcceptPrediction.hooks'\nimport { GetTransactions_categories as ICategory } from '@src/queries/__generated__/GetTransactions.hooks'\n\ninterface SmartCatProp {\n  predicatedSplit: boolean | null\n  predicatedCategory: number | null\n  transactionId: number\n  openCategoryDialog: () => void\n\n  selectableCategories: Array<ICategory>\n}\nconst isWide = window.innerWidth > 600\nexport const SmartCatField: React.FC<SmartCatProp> = (props) => {\n  const {\n    predicatedSplit,\n    selectableCategories,\n    predicatedCategory,\n    transactionId,\n    openCategoryDialog,\n  } = props\n\n  const category = selectableCategories.find((x) => x.id === predicatedCategory)\n  if (!category) {\n    throw new Error('cannot find predicated category')\n  }\n\n  const [acceptPrediction, { loading, error }] = useApolloQuery({\n    variables: { id: transactionId },\n  })\n  const split = predicatedSplit ? 'Split ' : ''\n  if (error) return <div>{error.message}</div>\n  if (loading) return <div>saving...</div>\n  return (\n    <div>\n      <Typography variant={isWide ? 'body1' : 'caption'}>{`${split}${category.name}?`}</Typography>\n      <ButtonGroup aria-label=\"outlined primary button group\">\n        <Button size=\"small\" onClick={(e) => acceptPrediction()} variant=\"contained\">\n          YES\n        </Button>\n        <Button\n          size=\"small\"\n          onClick={(e) => openCategoryDialog()}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          NO\n        </Button>\n      </ButtonGroup>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Link, TypographyProps, Typography } from '@material-ui/core'\n\nconst isWide = window.innerWidth > 600\n\nexport const ResponsiveLabel = (props: TypographyProps) => {\n  return <Typography variant={isWide ? 'body1' : 'caption'} {...props} />\n}\ninterface ResponsiveLinkProps extends TypographyProps {\n  disabled?: boolean\n}\n\nexport const ResponsiveLink = (props: ResponsiveLinkProps) => {\n  const { onClick, children, disabled, ...rest } = props\n  return (\n    <ResponsiveLabel {...rest}>\n      {disabled === true ? (\n        children\n      ) : (\n        <Link color={rest.color} onClick={onClick}>\n          {children}\n        </Link>\n      )}\n    </ResponsiveLabel>\n  )\n}\n","import * as React from 'react'\nimport {\n  AppBar,\n  ListItemSecondaryAction,\n  Icon,\n  TextField,\n  ListItemText,\n  List,\n  ListItem,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  Dialog,\n  DialogContent,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\n\nimport { SmartCatField } from './SmartCatField'\nimport { useStyles } from '@src/styles'\nimport { ResponsiveLink } from '@src/components/ResponsiveLabel'\nimport {\n  GetTransactions_categories as ICategory,\n  GetTransactions_transactions as IUserTransaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\n\nimport { useApolloQuery } from '@src/queries/__generated__/CategorizeTransaction.hooks'\n\ninterface CategoryFieldProp {\n  transaction: IUserTransaction\n  selectableCategories: Array<ICategory>\n}\n\nexport const CategoryField: React.FC<CategoryFieldProp> = ({\n  selectableCategories,\n  transaction,\n}) => {\n  const [showDialog, setShowDialog] = React.useState(false)\n\n  const category = selectableCategories.find((x) => x.id === transaction.categoryId)\n  const categoryName = category ? category.name : '????'\n\n  return (\n    <div>\n      {!transaction.categoryId && transaction.predicatedCategory ? (\n        <SmartCatField\n          openCategoryDialog={() => setShowDialog(true)}\n          predicatedSplit={transaction.predicatedSplit}\n          predicatedCategory={transaction.predicatedCategory}\n          selectableCategories={selectableCategories}\n          transactionId={transaction.id}\n        />\n      ) : (\n        <ResponsiveLink\n          color=\"textPrimary\"\n          disabled={!transaction.editable}\n          onClick={() => setShowDialog(true)}\n        >\n          {categoryName}\n        </ResponsiveLink>\n      )}\n      {showDialog ? (\n        <CategoryDialogSelect\n          transactionId={transaction.id}\n          selectableCategories={selectableCategories}\n          selected={transaction.categoryId}\n          showDialog={showDialog}\n          setShowDialog={setShowDialog}\n        />\n      ) : null}\n    </div>\n  )\n}\n\ninterface CategoryDialogSelectProps {\n  setShowDialog: (boolean) => void\n  showDialog: boolean\n  selected: number | null\n  transactionId: number\n  selectableCategories: Array<ICategory>\n}\nconst CategoryDialogSelect: React.FC<CategoryDialogSelectProps> = ({\n  showDialog,\n  setShowDialog,\n  selected,\n  transactionId,\n  selectableCategories,\n}) => {\n  const initialTextValue = selectableCategories.find((c) => c.id === selected)?.name || ''\n  const classes = useStyles()\n  const [categorizeTransaction, { loading }] = useApolloQuery({})\n  const [textValue, setTextValue] = React.useState<string>(initialTextValue)\n\n  const choices =\n    !textValue.length || textValue === initialTextValue\n      ? selectableCategories\n      : selectableCategories.filter((c) => c.name.includes(textValue.toUpperCase()))\n  return (\n    <Dialog fullScreen={true} onClose={() => setShowDialog(false)} open={showDialog}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => setShowDialog(false)}\n            aria-label=\"close\"\n          >\n            <Close />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Select a Category\n          </Typography>\n          <Button autoFocus color=\"inherit\" onClick={() => setShowDialog(false)}>\n            Cancel\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <DialogContent>\n        {loading ? (\n          <div>loading...</div>\n        ) : (\n          <TextField\n            value={textValue}\n            onChange={(e) => {\n              setTextValue(e.target.value)\n            }}\n            variant=\"outlined\"\n          />\n        )}\n        <List>\n          {choices.map((c) => (\n            <ListItem\n              key={c.id}\n              button\n              selected={c.id === selected}\n              onClick={(e) =>\n                categorizeTransaction({\n                  variables: {\n                    id: transactionId,\n                    categoryId: c.id,\n                  },\n                }).then(() => setShowDialog(false))\n              }\n            >\n              <ListItemText>{c.name}</ListItemText>\n              <ListItemSecondaryAction>\n                <Icon color=\"action\">{c.iconId}</Icon>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import * as React from 'react'\nimport * as _ from 'lodash'\nimport { TextField } from '@material-ui/core'\n\ninterface IDebouncedTextField {\n  helperText?: string\n  onBounce: (newValue) => void\n  setter: (newValue) => void\n  type?: string\n  value?: any\n  loading?: boolean\n  fullWidth?: boolean\n  label?: string\n}\n\nexport const DebouncedTextField: React.FunctionComponent<IDebouncedTextField> = ({\n  helperText,\n  setter,\n  onBounce,\n  label,\n  type,\n  value,\n  loading,\n  fullWidth,\n}) => {\n  const debounced = React.useCallback(_.debounce(onBounce, 1000), [])\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      error={!!loading}\n      fullWidth={fullWidth}\n      label={label}\n      helperText={loading ? 'saving ...' : helperText}\n      type={type}\n      onChange={(event) => {\n        setter(event.target.value)\n        debounced(event.target.value)\n      }}\n      value={value}\n    />\n  )\n}\n","import * as React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Slider from '@material-ui/core/Slider'\nimport { useApolloQuery } from '@src/queries/__generated__/UpdateTransaction.hooks'\nimport { DebouncedTextField } from '@src/components/DebouncedTextField'\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#3f51b5',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider)\n\nconst getPercentage = (balance: number, total: number) => {\n  return Number(((balance / total) * 100).toFixed(2))\n}\n\nexport const BalanceAdjustField = (props: {\n  transactionId\n  total: number\n  balanceAdjust: number\n}) => {\n  const [balanceAdjust, setBalanceAdjust] = React.useState<number>(props.balanceAdjust)\n  const [percentage, setPercentage] = React.useState<number>(\n    getPercentage(balanceAdjust, props.total),\n  )\n  const [updateTransaction, { loading, error }] = useApolloQuery({})\n\n  const handleSliderChange = (event: any, newPercentage: number) => {\n    const newBalanceAdjust = (newPercentage * props.total) / 100\n    setPercentage(newPercentage)\n    setBalanceAdjust(newBalanceAdjust)\n    updateTransaction({\n      variables: {\n        input: {\n          id: props.transactionId,\n          balanceAdjust: newBalanceAdjust.toString(),\n        },\n      },\n    })\n  }\n  if (error) return <div>{error.message}</div>\n\n  return (\n    <div>\n      <Typography color=\"textSecondary\" id=\"input-slider\" gutterBottom>\n        Balance Adjust\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs={9}>\n          <PrettoSlider\n            style={{ marginTop: '1.5rem' }}\n            value={typeof percentage === 'number' ? percentage : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n            defaultValue={0}\n            min={-100}\n            max={100}\n            step={null}\n            valueLabelDisplay=\"on\"\n            marks={[\n              { value: -100, label: '-100%' },\n              { value: -50, label: '-50%' },\n              { value: 0, label: '0%' },\n              { value: 50, label: '50%' },\n              { value: 100, label: '100%' },\n            ]}\n            valueLabelFormat={(value: number) => `${value}%`}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <div style={{ paddingBottom: '2rem' }}>\n            <DebouncedTextField\n              type=\"number\"\n              loading={loading}\n              value={balanceAdjust}\n              setter={(newValue) => {\n                setBalanceAdjust(newValue)\n                setPercentage((Number(newValue) / props.total) * 100)\n              }}\n              onBounce={(newValue) => {\n                updateTransaction({\n                  variables: {\n                    input: { id: props.transactionId, balanceAdjust: newValue as string },\n                  },\n                })\n              }}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Grid } from '@material-ui/core'\nimport { useApolloQuery } from '@src/queries/__generated__/GetEventLogs.hooks'\n\ninterface IEventLogProps {\n  transactionId: number\n}\nexport const EventLog = (props: IEventLogProps) => {\n  const { data } = useApolloQuery({\n    variables: {\n      filters: {\n        offset: 0,\n        limit: 10,\n        entityId: props.transactionId.toString(),\n      },\n    },\n  })\n  if (data) {\n    return (\n      <div>\n        {data.eventLogs.map((log) => (\n          <div key={log.id}>\n            <Grid container spacing={10}>\n              <Grid item xs={3} sm={3}>\n                <div>{log.eventName}</div>\n              </Grid>\n              <Grid item xs={3} sm={3}>\n                <div>{log.createdTs}</div>\n              </Grid>\n              <Grid item xs={6} sm={6}>\n                <div>\n                  {log.changes.map((change, index) => (\n                    <div key={index}>{change}</div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        ))}\n      </div>\n    )\n  }\n  return <div />\n}\n","import { Card, Collapse, CardHeader, CardContent, Fab, Grid, Typography } from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\nimport { useMutation } from '@apollo/client'\nimport * as _ from 'lodash'\nimport * as React from 'react'\nimport { CategoryField } from './CategoryField'\nimport { BalanceAdjustField } from './BalanceAdjustField'\nimport { EventLog } from './EventLog'\nimport { useStyles } from '@src/styles'\nimport { ResponsiveLink, ResponsiveLabel } from '@src/components/ResponsiveLabel'\nimport {\n  QUERY as MUTATION,\n  UpdateTransaction,\n  UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction.hooks'\nimport {\n  QUERY as GET_TRANSACTIONS_QUERY,\n  GetTransactions,\n  GetTransactions_categories,\n  GetTransactions_transactions as GetTransactions_transaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\nimport { DebouncedTextField } from '@src/components/DebouncedTextField'\nimport { formatDate } from '@src/utils'\n\nimport {\n  QUERY as ARCHIVE_TRANSACTION_MUTATION,\n  ArchiveTransaction,\n  ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction.hooks'\n\ninterface ITransactionRowProps {\n  transaction: GetTransactions_transaction\n  expanded: boolean\n  selectableCategories: Array<GetTransactions_categories>\n  onToggleExpansion: (event) => void\n  showDate: boolean\n}\n\nexport const TransactionRowComponent = (props: ITransactionRowProps) => {\n  const classes = useStyles()\n\n  const { showDate, selectableCategories, transaction, expanded, onToggleExpansion } = props\n  const [notes, setNotes] = React.useState(transaction.notes)\n\n  const [updateTransaction, { loading }] = useMutation<\n    UpdateTransaction,\n    UpdateTransactionVariables\n  >(MUTATION)\n  const [archiveTransaction] = useMutation<ArchiveTransaction, ArchiveTransactionVariables>(\n    ARCHIVE_TRANSACTION_MUTATION,\n    {\n      update(cache, { data }) {\n        const variables = {\n          // TODO: send real offset and limit\n          filters: { offset: 0, limit: 40 },\n        }\n        if (data?.archiveTransaction?.isOk) {\n          const cached = cache.readQuery<GetTransactions>({\n            query: GET_TRANSACTIONS_QUERY,\n            variables,\n          })\n          const removed = [...cached!.transactions]\n          _.remove(removed, (t) => t.id === transaction.id)\n          cache.writeQuery({\n            query: GET_TRANSACTIONS_QUERY,\n            data: Object.assign({}, cached, { transactions: removed }),\n            variables,\n          })\n        }\n      },\n    },\n  )\n\n  return (\n    <div>\n      <Card style={showDate ? { marginTop: '1rem' } : undefined}>\n        {showDate ? (\n          <CardHeader className={classes.header} title={formatDate(transaction.issuedDate)} />\n        ) : null}\n        <CardContent className={!transaction.editable ? classes.disabled : undefined}>\n          <Grid container spacing={10}>\n            <Grid item xs={4} sm={4}>\n              <CategoryField\n                transaction={transaction}\n                selectableCategories={selectableCategories}\n              />\n            </Grid>\n            <Grid item xs={5} sm={4}>\n              <ResponsiveLink\n                color=\"textPrimary\"\n                disabled={!transaction.editable}\n                onClick={onToggleExpansion}\n              >\n                {transaction.merchantName}\n              </ResponsiveLink>\n              <div>\n                <ResponsiveLabel color=\"textSecondary\">{transaction.notes}</ResponsiveLabel>\n              </div>\n            </Grid>\n            <Grid item xs={3} sm={4}>\n              <div style={{ float: 'right' }}>\n                <ResponsiveLabel>{`${transaction.totalAmount}`}</ResponsiveLabel>\n                <Typography\n                  variant=\"subtitle2\"\n                  style={{\n                    color: +transaction.balanceAdjust > 0 ? 'green' : 'red',\n                  }}\n                >\n                  {`${transaction.balanceAdjust}`}\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Collapse style={{ margin: '1rem' }} in={expanded} unmountOnExit>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={12}>\n              <BalanceAdjustField\n                transactionId={transaction.id}\n                balanceAdjust={Number(transaction.balanceAdjust)}\n                total={parseFloat(transaction.totalAmount)}\n              />\n            </Grid>\n            <Grid item xs={10} sm={11}>\n              <DebouncedTextField\n                fullWidth={true}\n                loading={loading}\n                label=\"Notes\"\n                value={notes}\n                setter={(newValue) => {\n                  setNotes(newValue)\n                }}\n                onBounce={(newValue) =>\n                  updateTransaction({\n                    variables: { input: { id: transaction.id, notes: newValue as string } },\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={2} sm={1} style={{ textAlign: 'right' }}>\n              <Fab\n                size=\"medium\"\n                color=\"secondary\"\n                aria-label=\"Delete\"\n                onClick={() =>\n                  archiveTransaction({\n                    variables: {\n                      id: transaction.id,\n                    },\n                  })\n                }\n              >\n                <Delete />\n              </Fab>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <EventLog transactionId={transaction.id}></EventLog>\n            </Grid>\n          </Grid>\n        </Collapse>\n      </Card>\n    </div>\n  )\n}\nconst areEqual = (last: ITransactionRowProps, next: ITransactionRowProps) => {\n  if (\n    _.isEqual(last.transaction, next.transaction) &&\n    last.expanded === next.expanded &&\n    last.selectableCategories.length === next.selectableCategories.length\n  ) {\n    return true\n  }\n  return false\n}\nconst TransactionRow = React.memo(TransactionRowComponent, areEqual)\n\n/*\n * This is a wrapper component that is used to control the expansion states of\n * the rows. We do not want a compolicated component to manage the expansion\n * state becaue the rerending will be too expensive.\n */\nexport const TransactionRows: React.FC<{\n  categories: Array<GetTransactions_categories>\n  transactions: Array<GetTransactions_transaction>\n}> = (props) => {\n  const [expanded, setExpanded] = React.useState<number | null>(null)\n  const handleChange = (eventId: number) => (event: React.ChangeEvent<{}>) => {\n    if (eventId === expanded) {\n      return setExpanded(null)\n    }\n    setExpanded(eventId)\n  }\n  return (\n    <>\n      {props.transactions.map((t, index) => {\n        let showDate = false\n        if (index > 0) {\n          const prev = props.transactions[index - 1]\n          showDate = prev.issuedDate !== t.issuedDate\n        } else {\n          // First transaction always show date\n          showDate = true\n        }\n        return (\n          <TransactionRow\n            showDate={showDate}\n            selectableCategories={props.categories.filter((c) => c.is_selectable)}\n            expanded={expanded === t.id}\n            key={t.id}\n            transaction={t}\n            onToggleExpansion={handleChange(t.id)}\n          />\n        )\n      })}\n    </>\n  )\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nexport const isDarkMode = sessionStorage.getItem('colorTheme') === 'dark'\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: isDarkMode ? 'dark' : 'light',\n  },\n})\n","import * as React from 'react'\nimport { useMutation } from '@apollo/client'\nimport {\n  ListItemSecondaryAction,\n  ButtonGroup,\n  Button,\n  Tooltip,\n  Icon,\n  ListItemIcon,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@material-ui/core'\nimport { getEventButtonIcon, getEventIcon, getEventDescription } from './utils'\nimport { IEvent, ICheckPoint } from './types'\nimport GET_EVENTS from '@src/queries/GetEvents.graphql'\nimport { SnackContext } from 'rice-instructor'\nimport { theme } from '@src/theme'\nimport {\n  QUERY as SIGN_CHECKPOINT_MUTATION,\n  SignCheckpoint,\n  SignCheckpointVariables,\n} from '@src/queries/__generated__/SignCheckpoint.hooks'\nimport { BASE_URL } from '@src/history'\nimport { useHistory, useLocation } from '@src/App/hooks'\n\nexport const EventRow = (props: { event: IEvent }) => {\n  const location = useLocation()\n  const history = useHistory()\n\n  const { event } = props\n  const disabled = location.filters.batchId === event.id\n  if (event.eventType === 'CHECKPOINT') {\n    return <CheckpointListItem disabled={disabled} checkpoint={event as ICheckPoint} />\n  }\n  const eventIcon = getEventIcon(event)\n  const onFilterBatch = () => {\n    history.push(`/TransactionList`, { batchId: event.id })\n  }\n  const eventButtonIcon = getEventButtonIcon(event)\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilterBatch}>\n      <ListItemIcon>\n        <Tooltip title={event.eventType || ''}>\n          <Icon>{eventIcon}</Icon>\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(event.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{getEventDescription(event)}</Typography>\n      </ListItemText>\n      {eventButtonIcon ? (\n        <ListItemSecondaryAction>\n          <Button>\n            <Icon>{eventButtonIcon}</Icon>\n          </Button>\n        </ListItemSecondaryAction>\n      ) : null}\n    </ListItem>\n  )\n}\n\nexport const CheckpointListItem: React.FC<{\n  disabled: boolean\n  checkpoint: ICheckPoint\n}> = ({ checkpoint, disabled }) => {\n  const snackbar = React.useContext(SnackContext)\n  const history = useHistory()\n  // Set id to 0 if it's virtual\n  const checkpointId = checkpoint['isVirtual'] ? 0 : checkpoint.id\n\n  const [signCheckpoint, { loading }] = useMutation<SignCheckpoint, SignCheckpointVariables>(\n    SIGN_CHECKPOINT_MUTATION,\n    {\n      refetchQueries: [{ query: GET_EVENTS }],\n    },\n  )\n  const onFilter = () => {\n    history.push('/TransactionList', {\n      checkpointId,\n    })\n  }\n  const description = checkpoint.signedTs\n    ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n        checkpoint.signedTs,\n      ).toLocaleDateString()}`\n    : 'Not Signed'\n\n  if (loading) {\n    return <div>Signing ...</div>\n  }\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilter}>\n      <ListItemIcon>\n        <Tooltip title={checkpoint.eventType || ''}>\n          {checkpoint.signedTs ? (\n            <Icon>toll</Icon>\n          ) : (\n            <Icon style={{ color: theme.palette.success.main }}>fiber_new</Icon>\n          )}\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(checkpoint.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{description}</Typography>\n      </ListItemText>\n      <ListItemSecondaryAction>\n        <ButtonGroup\n          color=\"secondary\"\n          variant=\"contained\"\n          size=\"small\"\n          aria-label=\"Small outlined button group\"\n        >\n          {checkpoint.signedTs ? null : (\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              onClick={() =>\n                signCheckpoint({\n                  variables: {\n                    id: checkpointId,\n                  },\n                }).then(\n                  () => {},\n                  (e) => snackbar.push(e.message),\n                )\n              }\n            >\n              <Icon>plus_one</Icon>\n            </Button>\n          )}\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            disabled={!sessionStorage.getItem('authToken')}\n            onClick={() => {\n              window.open(\n                `${BASE_URL}/checkpoint/${checkpoint.id}?token=${sessionStorage.getItem(\n                  'authToken',\n                )}`,\n                '_blank',\n              )\n            }}\n          >\n            <Icon>cloud_download</Icon>\n          </Button>\n        </ButtonGroup>\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n}\n","import { IBatch, ICheckPoint, IEvent } from './types'\n\nexport const getEventDescription = (e: IEvent) => {\n  if (e.eventType === 'CHECKPOINT') {\n    const checkpoint = e as ICheckPoint\n    return checkpoint.signedTs\n      ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n          checkpoint.signedTs,\n        ).toLocaleDateString()}`\n      : 'Not Signed'\n  }\n  const batch: IBatch = e as IBatch\n  // bank uploads\n  if (batch.origin != 'wave') {\n    return `${batch.origin}: ${batch.startDate} TO ${batch.endDate}`\n  }\n  // Imported from wave or plaid\n  if (e.eventType === 'BATCH_IMPORT') {\n    const batch_import = e as IBatch\n    return `${batch_import.origin}: ${batch_import.startDate.slice(\n      0,\n      10,\n    )} TO ${batch_import.endDate.slice(0, 10)}`\n  }\n\n  throw new Error('not possible')\n}\nexport const getEventIcon = (event: IEvent) => {\n  if (event.eventType === 'CHECKPOINT') {\n    return 'toll'\n  }\n  const batch: IBatch = event as IBatch\n  // bank uploads\n  if (batch.origin != 'wave') {\n    return 'cloud_upload'\n  }\n  if (batch.eventType === 'BATCH_IMPORT') {\n    const batch_import = batch\n    return { plaid: 'grid_on', wave: 'waves' }[batch_import.origin]\n  }\n  throw new Error('not possible')\n}\n\nexport const getEventButtonIcon = (event: IEvent) => {\n  if (event.eventType === 'CHECKPOINT') {\n    return 'plus_one'\n  }\n  return null\n}\n","import { LinearProgress, List } from '@material-ui/core'\nimport * as React from 'react'\nimport { EventRow } from './EventRow'\nimport { useApolloQuery } from '@src/queries/__generated__/GetEvents.hooks'\n\ninterface Prop {}\nexport const Timeline: React.FC<Prop> = () => {\n  const { loading, error, data } = useApolloQuery()\n  if (loading) return <LinearProgress />\n  if (error) return <p>Error :(</p>\n  if (!data) throw new Error('bad')\n  const events = [...data.checkpoints, ...data.batches]\n  events.sort((a, b) => {\n    // Latest first\n    return Date.parse(b.createdTs) - Date.parse(a.createdTs)\n  })\n  return (\n    <div>\n      <List>\n        {events.map((e, index) => {\n          return e ? <EventRow event={e} key={index} /> : null\n        })}\n      </List>\n    </div>\n  )\n}\n","import { Paper, LinearProgress, Button, Grid } from '@material-ui/core'\nimport * as React from 'react'\nimport { ImportForm } from './ImportForm'\n\nimport { NewTransactionForm } from './NewTransactionForm'\nimport { TransactionListAppBar } from './TransactionListAppBar'\nimport { TransactionRows } from './TransactionRow'\nimport { useLocation } from '@src/App/hooks'\nimport { useApolloQuery } from '@src/queries/__generated__/GetTransactions.hooks'\nimport { Timeline } from '@src/App/Timeline'\n\ntype FormType = 'transaction' | 'wave'\n\nconst limit = 40\nconst isWide = window.innerWidth > 600\n\nexport const TransactionList = () => {\n  const location = useLocation()\n\n  const [showTimeline, setShowTimeline] = React.useState(isWide)\n  const [formType, setFormType] = React.useState<FormType | null>(null)\n  const filters = location.filters\n\n  const { loading: isTransactionLoading, data, fetchMore } = useApolloQuery({\n    variables: {\n      filters: {\n        offset: 0,\n        limit,\n        ...filters,\n      },\n    },\n  })\n  const transactions = data?.transactions || []\n  const categories = data?.categories || []\n  // TODO: implement selectable\n  const selectableCategories = categories.filter((c) => c)\n\n  const loadMoreTransactions = () => {\n    fetchMore({\n      variables: { filters: { offset: transactions.length || -1, limit, ...filters } },\n      updateQuery: (prev: any, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev\n        return Object.assign({}, prev, {\n          transactions: [...prev.transactions, ...fetchMoreResult.transactions],\n        })\n      },\n    })\n  }\n\n  const showForm = (formType: FormType) => {\n    setFormType(formType)\n  }\n  return (\n    <Paper variant=\"outlined\">\n      <div style={{ maxWidth: '100%' }}>\n        <TransactionListAppBar\n          toggleTimeline={() => setShowTimeline(!showTimeline)}\n          showForm={showForm}\n          balance={data?.balance.amount || '?'}\n          categoryChoices={selectableCategories.map((c) => {\n            return { id: c.id, label: c.description }\n          })}\n        />\n        <div\n          style={{\n            height: window.innerHeight - 70,\n            overflow: 'scroll',\n          }}\n        >\n          <Grid container>\n            {showTimeline ? (\n              <Grid item sm={3}>\n                <Timeline />\n              </Grid>\n            ) : null}\n            <Grid item sm={showTimeline ? 9 : 12}>\n              <div style={{ marginBottom: '20px' }}>\n                {formType === 'transaction' ? (\n                  <NewTransactionForm\n                    selectableCategories={selectableCategories || []}\n                    onClose={() => setFormType(null)}\n                  />\n                ) : null}\n                {formType === 'wave' ? <ImportForm onClose={() => setFormType(null)} /> : null}\n              </div>\n              {isTransactionLoading ? (\n                <LinearProgress />\n              ) : (\n                <TransactionRows categories={categories || []} transactions={transactions || []} />\n              )}\n              <Button fullWidth size=\"large\" color=\"secondary\" onClick={loadMoreTransactions}>\n                ({transactions.length}) Click to Load More ...\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import { Typography, Icon, ListItemIcon, Select, MenuItem } from '@material-ui/core'\nimport * as React from 'react'\n\ninterface IIconSelect {\n  initialValue: string | null\n  onChange: (event, child) => void\n  /*\n  options: Array<{\n    value: number | string\n    label: string\n  }>\n   */\n}\nconst ICON_IDS = [\n  'attach_money',\n  'beach_access',\n  'cake',\n  'compare_arrows',\n  'free_breakfast',\n  'gavel',\n  'home',\n  'local_activity',\n  'local_bar',\n  'local_car_wash',\n  'local_gas_station',\n  'local_grocery_store',\n  'local_hospital',\n  'local_parking',\n  'local_taxi',\n  'motorcycle',\n  'movie',\n  'not_interested',\n  'perm_scan_wifi',\n  'phone_iphone',\n  'power',\n  'help',\n  'restaurant',\n  'rowing',\n  'school',\n  'settings_input_component',\n  'settings_input_hdmi',\n  'shopping_basket',\n  'subway',\n  'theaters',\n  'pets',\n]\nexport const IconSelect: React.FC<IIconSelect> = ({ initialValue, onChange }) => {\n  return (\n    <Select onChange={onChange} value={initialValue}>\n      {ICON_IDS.map((iconId) => (\n        <MenuItem key={iconId} value={iconId}>\n          <ListItemIcon>\n            <Icon color=\"primary\">{iconId}</Icon>\n          </ListItemIcon>\n          <Typography style={{ float: 'right' }}>{iconId}</Typography>\n        </MenuItem>\n      ))}\n    </Select>\n  )\n}\n","import * as React from 'react'\n\nimport {\n  makeStyles,\n  TextField,\n  ListItemSecondaryAction,\n  IconButton,\n  Theme,\n  createStyles,\n  Icon,\n  ListItemIcon,\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core'\nimport { ExpandMore, ExpandLess } from '@material-ui/icons'\nimport { Node } from './selectors'\nimport { IconSelect } from '@src/components/IconSelect'\n\ninterface ITreeProps {\n  node: Node\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n  level?: number\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    node: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n)\n\nexport const Tree: React.FC<ITreeProps> = (props) => {\n  const { node, level = 0, onSelectIcon, onSaveNode } = props\n  const classes = useStyles()\n\n  const [open, setOpen] = React.useState(true)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n  return (\n    <List component=\"nav\" className={classes.node}>\n      <ListItem button onClick={handleClick} style={{ paddingLeft: `${32 * level}px` }}>\n        <ListItemIcon>\n          <Icon color=\"secondary\">{node.iconId}</Icon>\n        </ListItemIcon>\n        <ListItemText primary={node.name}></ListItemText>\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {node.children.map((child) =>\n            child.children.length ? (\n              <Tree\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ) : (\n              <NodeListItem\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ),\n          )}\n        </List>\n      </Collapse>\n    </List>\n  )\n}\n\nconst NodeListItem: React.FC<{\n  node: Node\n  level: number\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n}> = ({ node, level, onSaveNode, onSelectIcon }) => {\n  const [editable, setEditable] = React.useState(false)\n  const [pickingIcon, setPickingIcon] = React.useState(false)\n  const [nodeName, setNodeName] = React.useState(node.name)\n  const [iconId, setIconId] = React.useState(node.iconId)\n  return (\n    <>\n      <ListItem\n        key={node.id}\n        dense\n        button\n        role={undefined}\n        style={{ paddingLeft: `${32 * (level + 1)}px` }}\n      >\n        {editable ? (\n          <TextField\n            autoFocus={true}\n            value={nodeName}\n            onChange={(event) => setNodeName(event.target.value)}\n            onBlur={() => {\n              setEditable(false)\n              onSaveNode(node.id, nodeName)\n            }}\n          />\n        ) : (\n          <>\n            {pickingIcon ? (\n              <IconSelect\n                onChange={(e, child) => {\n                  onSelectIcon(node.id, e.target.value)\n                  setIconId(e.target.value)\n                  setPickingIcon(false)\n                }}\n                initialValue={iconId}\n              ></IconSelect>\n            ) : (\n              <ListItemText onClick={() => setEditable(true)} primary={nodeName}></ListItemText>\n            )}\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => setPickingIcon(true)} edge=\"end\">\n                <Icon color=\"primary\">{iconId}</Icon>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </>\n        )}\n      </ListItem>\n    </>\n  )\n}\n","import { GetCategories_categories } from 'src/queries/__generated__/GetCategories.hooks'\n\nexport interface Node extends GetCategories_categories {\n  children: Array<Node>\n}\n\n/*\n * Recursive: add a node to a tree. If node has no parent, add to root.\n * Otherwise, add to its parent\n */\nconst addNode = (node: Node, tree, visited: Array<Node>, remaining: Array<Node>) => {\n  // Add to root\n  visited.push(node)\n  const p = visited.find((x) => x.id === node.parent_id)\n\n  if (!node.parent_id) {\n    tree[node.id] = node\n    return\n  } else if (p) {\n    // Find parent who is in visited attach\n    const parentNode = p\n    if (!parentNode.children.find((x) => x.id === node.id)) {\n      parentNode.children.push(node)\n    }\n    return\n  } else {\n    //parent is not visited either\n    const parentNode = remaining.find((v) => v.id === node.parent_id)\n    if (!parentNode) {\n      throw new Error('no parent cat')\n    }\n    if (!parentNode.children.find((x) => x.id === node.id)) {\n      parentNode.children.push(node)\n    }\n    // const parentNode = { ...parentCat, children: [node] }\n    return addNode(parentNode, tree, visited, remaining)\n  }\n}\n\nexport const getCategoryTree = (categories: Array<GetCategories_categories>) => {\n  const tree = {}\n  const visited: Array<Node> = []\n  const remaining = categories.map((c) => {\n    return { ...c, children: [] }\n  })\n\n  while (remaining.length > 0) {\n    // Take node out of remaining\n    const node = remaining.pop()\n    if (!node) throw new Error()\n\n    addNode(node, tree, visited, remaining)\n  }\n\n  return tree\n}\n","import * as React from 'react'\nimport { Tree } from './Tree'\nimport { getCategoryTree } from './selectors'\nimport { useApolloQuery } from '@src/queries/__generated__/GetCategories.hooks'\n\nexport const CategoryPage: React.FC<{}> = (props) => {\n  const { data } = useApolloQuery()\n\n  if (!data) {\n    return <div>loading...</div>\n  }\n  const tree = getCategoryTree(data.categories)\n  const root = {\n    id: 0,\n    name: 'root',\n    iconId: null,\n    parent_id: null,\n    is_selectable: false,\n    is_active: true,\n    __typename: 'Category',\n    description: 'root',\n    children: Object.keys(tree).map((k) => tree[k]),\n  }\n\n  return (\n    <Tree\n      onSaveNode={(id: number, name: string) => console.log(id, name)}\n      onSelectIcon={(id: number, iconId: string) => console.log(id, iconId)}\n      node={root as any}\n    />\n  )\n}\n","import HighchartsData from 'highcharts-data'\nimport HighchartsDrilldown from 'highcharts-drilldown'\nimport * as React from 'react'\nimport Highchart from 'react-highcharts'\nimport u from 'updeep'\nimport { useApolloQuery } from '@src/queries/__generated__/GetProfitAndLossChart.hooks'\nimport { getIsoDateString } from '@src/utils'\n\nHighchartsData(Highchart.Highcharts)\nHighchartsDrilldown(Highchart.Highcharts)\n\nconst getChartConfig = ({ onClickColumn }) => {\n  return {\n    chart: {\n      type: 'column',\n      //height: 800,\n      //width: 800\n    },\n    title: {\n      text: 'Income/Expense Report',\n    },\n    xAxis: {\n      type: 'category',\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Spend',\n        align: 'high',\n      },\n      labels: {\n        overflow: 'justify',\n      },\n    },\n    tooltip: {\n      valueSuffix: ' dollars',\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: true,\n        },\n      },\n      column: {\n        dataLabels: {\n          enabled: true,\n        },\n        allowPointSelect: false,\n        events: {\n          click: onClickColumn,\n        },\n      },\n    },\n    legend: {\n      enabled: true,\n      layout: 'vertical',\n      align: 'right',\n      verticalAlign: 'top',\n      x: -40,\n      y: 80,\n      floating: true,\n      borderWidth: 1,\n      shadow: true,\n    },\n    credits: {\n      enabled: false,\n    },\n  }\n}\nconst today = new Date()\nconst sixMonthsAgo = new Date()\nsixMonthsAgo.setDate(sixMonthsAgo.getDate() - 180)\n// Set to start of the month\nsixMonthsAgo.setDate(1)\n\nexport const PnlChart: React.FC<{}> = (props) => {\n  const { loading, error, data } = useApolloQuery({\n    variables: {\n      startDate: getIsoDateString(sixMonthsAgo),\n      endDate: getIsoDateString(today),\n    },\n  })\n  if (loading) {\n    return <div>loading ...</div>\n  }\n  if (error) return <div>error ...</div>\n\n  const initial = getChartConfig({\n    onClickColumn: (e) => console.log(e),\n  })\n  const titled = u(\n    {\n      title: {\n        text: 'Profit & Loss Report',\n      },\n    },\n    initial,\n  )\n  const config = Object.assign({}, titled, data!.profitAndLossChart)\n  return (\n    <div>\n      <Highchart config={config} />\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { FormControlLabel, Checkbox } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/core/styles'\n\nimport { Admin, SnackProvider, Directory } from 'rice-instructor'\nimport { TransactionList } from '@src/TransactionList'\n\nimport { CategoryPage } from '../CategoryPage'\nimport { PnlChart } from '@src/Report/PnlChart'\n\nimport { theme, isDarkMode } from '@src/theme'\n\nconst routes = [\n  { path: '/ProfitAndLoss', children: <PnlChart />, linkText: 'Profit and Loss Chart' },\n  { path: '/TransactionList', children: <TransactionList /> },\n  { path: '/CategoryPage', children: <CategoryPage /> },\n  { path: '/Admin', children: <Admin />, exact: false },\n]\n\nexport const Home: React.FC<unknown> = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <SnackProvider>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={isDarkMode}\n              onChange={(e) => {\n                sessionStorage.setItem('colorTheme', e.target.checked ? 'dark' : 'light')\n                window.location.reload()\n              }}\n              name=\"sharedOnly\"\n            />\n          }\n          label=\"Dark Mode\"\n        />\n        <Directory redirectToLoginIfUnauthenticated={true} routes={routes} />\n      </SnackProvider>\n    </ThemeProvider>\n  )\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport { App } from '@src/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetTransactions, GetTransactionsVariables,\n} from '@src/queries/__generated__/GetTransactions'\nimport GetTransactions__QUERY from '@src/queries/GetTransactions.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/client'\n\nexport * from '@src/queries/__generated__/GetTransactions'\n\nexport const QUERY = GetTransactions__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetTransactions, GetTransactionsVariables>,\n) {\n  return useQuery<GetTransactions, GetTransactionsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IUserTransaction\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalAmount\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issuedDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpointId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"editable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"predicatedCategory\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"predicatedSplit\"},\"arguments\":[],\"directives\":[]}]}}],\"loc\":{\"start\":0,\"end\":216}};\n    doc.loc.source = {\"body\":\"fragment FragmentTransaction on IUserTransaction {\\n  id\\n  totalAmount\\n  issuedDate\\n  notes\\n  categoryId\\n  checkpointId\\n  merchantName\\n  balanceAdjust\\n  createdById\\n  editable\\n  predicatedCategory\\n  predicatedSplit\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","/*\nexport enum UrlPathEnum {\n  Root = '',\n  LoginPage = 'LoginPage',\n  TablesPage = 'TablesPage',\n  TransactionList = 'TransactionList',\n  CategoryPage = 'CategoryPage',\n  PnlChart = 'PnlChart',\n}\n*/\nexport enum UrlPathEnum {\n  Root,\n  LoginPage,\n  TablesPage,\n  TransactionList,\n  CategoryPage,\n  PnlChart,\n}\n","import { createBrowserHistory } from 'history'\nimport * as _ from 'lodash'\nimport { UrlPathEnum } from '@src/types'\n\nconst pathMap: { [v: string]: UrlPathEnum } = {\n  '': UrlPathEnum.Root,\n  LoginPage: UrlPathEnum.LoginPage,\n  TablesPage: UrlPathEnum.TablesPage,\n  TransactionList: UrlPathEnum.TransactionList,\n  CategoryPage: UrlPathEnum.CategoryPage,\n  PnlChart: UrlPathEnum.PnlChart,\n}\n\nexport const history = createBrowserHistory()\nexport const pushHistory = (\n  pathname: UrlPathEnum,\n  subpath = '',\n  urlState?: {} | null,\n  state: {} | null = null,\n) => {\n  const searchString =\n    urlState && urlState && Object.keys(urlState).length\n      ? '?urlState=' + JSON.stringify(_.pickBy(urlState, _.identity))\n      : ''\n\n  const pathValue = Object.keys(pathMap).find((k) => pathMap[k] === pathname)\n  if (pathValue === undefined) {\n    throw new Error(`cannot find ${pathname}`)\n  }\n\n  let path: string\n  if (pathValue) {\n    path = ['/' + pathValue, subpath].join('/')\n  } else {\n    path = [pathValue, subpath].join('/')\n  }\n  console.log(`pathname: ${pathname} pathValue: ${pathValue} subpath: ${subpath} path: ${path}`)\n\n  return history.push({\n    pathname: path,\n    search: searchString,\n    state,\n  })\n}\n\nexport const getPathName = (): UrlPathEnum => {\n  const splitPaths = history.location.pathname.split('/').filter((p) => !!p)\n\n  const stripped = splitPaths\n\n  if (stripped.length === 0) {\n    return UrlPathEnum.Root\n  }\n  /*\n  else if (stripped.length !== 1) {\n    throw new Error(`${stripped}: Expected exactly 1 path`)\n  }\n  */\n\n  if (!pathMap[stripped[0]]) {\n    throw new Error(`cannot find ${stripped}`)\n  }\n\n  return pathMap[stripped[0]]\n}\n\nconst isLocal = !!window.location.port\n\nexport const BASE_URL = `${window.location.protocol}//${window.location.hostname}:${\n  isLocal ? '8888' : ''\n}`\n"],"sourceRoot":""}