{"version":3,"sources":["webpack:///./types/index.ts","webpack:///./queries/__generated__/UpdateTransaction.hooks.ts","webpack:///./TransactionChart.tsx","webpack:///./TransactionList/ImportForm.tsx","webpack:///./components/FileUploadButton.tsx","webpack:///./TransactionList/NewStatementForm.tsx","webpack:///./components/DialogSelect.tsx","webpack:///./TransactionList/NewTransactionForm.tsx","webpack:///./Root/SearchBar.tsx","webpack:///./TransactionList/TransactionListAppBar.tsx","webpack:///./TransactionList/SmartCatField.tsx","webpack:///./TransactionList/CategoryField.tsx","webpack:///./components/DebouncedTextField.tsx","webpack:///./components/icons.tsx","webpack:///./TransactionList/TransactionRow.tsx","webpack:///./Root/Timeline/EventRow.tsx","webpack:///./Root/Timeline/utils.ts","webpack:///./Root/Timeline/index.tsx","webpack:///./TransactionList/index.tsx","webpack:///./components/IconSelect.tsx","webpack:///./CategoryPage/Tree.tsx","webpack:///./CategoryPage/index.tsx","webpack:///./history.ts","webpack:///./Root/index.tsx","webpack:///./LoginPage.tsx","webpack:///./selectors.ts","webpack:///./queries/__generated__/ImportWaveTransactions.hooks.ts","webpack:///./queries/ImportWaveTransactions.graphql","webpack:///./queries/GetTransactions.graphql","webpack:///./queries/__generated__/CreateTransaction.hooks.ts","webpack:///./queries/CreateTransaction.graphql","webpack:///./queries/UpdateTransaction.graphql","webpack:///./queries/__generated__/ArchiveTransaction.hooks.ts","webpack:///./queries/ArchiveTransaction.graphql","webpack:///./queries/__generated__/SignCheckpoint.hooks.ts","webpack:///./queries/SignCheckpoint.graphql","webpack:///./queries/__generated__/GetEvents.hooks.ts","webpack:///./queries/GetEvents.graphql","webpack:///./gqlClient.ts","webpack:///./reducers.ts","webpack:///./main.tsx","webpack:///./configureStore.tsx","webpack:///./queries/__generated__/GetTransactions.hooks.ts","webpack:///./utils.ts","webpack:///./__generated__/backendSchemas.ts","webpack:///./Root/contexts.ts","webpack:///./actions.ts"],"names":["UrlPathEnum","QUERY","UpdateTransaction__QUERY","HighchartsData","Highchart","Highcharts","HighchartsDrilldown","TransactionChartComponent","props","e","showReport","target","value","config","chart","type","title","text","xAxis","yAxis","min","align","labels","overflow","tooltip","valueSuffix","plotOptions","bar","dataLabels","enabled","column","allowPointSelect","events","click","onClickColumn","bind","legend","layout","verticalAlign","x","y","floating","borderWidth","shadow","credits","state","reportTitle","report_type","initialReportType","this","console","log","today","Date","threeMonthAgo","setDate","getDate","apiName","butler","start_date","getIsoDateString","end_date","res","titled","u","getReportTitle","Object","assign","chart_data","setState","onChange","onChangeReportType","React","TransactionChart","connect","dispatch","bindActionCreators","BUTLER_ACTIONS","toISOString","slice","ImportForm","setStartDate","setEndDate","useApolloQuery","update","cache","data","importFromWave","isOk","cached","readQuery","query","GET_TRANSACTIONS_QUERY","writeQuery","transactions","onClose","importWaveTransactions","loading","Grid","container","item","xs","TextField","label","defaultValue","Button","onClick","variables","startDate","endDate","style","marginTop","color","variant","FileUploadButton","event","file","files","reader","FileReader","addEventListener","submitFileContent","result","readAsText","button","component","id","hidden","ref","fileInput","onFileInputChange","htmlFor","NewStatementForm","selectedSource","EnumStatementSource","CHEQUE","content","length","error","paddingTop","ExpansionPanel","expanded","ExpansionPanelSummary","spacing","sm","Select","onSelectType","map","c","MenuItem","key","Divider","ExpansionPanelActions","size","DialogSelect","choices","onSelectOption","isOpen","setIsOpen","initialOption","option","find","Error","getInitialOption","Icon","marginRight","mui_icon_id","Dialog","open","fullWidth","DialogTitle","DialogContent","opt","undefined","placeholder","options","fieldConfig","issued_date","required","merchant","notes","category_id","balance_adjust","total_amount","FieldInput","fieldName","updateField","instance","initialForm","getToday","NewTransactionForm","t","selectableCategories","formData","setFormData","createTransaction","old","newState","transaction","cat","description","input","issuedDate","totalAmount","merchantName","balanceAdjust","categoryId","disabled","every","Boolean","SearchBarComponent","anchorEl","_","newValue","ListTransactions","search_text","pushHistory","TransactionList","currentTarget","debounced","icon","InputAdornment","position","Search","onSearch","InputProps","startAdornment","Menu","handleClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","suggestions","sug","index","SearchBar","ownProps","TransactionListAppBar","AppBar","Toolbar","Tooltip","IconButton","toggleTimeline","History","balance","Typography","flex","Add","showForm","ListItemIcon","AttachMoney","ListItemText","CreditCard","Waves","sessionStorage","removeItem","window","location","href","className","SmartCatField","prediction","onAccept","split","fontWeight","categoryName","Check","Close","CategoryField","useMutation","MUTATION","updateTransaction","DebouncedTextField","helperText","setter","onBounce","PlaidIcon","float","CategoryInfoField","category","multiplier","user_id","lenderId","parseFloat","toString","TransactionRowComponent","onToggleExpansion","setBalanceAdjust","setNotes","archiveTransaction","ARCHIVE_TRANSACTION_MUTATION","removed","editable","formatDate","fields","originPayload","shouldExpandNode","__typename","accountName","plaidCategory","paddingLeft","ExpansionPanelDetails","textAlign","Fab","aria-label","Delete","areEqual","last","next","TransactionRow","TransactionRows","setExpanded","categories","eventId","isExpanded","EventRow","urlState","UrlStateContext","event_id","eventType","EventType","CHECKPOINT","onFilterEvent","authToken","checkpoint","eventIcon","BATCH_IMPORT","plaid","wave","origin","STATEMENT_UPLOAD","getEventIcon","eventButtonIcon","getEventButtonIcon","ListItem","selected","createdTs","toLocaleDateString","signedTs","signedBalance","batch_import","upload","source","firstDate","lastDate","getEventDescription","ListItemSecondaryAction","CheckpointListItem","SIGN_CHECKPOINT_MUTATION","signCheckpoint","ButtonGroup","getItem","BASE_URL","Timeline","LinearProgress","List","eventList","showTimeline","setShowTimeline","formType","setFormType","filters","offset","limit","fetchMore","refetch","maxWidth","height","innerHeight","marginBottom","updateQuery","prev","fetchMoreResult","ICON_IDS","IconSelect","initialValue","iconId","useStyles","makeStyles","theme","createStyles","node","width","backgroundColor","palette","background","paper","Tree","level","onSelectIcon","onSaveNode","classes","setOpen","primary","name","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","children","child","NodeListItem","setEditable","pickingIcon","setPickingIcon","nodeName","setNodeName","setIconId","dense","role","autoFocus","onBlur","edge","CategoryPage","ButlerContext","root","setRoot","TreefyCategories","UpdateCategory","history","createBrowserHistory","pathname","searchString","keys","JSON","stringify","push","search","getPathName","path","endsWith","Root","isAuthenticated","parseUrlState","Provider","Body","PageList","UrlPathsMap","LoginPage","warn","App","hot","module","client","username","setUsername","password","setPassword","errorMessage","setErrorMessage","submitLogin","fetch","method","body","headers","then","response","json","code","setItem","token","message","display","alignItems","justifyContent","flexDirection","onKeyPress","charCode","params","querystring","parse","ImportWaveTransactions__QUERY","doc","loc","definitionRefs","findOperation","i","definitions","element","forEach","def","refs","Set","collectFragmentReferences","kind","add","selectionSet","selections","selection","variableDefinitions","exports","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","prevRefs","has","childRef","op","oneQuery","CreateTransaction__QUERY","ArchiveTransaction__QUERY","SignCheckpoint__QUERY","GetEvents__QUERY","useQuery","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","__schema","types","errorLink","onError","graphQLErrors","networkError","gqlError","extensions","authLink","setContext","authorization","AC","link","concat","HttpLink","uri","InMemoryCache","initialState","handlers","snacks","EAT_SNACK","ADD_SNACK","action","snack","reducers","combineReducers","store","middleware","applyMiddleware","thunk","logger","createStore","configureStore","ReactDOM","document","getElementById","GetTransactions__QUERY","d","month","day","timeZone","year","getFullYear","getMonth","EnumRoute","updateType","successCallback","route","AuthenticateUser","ListCategories","ListEvents","GetUserBalance","UpdateTransaction","GetIncomeExpenseReport","GetExpenseReport","UploadStatement","ImportFromPlaid","ImportFromWave","SignCheckPoint","CreateTransaction","ArchiveTransaction","isLocal","port","protocol","hostname"],"mappings":"yFAQA,sCAgBYA,EAhBZ,gF,SAgBYA,K,SAAAA,E,uBAAAA,E,mCAAAA,E,qCAAAA,E,8BAAAA,M,uCCxBZ,kEAYaC,GAZb,OAYqBC,M,o5CCArBC,IAAeC,IAAUC,YACzBC,IAAoBF,IAAUC,YAI9B,IAsEME,E,sQACJ,WAAYC,GAAO,M,mGAAA,SACjB,cAAMA,G,EADW,K,EAuBE,SAACC,GACpB,EAAKC,WAAWD,EAAEE,OAAOC,S,EAxBR,wB,wFAEjB,IAAMC,EAxED,CACLC,MAAO,CACLC,KAAM,UAIRC,MAAO,CACLC,KAAM,yBAERC,MAAO,CACLH,KAAM,YAERI,MAAO,CACLC,IAAK,EACLJ,MAAO,CACLC,KAAM,QACNI,MAAO,QAETC,OAAQ,CACNC,SAAU,YAGdC,QAAS,CACPC,YAAa,YAEfC,YAAa,CACXC,IAAK,CACHC,WAAY,CACVC,SAAS,IAGbC,OAAQ,CACNF,WAAY,CACVC,SAAS,GAEXE,kBAAkB,EAClBC,OAAQ,CACNC,MAmCwB,CAC5BC,cAAe,EAAKA,cAAcC,KAAnB,OA1EKD,iBA0CtBE,OAAQ,CACNP,SAAS,EACTQ,OAAQ,WACRhB,MAAO,QACPiB,cAAe,MACfC,GAAI,GACJC,EAAG,GACHC,UAAU,EACVC,YAAa,EACbC,QAAQ,GAEVC,QAAS,CACPf,SAAS,IAiBM,OAKjB,EAAKgB,MAAQ,CACXhC,SACAC,MAAO,KACPgC,YAAa,GACbC,YAAavC,EAAMwC,mBATJ,E,mDAaLvC,GACZ,GAA+B,mBAA3BwC,KAAKJ,MAAME,YACb,OAAOG,QAAQC,IAAI1C,K,qCAIRG,GACb,MAAgB,kBAATA,EAA4B,wBAA0B,mB,iCAOpDmC,GAAyB,WAC5BK,EAAQ,IAAIC,KACZC,EAAgB,IAAID,KAC1BC,EAAcC,QAAQD,EAAcE,UAAY,KAChD,IAAMC,EAA0B,mBAAhBV,EAAmC,yBAA2B,mBAC9EE,KAAKzC,MAAMkD,OAAOD,GAChB,CAAEE,WAAYC,YAAiBN,GAAgBO,SAAUD,YAAiBR,IAC1E,cACA,SAACU,GACC,IAAMC,EAASC,IACb,CACEhD,MAAO,CACLC,KAAM,EAAKgD,eAAelB,KAG9B,EAAKF,MAAMhC,QAEPA,EAASqD,OAAOC,OAAO,GAAIJ,EAAQD,EAAIM,YAC7C,EAAKC,SAAS,CAAEvD,MAAO,gBAAC,IAAD,CAAWD,OAAQA,MAC1C,EAAKwD,SAAS,CAAEtB,cAAalC,gB,0CAMjCoC,KAAKvC,WAAWuC,KAAKJ,MAAME,e,+BAI3B,OAAKE,KAAKJ,MAAMhC,OAId,2BACE,gBAAC,IAAD,CAAQD,MAAOqC,KAAKJ,MAAME,YAAauB,SAAUrB,KAAKsB,oBACpD,gBAAC,IAAD,CAAU3D,MAAO,kBAAjB,kBACA,gBAAC,IAAD,CAAUA,MAAO,WAAjB,YAEF,yBAAIqC,KAAKJ,MAAMC,aACdG,KAAKJ,MAAM/B,OATP,6C,8BA1D2B0D,aA8E3BC,EAAmBC,YAAQ,MALb,SAACC,GAC1B,MAAO,CACLjB,OAAQkB,6BAAmBC,IAAgBF,MAGfD,CAAkCnE,I,y5CC7JlE,IAAM6C,GAAQ,IAAIC,MAAOyB,cAAcC,MAAM,EAAG,IAEnCC,EAAa,SAACxE,GAAmC,QACzBgE,WAAepB,GADU,GACrDO,EADqD,KACzCsB,EADyC,SAE7BT,WAAepB,GAFc,GAErDS,EAFqD,KAE3CqB,EAF2C,SAGdC,yBAAe,CAC3DC,OAD2D,SACpDC,EADoD,GACnC,IAARC,EAAQ,EAARA,KACd,GAAIA,aAAJ,EAAIA,EAAMC,eAAeC,KAAM,CAC7B,IAAMC,EAASJ,EAAMK,UAA2B,CAAEC,MAAOC,UACzDP,EAAMQ,WAAW,CACfF,MAAOC,QACPN,KAAMpB,OAAOC,OAAO,GAAIsB,EAAQ,CAC9BK,aAAc,GAAF,SAAMR,EAAKC,eAAeO,cAA1B,EAA2CL,EAAQK,mBAGnEtF,EAAMuF,cAbgD,GAGrDC,EAHqD,KAG3BC,EAH2B,KAG3BA,QAejC,OACE,gBAACC,EAAA,EAAD,CAAMC,WAAS,GACb,gBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,gBAACC,EAAA,EAAD,CACEvF,KAAK,OACLwF,MAAM,OACN3F,MAAO+C,EACPW,SAAU,SAAC7D,GAAD,OAAOwE,EAAaxE,EAAEE,OAAOC,WAG3C,gBAACsF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,gBAACC,EAAA,EAAD,CACEvF,KAAK,OACLwF,MAAM,KACNC,aAAcpD,EACdkB,SAAU,SAAC7D,GAAD,OAAOyE,EAAWzE,EAAEE,OAAOC,WAGzC,gBAACsF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,gBAACI,EAAA,EAAD,CACEC,QAAS,kBACPV,EAAuB,CACrBW,UAAW,CACTC,UAAWjD,EACXkD,QAAShD,MAIfiD,MAAO,CAAEC,UAAW,QACpBC,MAAM,UACNC,QAAQ,aAEPhB,EAAU,gBAAkB,a,w9CCrDhC,IAAMiB,EAAb,a,kOAAA,U,MAAA,2MAGsB,SAACC,GACnB,IAAMC,EAAOD,EAAMxG,OAAO0G,MAAM,GAC1BC,EAAS,IAAIC,WAGnBD,EAAOE,iBAAiB,QADP,kBAAM,EAAKhH,MAAMiH,kBAAkBH,EAAOI,WACjB,GACtCN,GACFE,EAAOK,WAAWP,MAVxB,S,EAAA,G,EAAA,gCAcW,WACDQ,EAAS3E,KAAKzC,MAAMoH,QACxB,gBAACnB,EAAA,EAAD,CAAQQ,QAAQ,WAAWY,UAAU,QAArC,UAIF,OACE,2BACE,yBACEC,GAAG,mBACHC,QAAM,EACNC,IAAK,SAACA,GAAD,OAAU,EAAKC,UAAYD,GAChC1D,SAAUrB,KAAKiF,kBACfnH,KAAK,SAEP,yBAAOoH,QAAQ,oBAAoBP,S,2BA7B3C,GAAsCpD,a,06CCgB/B,IAAM4D,EAAb,a,kOAAA,U,MAAA,mKACU,CACNC,eAAgBC,IAAoBC,SAFxC,uBAKiB,SAACpB,GACd,EAAK9C,SAAS,CAAEgE,eAAgBlB,EAAMxG,OAAOC,WANjD,4BASsB,SAAC4H,GACf,EAAK3F,MAAMwF,eAAeI,QAAUD,GACtCtF,QAAQwF,MAAM,oBAXpB,S,EAAA,G,EAAA,gCAeW,WAEP,OACE,uBAAK5B,MAAO,CAAE6B,WAAY,SACxB,gBAACC,EAAA,EAAD,CAAgBC,UAAU,GACxB,gBAACC,EAAA,EAAD,KACE,gBAAC5C,EAAA,EAAD,CAAMC,WAAS,EAAC4C,QAAS,IACvB,gBAAC7C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,GACpB,gBAACC,EAAA,EAAD,CAAQrI,MAAOqC,KAAKJ,MAAMwF,eAAgB/D,SAAUrB,KAAKiG,cAPrD,CAAC,SAAU,YAAa,gBAAiB,QAQlCC,KAAI,SAACC,GACZ,OACE,gBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAGxI,MAAOwI,GACtBA,QAMX,gBAAClD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,GACpB,gBAAC,EAAD,CAAkBvB,kBAAmBxE,KAAKwE,uBAIhD,gBAAC8B,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,KACE,gBAAC/C,EAAA,EAAD,CACEgD,KAAK,QACL/C,QAAS,WACP,EAAKlG,MAAMuF,YAHf,kB,2BAxCZ,GAAsCvB,a,o/BCRtC,IAiBakF,EAAe,SAAClJ,GAA6B,IAChDmJ,EAAmCnJ,EAAnCmJ,QAAS/I,EAA0BJ,EAA1BI,MAAOgJ,EAAmBpJ,EAAnBoJ,eADgC,IAE5BpF,YAAe,GAFa,GAEjDqF,EAFiD,KAEzCC,EAFyC,KAGlDC,EApBiB,SACvBnJ,EACA+I,GAMA,IAAK/I,EAAO,OAAO,KACnB,IAAMoJ,EAASL,EAAQM,MAAK,SAAC1H,GAAD,OAAOA,EAAE3B,QAAUA,KAC/C,IAAKoJ,EAEH,MADA9G,QAAQC,IAAIwG,GACN,IAAIO,MAAJ,UAAatJ,EAAb,gBAGR,OAAOoJ,EAKeG,CAAiBvJ,EAAO+I,GAC9C,OACE,2BACE,gBAAClD,EAAA,EAAD,CAAQC,QAAS,kBAAMoD,GAAU,IAAO7C,QAAQ,WAAWD,MAAM,WAC9D+C,EACC,gBAACK,EAAA,EAAD,CAAMtD,MAAO,CAAEuD,YAAa,QAAUN,EAAcO,aAClD,KACHP,EAAgBA,EAAcxD,MAAQ,qBAEzC,gBAACgE,EAAA,EAAD,CAAQC,KAAMX,EAAQY,WAAS,EAAC1E,QAAS,kBAAM+D,GAAU,KACvD,gBAACY,EAAA,EAAD,0BACA,gBAACC,EAAA,EAAD,KACE,gBAAC,IAAD,CACEf,eAAgB,SAACgB,GACfhB,EAAegB,GACfd,GAAU,IAEZtD,aAAcuD,EAAgBA,EAAcnJ,WAAQiK,EACpDC,YAAY,oBACZC,QAASpB,Q,29BCzBrB,IAAMqB,GAAc,CAClBC,YAAa,CAAElK,KAAM,OAAQmK,UAAU,GACvCC,SAAU,CAAEpK,KAAM,OAAQmK,UAAU,GACpCE,MAAO,CAAErK,KAAM,OAAQmK,UAAU,GACjCG,YAAa,CAAEtK,KAAM,SAAUmK,UAAU,GACzCI,eAAgB,CAAEvK,KAAM,SAAUmK,UAAU,GAC5CK,aAAc,CAAExK,KAAM,SAAUmK,UAAU,IAGtCM,GAAa,SAAChL,GAId,IACIiL,EAAqCjL,EAArCiL,UAAWC,EAA0BlL,EAA1BkL,YAAaC,EAAanL,EAAbmL,SAC1B9K,EAASmK,GAAYS,GACvB/C,GAAQ,EAOZ,OANI7H,EAAOqK,WAAaS,EAASF,IAEtB5K,EAAOqK,UAA4B,WAAhBrK,EAAOE,OAAsB4K,EAASF,MADlE/C,GAAQ,GAMR,gBAACpC,EAAA,EAAD,CACEvF,KAAMF,EAAOE,KACbmK,SAAUrK,EAAOqK,SACjBxC,MAAOA,EACPnC,MAAOkF,EACP7K,MAAO+K,EAASF,GAChBnH,SAAUoH,EAAYD,MAItBG,GAAc,CAClBX,YAAaY,cACbV,SAAU,GACVC,MAAO,GACPC,YAAa,KACbE,aAAc,IACdD,eAAgB,KAGLQ,GAAwD,SAACtL,GAAU,IA6BtEuL,EA5BAC,EAAkCxL,EAAlCwL,qBAAsBjG,EAAYvF,EAAZuF,QADgD,IAE9CvB,WAA2CoH,IAFG,GAEvEK,EAFuE,KAE7DC,EAF6D,SAGrC/G,yBAAe,IAHsB,GAGvEgH,EAHuE,KAGlDlG,EAHkD,KAGlDA,QAgBtByF,EAAc,SAACD,GACnB,IAAMW,EAAMH,EACZ,OAAO,SAAC9E,GACN,I,MAAMkF,EAAWnI,OAAOC,OAAO,GAAIiI,G,EAAlB,G,EACdX,E,EAAYtE,EAAMxG,OAAOC,M,iGAE5BsL,EAAYG,KAOVC,EAAcL,EACpB,OACE,uBAAKnF,MAAO,CAAE6B,WAAY,SACxB,gBAACC,EAAA,EAAD,CAAgBC,UAAU,GACxB,gBAACC,EAAA,EAAD,KACE,gBAAC5C,EAAA,EAAD,CAAMC,WAAS,EAAC4C,QAAS,IACvB,gBAAC7C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,GACpB,gBAAC,GAAD,CACE2C,SAAUW,EACVb,UAAU,cACVC,YAAaA,KAGjB,gBAACxF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,GACpB,gBAAC,GAAD,CAAYyC,UAAU,WAAWE,SAAUW,EAAaZ,YAAaA,KAEvE,gBAACxF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,GACpB,gBAAC,GAAD,CACEyC,UAAU,eACVE,SAAUW,EACVZ,YAAaA,KAGjB,gBAACxF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,GACpB,gBAAC,EAAD,CACEpI,MAAO0L,EAAYjB,aAAe,GAClCzB,eAAgB,SAACI,GACf,IAAMqC,EAAWnI,OAAOC,OAAO,GAAI8H,EAAU,CAC3CZ,YAAarB,EAAOpJ,QAEtBsL,EAAYG,IAEd1C,QAASqC,EAAqB7C,KAAI,SAACoD,GACjC,MAAO,CACL3L,MAAO2L,EAAIzE,GACXvB,MAAOgG,EAAIC,YACXlC,YAAaiC,EAAIjC,aAAe,UAKxC,gBAACpE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,GACpB,gBAAC,GAAD,CAAYyC,UAAU,QAAQE,SAAUW,EAAaZ,YAAaA,KAEpE,gBAACxF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,GACpB,gBAAC,GAAD,CACEyC,UAAU,iBACVE,SAAUW,EACVZ,YAAaA,OAKrB,gBAACnC,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,KACE,gBAAC/C,EAAA,EAAD,CACEgD,KAAK,QACL/C,QAAS,WACPwF,EAAYN,IACZ7F,MAJJ,UASA,gBAACU,EAAA,EAAD,CAAQgD,KAAK,QAAQzC,MAAM,UAAUN,QA3FhB,WAC3ByF,EAAkB,CAChBxF,UAAW,CACT8F,MAAO,CACLC,WAAYT,EAAShB,YACrB0B,YAAaV,EAASV,aACtBqB,aAAcX,EAASd,SACvB0B,cAAeZ,EAASX,gBAAkB,IAC1CwB,WAAYb,EAASZ,YACrBD,MAAOa,EAASb,WAkFoD2B,UAnEpEhB,EAAIE,GACH,CAACF,EAAEd,YAAac,EAAEZ,UAAWY,EAAER,cAAcyB,MAAMC,WAmEjDhH,EAAU,aAAH,Y,ynDCxJdiH,G,uaACI,CAAEC,SAAU,O,qBAERC,aACV,SAACC,GAAD,OACE,EAAK7M,MAAMkD,OAAO4J,iBAAiB,CAAEC,YAAaF,GAAY,WAAW,SAAC/H,GAAD,OACvEkI,aAAYxN,KAAYyN,gBAAiB,CACvCF,YAAaF,SAGnB,M,oBAGQ,SAAClG,GACT,EAAK9C,SAAS,CAAE8I,SAAUhG,EAAMuG,mB,wBAEpB,SAACvG,GACb,EAAK9C,SAAS,CAAE8I,SAAU,U,qBAEjB,SAAChG,GACV,EAAKwG,UAAUxG,EAAMxG,OAAOC,U,gDAErB,WACDgN,EACJ,gBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,gBAACC,GAAA,EAAD,OAGJ,OACE,2BACE,gBAACzH,EAAA,EAAD,CACEhC,SAAUrB,KAAK+K,SACfC,WAAY,CACVC,eAAgB,gBAACL,GAAA,EAAD,CAAgBC,SAAS,SAASF,MAGtD,gBAACO,GAAA,EAAD,CACE3D,OAAQvH,KAAKJ,MAAMsK,SACnBA,SAAUlK,KAAKJ,MAAMsK,SACrBpH,QAAS9C,KAAKmL,YACdC,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UAGbvL,KAAKzC,MAAMkO,YAAYvF,KAAI,SAACwF,EAAKC,GAAN,OAC1B,gBAACvF,EAAA,EAAD,CACEC,IAAKsF,EACLlI,QAAS,WACP,EAAKlG,MAAMkD,OAAO4J,iBAAiB,GAAI,aAGxCqB,EAAIpI,iB,gCAzDc/B,aA2EpBqK,GAAYnK,cATD,SAAC7B,EAAOiM,GAC9B,MAAO,CAAEJ,YAAa,OAGG,SAAC/J,GAC1B,MAAO,CACLjB,OAAQkB,8BAAmBC,KAAgBF,MAGtBD,CAGvBwI,ICzEW6B,GAAwB,SAACvO,GAiBpC,OACE,gBAACwO,GAAA,EAAD,CAAQlB,SAAS,SAAS9G,MAAM,WAC9B,gBAACiI,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAASlO,MAAM,YACb,gBAACmO,GAAA,EAAD,CAAYzI,QARG,WACrBlG,EAAM4O,mBAQE,gBAACC,GAAA,EAAD,QAGH7O,EAAM8O,QACL,gBAACC,GAAA,EAAD,CAAYtI,QAAQ,QAAQqC,IAAI,WAAhC,oBAAwD9I,EAAM8O,UAC5D,KACJ,uBAAKxI,MAAO,CAAE0I,KAAM,KACpB,gBAACX,GAAD,MACA,gBAAC,IAAD,CAAUjB,KAAM,gBAAC6B,GAAA,EAAD,OACd,gBAACpG,EAAA,EAAD,CAAUC,IAAI,uBAAuB5C,QA9Bd,WAC7BlG,EAAMkP,SAAS,iBA8BP,gBAACC,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,OAEF,gBAACC,GAAA,EAAD,qBAEF,gBAACxG,EAAA,EAAD,CAAUC,IAAI,qBAAqB5C,QAhCd,WAC3BlG,EAAMkP,SAAS,eAgCP,gBAACC,GAAA,EAAD,KACE,gBAACG,GAAA,EAAD,OAEF,gBAACD,GAAA,EAAD,mBAEF,gBAACxG,EAAA,EAAD,CAAUC,IAAI,gBAAgB5C,QAlCX,WACzBlG,EAAMkP,SAAS,UAkCP,gBAACC,GAAA,EAAD,KACE,gBAACI,GAAA,EAAD,CAAO/I,MAAM,aAEf,gBAAC6I,GAAA,EAAD,sBAGJ,gBAACV,GAAA,EAAD,CACEzI,QAAS,WACPsJ,eAAeC,WAAW,aAC1BC,OAAOC,SAASC,KAAO,MAGzB,gBAAChG,EAAA,EAAD,CAAMiG,UAAU,kBAAhB,mB,gFCpEGC,GAAwC,SAAC9P,GAAU,IACtD+P,EAAyB/P,EAAzB+P,WAAYC,EAAahQ,EAAbgQ,SACdC,EAAQF,EAAWE,MAAQ,SAAW,GAC5C,OACE,uBAAK3J,MAAO,CAAEE,MAAO,mBAAoB0J,WAAY,SAArD,UACMD,GADN,OACcF,EAAWI,aADzB,KAEE,gBAACzK,EAAA,EAAD,CAAMC,WAAS,GACb,gBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI2C,GAAI,GACrB,gBAACmG,GAAA,EAAD,CAAYzI,QAAS,kBAAM8J,MACzB,gBAACI,GAAA,EAAD,CAAO5J,MAAM,cAGjB,gBAACd,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI2C,GAAI,GACrB,gBAACmG,GAAA,EAAD,CACEzI,QAAS,cAIT,gBAACmK,GAAA,EAAD,CAAO7J,MAAM,mB,q9BCPlB,IAAM8J,GAA6C,SAACtQ,GAAU,IAC3DwL,EAAsCxL,EAAtCwL,qBAAsBM,EAAgB9L,EAAhB8L,YADqC,KAE1ByE,aAGvCC,UALiE,GAE5DC,EAF4D,KAEvChL,EAFuC,KAEvCA,QAI5B,OAAK+F,EAAqBvD,OACtBxC,EAAgB,0CAGlB,gBAAC,EAAD,CACErF,MAAO0L,EAAYQ,YAAc,KACjClD,eAAgB,SAACI,GACfiH,EAAkB,CAChBtK,UAAW,CAAEmB,GAAIwE,EAAYxE,GAAIgF,WAAY9C,EAAOpJ,UAGxD+I,QAASqC,EAAqB7C,KAAI,SAACoD,GACjC,MAAO,CACL3L,MAAO2L,EAAIzE,GACXvB,MAAOgG,EAAIC,YACXlC,YAAaiC,EAAIjC,aAAe,SAfC,6BCd9B4G,GAAmE,SAAC,GAO3E,IANJC,EAMI,EANJA,WACAC,EAKI,EALJA,OACAC,EAII,EAJJA,SACAtQ,EAGI,EAHJA,KACAH,EAEI,EAFJA,MACAqF,EACI,EADJA,QAEM0H,EAAYnJ,cAAkB4I,YAAWiE,EAAU,KAAO,IAEhE,OACE,gBAAC/K,EAAA,EAAD,CACEoC,QAASzC,EACTkL,WAAYlL,EAAU,aAAekL,EACrCpQ,KAAMA,EACNuD,SAAU,SAAC6C,GACTiK,EAAOjK,EAAMxG,OAAOC,OACpB+M,EAAUxG,EAAMxG,OAAOC,QAEzBA,MAAOA,K,+zCC7BN,IAAM0Q,GAAb,a,mOAAA,U,MAAA,sE,EAAA,G,EAAA,gCAEI,OACE,gBAAClH,EAAA,EAAD,CAAMtD,MAAO,CAAEE,MAAO,OAAQuK,MAAO,QAAUlB,UAAU,kBAAzD,gB,6BAHN,GAA+B7L,a,8xCC2CxB,IAAMgN,GAAoB,SAAChR,GAK5B,IACI8L,EAAoC9L,EAApC8L,YAAamF,EAAuBjR,EAAvBiR,SAAUjB,EAAahQ,EAAbgQ,SACzBD,EAAajE,EAAYiE,WACzBmB,EAAalR,EAAMmR,UAAYrF,EAAYsF,SAAW,GAAK,EACjE,OAAKtF,EAAYQ,YAAcyD,EAE3B,gBAAC,GAAD,CACEA,WAAYA,EACZC,SAAU,kBACRA,EAAS,CACP1I,GAAIwE,EAAYxE,GAChBuD,YAAakF,EAAWzD,WACxBxB,eAAgBiF,EAAWE,OACrBiB,EAAaG,WAAWvF,EAAYK,aAAgB,GAAGmF,WACzD,SAOZ,gBAAC5L,EAAA,EAAD,CAAMC,WAAS,EAAC4C,QAAS,IACvB,gBAAC7C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,gBAAC+D,EAAA,EAAD,CAAMiG,UAAU,kBAAkBoB,EAAWA,EAASnH,YAAc,OAEtE,gBAACpE,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACVoL,EAAW,gBAAClC,GAAA,EAAD,CAAYvI,MAAM,iBAAiByK,EAASjF,aAA4B,QAM/EuF,GAA0B,SAACvR,GAAgC,IAC9DmR,EAA4EnR,EAA5EmR,QAAS3F,EAAmExL,EAAnEwL,qBAAsBM,EAA6C9L,EAA7C8L,YAAazD,EAAgCrI,EAAhCqI,SAAUmJ,EAAsBxR,EAAtBwR,kBADQ,KAE5BxN,WAAe8H,EAAYO,eAFC,GAE/DA,EAF+D,KAEhDoF,EAFgD,UAG5CzN,WAAe8H,EAAYlB,OAHiB,GAG/DA,EAH+D,KAGxD8G,EAHwD,KAItEhP,QAAQC,IAAI,cAJ0D,SAM7B4N,aAGvCC,UAToE,GAM/DC,EAN+D,KAM1ChL,EAN0C,KAM1CA,QAIrBkM,EAV+D,GAUzCpB,aAC3BqB,SACA,CACEhN,OADF,SACSC,EADT,GAC0B,MAARC,EAAQ,EAARA,KACd,GAAIA,SAAJ,UAAIA,EAAM6M,0BAAV,aAAI,EAA0B3M,KAAM,CAClC,IAAMC,EAASJ,EAAMK,UAA2B,CAAEC,MAAOC,UACnDyM,EAAU,GAAI5M,EAAQK,cAC5BsH,UAASiF,GAAS,SAACtG,GAAD,OAAOA,EAAEjE,KAAOwE,EAAYxE,MAC9CzC,EAAMQ,WAAW,CACfF,MAAOC,QACPN,KAAMpB,OAAOC,OAAO,GAAIsB,EAAQ,CAAEK,aAAcuM,UApBY,MA4CtE,OACE,2BACE,gBAACzJ,EAAA,EAAD,CACEmE,UAAWT,EAAYgG,SACvBzJ,SAAUA,EACVvE,SAAU0N,GAEV,gBAAClJ,EAAA,EAAD,KACE,gBAAC5C,EAAA,EAAD,CAAMC,WAAS,EAAC4C,QAAS,IACvB,gBAAC7C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,GACpB,gBAACuG,GAAA,EAAD,KAAagD,YAAWjG,EAAYI,aACnC7D,EAAW,KACV,gBAAC,GAAD,CACE8I,QAASA,EACTrF,YAAaA,EACbmF,SAlBTnF,EAAYQ,YACVd,EAAqB/B,MAAK,SAACb,GAAD,OAAOA,EAAEtB,KAAOwE,EAAYQ,eADzB,KAmBtB0D,SAjCS,SAACgC,GAKxBvB,EAAkB,CAChBtK,UAAW,CACTmB,GAAIwE,EAAYxE,GAChBgF,WAAY0F,EAAOnH,YACnBwB,cAAe2F,EAAOlH,sBA4BlB,gBAACpF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,GACnBsD,EAAYmG,cACX,gBAACvD,GAAA,EAAD,CACElO,MACE,gBAAC,KAAD,CAAU0R,iBAAkB,kBAAM,GAAMpN,KAAMgH,EAAYmG,iBAGlB,qBAAzCnG,EAAYmG,cAAcE,WACzB,gBAACvI,EAAA,EAAD,CAAMtD,MAAO,CAAEE,MAAO,OAAQuK,MAAO,QAAUlB,UAAU,kBAAzD,SAIA,gBAAC,GAAD,OAGF,KACJ,gBAACd,GAAA,EAAD,CAAYtI,QAAQ,SAASqF,EAAYM,cACzC,2BACE,gBAAC2C,GAAA,EAAD,CAAYvI,MAAM,iBAAiBsF,EAAYsG,aAC/C,gBAACrD,GAAA,EAAD,CAAYvI,MAAM,iBAAiBsF,EAAYuG,eAC/C,gBAACtD,GAAA,EAAD,CAAYvI,MAAM,iBAAiBsF,EAAYlB,SAGnD,gBAAClF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,EAAGlC,MAAO,CAAEgM,YAAa,SAC7C,gBAACvD,GAAA,EAAD,gBAAiBjD,EAAYK,eAC3BL,EAAYO,gBAAkBhE,EAC9B,gBAAC0G,GAAA,EAAD,CACEzI,MAAO,CACLE,OAAQsF,EAAYO,cAAgB,EAAI,QAAU,QAFtD,WAKOP,EAAYO,gBAEjB,QAIV,gBAACkG,GAAA,EAAD,KACE,gBAAC7M,EAAA,EAAD,CAAMC,WAAS,EAAC4C,QAAS,IACvB,gBAAC7C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,GACpB,gBAAC,GAAD,CACE/C,QAASA,EACTkL,WAAY,QACZvQ,MAAOwK,EACPgG,OAAQ,SAAC/D,GACP6E,EAAS7E,IAEXgE,SAAU,SAAChE,GAAD,OACR4D,EAAkB,CAChBtK,UAAW,CAAEmB,GAAIwE,EAAYxE,GAAIsD,MAAOiC,SAKhD,gBAACnH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,GACpB,gBAAC,GAAD,CACEsD,YAAaA,EACbN,qBAAsBA,KAG1B,gBAAC9F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,GACpB,gBAAC,GAAD,CACEjI,KAAK,SACLkF,QAASA,EACTkL,WAAW,iBACXvQ,MAAOiM,EACPuE,OAAQa,EACRZ,SAAU,SAAChE,GACT4D,EAAkB,CAChBtK,UAAW,CAAEmB,GAAIwE,EAAYxE,GAAI+E,cAAeQ,SAKxD,gBAACnH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG2C,GAAI,EAAGlC,MAAO,CAAEkM,UAAW,UAC3C,gBAACC,GAAA,EAAD,CACExJ,KAAK,SACLzC,MAAM,YACNkM,aAAW,SACXxM,QAAS,kBACPyL,EAAmB,CACjBxL,UAAW,CACTmB,GAAIwE,EAAYxE,QAKtB,gBAACqL,GAAA,EAAD,aASVC,GAAW,SAACC,EAA4BC,GAC5C,SACElG,WAAUiG,EAAK/G,YAAagH,EAAKhH,cACjC+G,EAAKxK,WAAayK,EAAKzK,UACvBwK,EAAKrH,qBAAqBvD,SAAW6K,EAAKtH,qBAAqBvD,SAM7D8K,GAAiB/O,OAAWuN,GAAyBqB,IAO9CI,GAGR,SAAChT,GAAU,SACkBgE,WAA8B,MADhD,GACPqE,EADO,KACG4K,EADH,KAKd,OACE,gCACGjT,EAAMsF,aAAaqD,KAAI,SAAC4C,GACvB,OACE,gBAACwH,GAAD,CACE5B,QAAS,EACT3F,qBAAsBxL,EAAMkT,WAC5B7K,SAAUA,IAAakD,EAAEjE,GACzBwB,IAAKyC,EAAEjE,GACPwE,YAAaP,EACbiG,mBAbY2B,EAaoB5H,EAAEjE,GAbF,SAACX,EAA8ByM,GACvEH,EAAYE,OADO,IAACA,O,+gCChPjB,IAAME,GAAW,SAACrT,GAKvB,IAAMsT,EAAWtP,aAAiBuP,MAE1B5M,EAAU3G,EAAV2G,MACF4F,EAAW+G,EAASE,WAAT,UAAyB7M,EAAM8M,UAA/B,YAA4C9M,EAAMW,IACnE,GAAIX,EAAM8M,YAAcC,KAAUC,WAChC,OACE,gBAAC,GAAD,CACEC,cAAe5T,EAAM4T,cACrBC,UAAW7T,EAAM6T,UACjBtH,SAAUA,EACVuH,WAAYnN,IAIlB,IAAMoN,ECnBoB,SAACpN,GAC3B,GAAIA,EAAM8M,YAAcC,KAAUC,WAChC,MAAO,OAET,GAAIhN,EAAM8M,YAAcC,KAAUM,aAEhC,MAAO,CAAEC,MAAO,UAAWC,KAAM,SADZvN,EACmCwN,QAE1D,GAAIxN,EAAM8M,YAAcC,KAAUU,iBAEhC,MAAO,eAET,MAAM,IAAI1K,MAAM,gBDOE2K,CAAa1N,GAOzB2N,ECX0B,SAAC3N,GACjC,OAAIA,EAAM8M,YAAcC,KAAUC,WACzB,WAEF,KDOiBY,CAAmB5N,GAC3C,OACE,gBAAC6N,GAAA,EAAD,CAAUC,SAAUlI,EAAUA,SAAUA,EAAUnF,QAAM,EAAClB,QAR1C,SAACjG,GAChBD,EAAM4T,cAAN,UAAuBjN,EAAM8M,UAA7B,YAA0C9M,EAAMW,KAChD0F,aAAYxN,KAAYyN,gBAAiB,CACvCuG,SAAU,GAAF,OAAK7M,EAAM8M,UAAX,YAAwB9M,EAAMW,QAMtC,gBAAC6H,GAAA,EAAD,KACE,gBAACT,GAAA,EAAD,CAASlO,MAAOmG,EAAM8M,WAAa,IACjC,gBAAC7J,EAAA,EAAD,CAAMpD,MAAM,WAAWuN,KAG3B,gBAAC1E,GAAA,EAAD,KACE,gBAACN,GAAA,EAAD,eAAgB,IAAIlM,KAAK8D,EAAM+N,WAAWC,uBAC1C,gBAAC5F,GAAA,EAAD,CAAYvI,MAAM,iBC1DS,SAACvG,GAClC,GAAIA,EAAEwT,YAAcC,KAAUC,WAAY,CACxC,IAAMG,EAAa7T,EACnB,OAAO6T,EAAWc,SAAX,mBACSd,EAAWe,cADpB,uBACgD,IAAIhS,KACrDiR,EAAWc,UACXD,sBACF,aAEN,GAAI1U,EAAEwT,YAAcC,KAAUM,aAAc,CAC1C,IAAMc,EAAe7U,EACrB,gBAAU6U,EAAaX,OAAvB,aAAkCW,EAAa1O,UAAU7B,MACvD,EACA,IAFF,eAGQuQ,EAAazO,QAAQ9B,MAAM,EAAG,KAExC,GAAItE,EAAEwT,YAAcC,KAAUU,iBAAkB,CAC9C,IAAMW,EAAS9U,EACf,gBAAU8U,EAAOC,OAAjB,aAA4BD,EAAOE,UAAnC,eAAmDF,EAAOG,UAE5D,MAAM,IAAIxL,MAAM,gBDsCyByL,CAAoBxO,KAExD2N,EACC,gBAACc,GAAA,EAAD,KACE,gBAACnP,EAAA,EAAD,KACE,gBAAC2D,EAAA,EAAD,KAAO0K,KAGT,OAKGe,GAKR,SAAC,GAAuD,IAArDzB,EAAqD,EAArDA,cAA0BE,GAA2B,EAAtCD,UAAsC,EAA3BC,YAAYvH,EAAe,EAAfA,SAAe,KACrBgE,aACpC+E,UAFyD,GACpDC,EADoD,KAClC9P,EADkC,KAClCA,QASnBuG,EAAc8H,EAAWc,SAAX,mBACJd,EAAWe,cADP,uBACmC,IAAIhS,KACrDiR,EAAWc,UACXD,sBACF,aAEJ,OAAIlP,EACK,0CAGP,gBAAC+O,GAAA,EAAD,CAAUC,SAAUlI,EAAUA,SAAUA,EAAUnF,QAAM,EAAClB,QAhB1C,SAACjG,GAChB2T,EAAc,GAAD,OAAIE,EAAWL,UAAf,YAA4BK,EAAWxM,KACpD0F,aAAYxN,KAAYyN,gBAAiB,CACvCuG,SAAU,GAAF,OAAKM,EAAWL,UAAhB,YAA6BK,EAAWxM,QAchD,gBAAC6H,GAAA,EAAD,KACE,gBAACT,GAAA,EAAD,CAASlO,MAAOsT,EAAWL,WAAa,IACrCK,EAAWc,SACV,gBAAChL,EAAA,EAAD,CAAMpD,MAAM,WAAZ,QAEA,gBAACoD,EAAA,EAAD,CAAMtD,MAAO,CAAEE,MAAO,UAAtB,eAIN,gBAAC6I,GAAA,EAAD,KACE,gBAACN,GAAA,EAAD,eAAgB,IAAIlM,KAAKiR,EAAWY,WAAWC,uBAC/C,gBAAC5F,GAAA,EAAD,CAAYvI,MAAM,iBAAiBwF,IAErC,gBAACoJ,GAAA,EAAD,KACE,gBAACI,GAAA,EAAD,CACEhP,MAAM,YACNC,QAAQ,YACRwC,KAAK,QACLyJ,aAAW,+BAEVoB,EAAWc,SAAW,KACrB,gBAAC3O,EAAA,EAAD,CACEgD,KAAK,QACLzC,MAAM,YACNN,QAAS,kBACPqP,EAAe,CACbpP,UAAW,CACTmB,GAAIwM,EAAWxM,QAKrB,gBAACsC,EAAA,EAAD,kBAGJ,gBAAC3D,EAAA,EAAD,CACEgD,KAAK,QACLzC,MAAM,YACN+F,UAAWiD,eAAeiG,QAAQ,aAClCvP,QAAS,WACPwJ,OAAO1F,KAAP,UACK0L,KADL,gCACqC5B,EAAWxM,GADhD,kBAC4DkI,eAAeiG,QACvE,cAEF,YAIJ,gBAAC7L,EAAA,EAAD,4B,UE5IC+L,GAA2B,SAAC3V,GAAU,MAChB2E,4BAAzBc,EADyC,EACzCA,QAASyC,EADgC,EAChCA,MAAOpD,EADyB,EACzBA,KACxB,GAAIW,EAAS,OAAO,gBAACmQ,EAAA,EAAD,MACpB,GAAI1N,EAAO,OAAO,qCAClB,IAAKpD,EAAM,MAAM,IAAI4E,MAAM,OAC3B,OACE,2BACE,gBAACmM,GAAA,EAAD,KACG/Q,EAAKgR,UAAUtU,OAAOmH,KAAI,SAAC1I,EAAGmO,GAC7B,OAAOnO,EACL,gBAAC,GAAD,CAAU2T,cAAe5T,EAAM4T,cAAeC,UAAW,GAAIlN,MAAO1G,EAAG6I,IAAKsF,IAC1E,W,8xCCNd,IAEanB,GAAkB,SAACjN,GAC9B0C,QAAQC,IAAI,6BADgC,SAEJqB,YAAe,GAFX,GAErC+R,EAFqC,KAEvBC,EAFuB,UAGZhS,WAAgC,MAHpB,GAGrCiS,EAHqC,KAG3BC,EAH2B,OAKSvR,yBAAe,CAClEwB,UAAW,CACTgQ,QAAS,CACPC,OAAQ,EACRC,MAXM,OAOJ5Q,EALoC,EAKpCA,QAASyC,EAL2B,EAK3BA,MAAOpD,EALoB,EAKpBA,KAAMwR,EALc,EAKdA,UAAWC,EALG,EAKHA,QAQzC,GAAIrO,EACF,OAAO,wCAGT,GAAIzC,IAAYX,EAAM,OAAO,gBAAC8Q,EAAA,EAAD,MAgB7B,OACE,uBAAKtP,MAAO,CAAEkQ,SAAU,SACtB,gBAAC,GAAD,CACE5H,eAAgB,kBAAMoH,GAAgB,IACtC9G,SAPW,SAAC+G,GAChBC,EAAYD,IAORnH,QAAShK,EAAKgK,UAEhB,uBACExI,MAAO,CACLmQ,OAAQ/G,OAAOgH,YAAc,GAC7B3V,SAAU,WAGZ,gBAAC2E,EAAA,EAAD,CAAMC,WAAS,GACZoQ,EACC,gBAACrQ,EAAA,EAAD,CAAME,MAAI,EAAC4C,GAAI,GACb,gBAAC,GAAD,CACEoL,cAAe,SAACT,GAAD,OACboD,EAAQ,CACNJ,QAAS,CAAEC,OAAQ,EAAGC,MAtD5B,GAsDmClD,iBAKnC,KACJ,gBAACzN,EAAA,EAAD,CAAME,MAAI,EAAC4C,GAAIuN,EAAe,EAAI,IAChC,uBAAKzP,MAAO,CAAEqQ,aAAc,SACZ,gBAAbV,EACC,gBAAC,GAAD,CACEzK,qBAAsB1G,EAAKoO,WAC3B3N,QAAS,kBAAM2Q,EAAY,SAE3B,KACU,cAAbD,EACC,gBAAC,EAAD,CAAkB1Q,QAAS,kBAAM2Q,EAAY,SAC3C,KACU,SAAbD,EAAsB,gBAAC,EAAD,CAAY1Q,QAAS,kBAAM2Q,EAAY,SAAY,MAE3EzQ,EACC,wDAEA,gBAAC,GAAD,CAAiByN,WAAYpO,EAAKoO,WAAY5N,aAAcR,EAAKQ,eAEnE,gBAACW,EAAA,EAAD,CAAQgE,WAAS,EAAChB,KAAK,QAAQzC,MAAM,YAAYN,QA1D9B,WAC3BoQ,EAAU,CACRnQ,UAAW,CAAEgQ,QAAS,CAAEC,OAAQtR,EAAKQ,aAAa2C,OAAQoO,MAtBlD,KAuBRO,YAAa,SAACC,EAAD,GAA+B,IAAtBC,EAAsB,EAAtBA,gBACpB,OAAKA,EACEpT,OAAOC,OAAO,GAAIkT,EAAM,CAC7BvR,aAAc,GAAF,UAAMuR,EAAKvR,cAAX,GAA4BwR,EAAgBxR,iBAF7BuR,OAsDzB,IACI/R,EAAKQ,aAAa2C,OADtB,kC,6NC9EN8O,EAAW,CACf,eACA,eACA,OACA,iBACA,iBACA,QACA,OACA,iBACA,YACA,iBACA,oBACA,sBACA,iBACA,gBACA,aACA,aACA,QACA,iBACA,iBACA,eACA,QACA,OACA,aACA,SACA,SACA,2BACA,sBACA,kBACA,SACA,WACA,QAEWC,EAAoC,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,aAAcnT,EAAe,EAAfA,SAChE,OACE,gBAAC2E,EAAA,EAAD,CAAQ3E,SAAUA,EAAU1D,MAAO6W,GAChCF,EAASpO,KAAI,SAACuO,GAAD,OACZ,gBAACrO,EAAA,EAAD,CAAUC,IAAKoO,EAAQ9W,MAAO8W,GAC5B,gBAAC/H,EAAA,EAAD,KACE,gBAACvF,EAAA,EAAD,CAAMpD,MAAM,WAAW0Q,IAEzB,gBAACnI,EAAA,EAAD,CAAYzI,MAAO,CAAEyK,MAAO,UAAYmG,S,u8BC3BlD,IAAMC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,MAAO,OACPhB,SAAU,IACViB,gBAAiBJ,EAAMK,QAAQC,WAAWC,YAKnCC,EAA6B,SAA7BA,EAA8B7X,GAAU,IAC3CuX,EAA8CvX,EAA9CuX,KAD2C,EACGvX,EAAxC8X,aADqC,MAC7B,EAD6B,EAC1BC,EAA6B/X,EAA7B+X,aAAcC,EAAehY,EAAfgY,WACjCC,EAAUd,IAFmC,IAI3BnT,YAAe,GAJY,GAI5CgG,EAJ4C,KAItCkO,EAJsC,KASnD,OACE,gBAACrC,EAAA,EAAD,CAAMxO,UAAU,MAAMwI,UAAWoI,EAAQV,MACvC,gBAAC/C,EAAA,EAAD,CAAUpN,QAAM,EAAClB,QALD,WAClBgS,GAASlO,IAIgC1D,MAAO,CAAEgM,YAAa,GAAF,OAAK,GAAKwF,EAAV,QACzD,gBAAC3I,EAAA,EAAD,KACE,gBAACvF,EAAA,EAAD,CAAMpD,MAAM,aAAa+Q,EAAKzN,cAEhC,gBAACuF,EAAA,EAAD,CAAc8I,QAASZ,EAAKa,OAC3BpO,EAAO,gBAACqO,EAAA,EAAD,MAAiB,gBAACC,EAAA,EAAD,OAE3B,gBAACC,EAAA,EAAD,CAAUC,GAAIxO,EAAMyO,QAAQ,OAAOC,eAAa,GAC9C,gBAAC7C,EAAA,EAAD,CAAMxO,UAAU,MAAMsR,gBAAc,GACjCpB,EAAKqB,SAASjQ,KAAI,SAACkQ,GAAD,OACjBA,EAAMD,SAAS3Q,OACb,gBAAC4P,EAAD,CACEE,aAAcA,EACdC,WAAYA,EACZlP,IAAK+P,EAAMvR,GACXiQ,KAAMsB,EACNf,MAAOA,EAAQ,IAGjB,gBAAC,EAAD,CACEC,aAAcA,EACdC,WAAYA,EACZlP,IAAK+P,EAAMvR,GACXiQ,KAAMsB,EACNf,MAAOA,EAAQ,WAUzBgB,EAKD,SAAC,GAA8C,IAA5CvB,EAA4C,EAA5CA,KAAMO,EAAsC,EAAtCA,MAAOE,EAA+B,EAA/BA,WAAYD,EAAmB,EAAnBA,aAAmB,IAClB/T,YAAe,GADG,GAC3C8N,EAD2C,KACjCiH,EADiC,SAEZ/U,YAAe,GAFH,GAE3CgV,EAF2C,KAE9BC,EAF8B,SAGlBjV,WAAeuT,EAAKa,MAHF,GAG3Cc,EAH2C,KAGjCC,EAHiC,SAItBnV,WAAeuT,EAAKzN,aAJE,GAI3CoN,EAJ2C,KAInCkC,EAJmC,KAKlD,OACE,gCACE,gBAAC5E,EAAA,EAAD,CACE1L,IAAKyO,EAAKjQ,GACV+R,OAAK,EACLjS,QAAM,EACNkS,UAAMjP,EACN/D,MAAO,CAAEgM,YAAa,GAAF,OAAK,IAAMwF,EAAQ,GAAnB,QAEnBhG,EACC,gBAAChM,EAAA,EAAD,CACEyT,WAAW,EACXnZ,MAAO8Y,EACPpV,SAAU,SAAC6C,GAAD,OAAWwS,EAAYxS,EAAMxG,OAAOC,QAC9CoZ,OAAQ,WACNT,GAAY,GACZf,EAAWT,EAAKjQ,GAAI4R,MAIxB,gCACGF,EACC,gBAAC,EAAD,CACElV,SAAU,SAAC7D,EAAG4Y,GACZd,EAAaR,EAAKjQ,GAAIrH,EAAEE,OAAOC,OAC/BgZ,EAAUnZ,EAAEE,OAAOC,OACnB6Y,GAAe,IAEjBhC,aAAcC,IAGhB,gBAAC7H,EAAA,EAAD,CAAcnJ,QAAS,kBAAM6S,GAAY,IAAOZ,QAASe,IAE3D,gBAAC9D,EAAA,EAAD,KACE,gBAACzG,EAAA,EAAD,CAAYzI,QAAS,kBAAM+S,GAAe,IAAOQ,KAAK,OACpD,gBAAC7P,EAAA,EAAD,CAAMpD,MAAM,WAAW0Q,S,+8BC1HhC,IAAMwC,EAA6B,SAAC1Z,GACzC,IAAMkD,EAASc,aAAiB2V,KADmB,IAE3B3V,WAAiC,MAFN,GAE5C4V,EAF4C,KAEtCC,EAFsC,KAUnD,OAPA7V,aAAgB,WACT4V,GACH1W,EAAO4W,iBAAiB,GAAI,WAAW,SAAChV,GACtC+U,EAAQ/U,EAAK8U,YAIdA,EAIH,gBAAC,EAAD,CACE5B,WAAY,SAAC1Q,EAAY8Q,GAAb,OAA8BlV,EAAO6W,eAAe,CAAEzS,KAAI8Q,QAAQ,eAC9EL,aAAc,SAACzQ,EAAY4P,GAAb,OACZhU,EAAO6W,eAAe,CAAEzS,KAAIwC,YAAaoN,GAAU,eAErDK,KAAMqC,IARD,8B,gCChBX,kHAGaI,EAAUC,cACVjN,EAAc,SACzBkN,EACA5G,GAEG,IADHjR,EACG,uDADgB,KAEb8X,EACJ7G,GAAYA,GAAY5P,OAAO0W,KAAK9G,GAAUrL,OAC1C,aAAeoS,KAAKC,UAAUhH,GAC9B,GACN,OAAO0G,EAAQO,KAAK,CAClBL,WACAM,OAAQL,EACR9X,WAISoY,EAAc,WACzB,IAAMC,EAAOV,EAAQrK,SAASuK,SAC9B,OAAOQ,EAAKC,SAAS,KAAOD,EAAKnW,MAAM,EAAGmW,EAAKzS,OAAS,IAAM,IAAMyS,I,ypDCEtE,IAUaE,EAAO1W,aAA0B,SAAC7B,EAAOiM,GACpD,MAAO,CACLuM,kBAAmBrL,eAAeiG,QAAQ,aAC1CnC,SAAUwH,cACVzY,WAED,KANiB6B,EAVkB,SAAClE,GACrC,OACE,uBAAKsG,MAAO,CAAEkQ,SAAU,OAAQxH,KAAM,IACpC,gBAAC,IAAgB+L,SAAjB,CAA0B3a,MAAOJ,EAAMsT,UACrC,gBAAC0H,EAAD,CAAMH,gBAAiB7a,EAAM6a,uBAc/BI,EAAqB,WACzB,IAAMC,EAAc,CAClBjO,oBACAhJ,qBACAyV,kBAEF,OACE,gBAAC,IAAD,KACGhW,OAAO0W,KAAKc,GAAavS,KAAI,SAACC,EAAGwF,GAChC,OACE,gBAAC,IAAD,CAAUtF,IAAKsF,EAAOhH,QAAM,EAAClB,QAAS,kBAAM8G,YAAYpE,KACtD,gBAAC,IAAD,CAAcuP,QAASvP,UAQ7BoS,E,0WAEF,GAAIP,gBAAkBjb,IAAY2b,UAChC,OAAO,gBAAC,IAAD,MAET,IAAK1Y,KAAKzC,MAAM6a,gBAGd,OAFAnY,QAAQ0Y,KAAK,wBACbpO,YAAYxN,IAAY2b,WACjB,4BAET,GAAsB,6BAAlBV,eAAgDA,gBAAkBjb,IAAYob,KAChF,OAAO,gBAACK,EAAD,MAET,GAAIR,gBAAkBjb,IAAYyN,gBAChC,OAAO,gBAAC,IAAD,MAET,GAAIwN,gBAAkBjb,IAAYyE,iBAChC,OAAO,gBAAC,IAAD,MAET,GAAIwW,gBAAkBjb,IAAYka,aAChC,OAAO,gBAAC,IAAD,MAGT,MAAM,IAAIhQ,MAAJ,yBAA4B+Q,qB,8BAvBnBzW,aA0BNqX,EAAMC,cAAIC,EAAJD,EAAY,kBAC7B,gBAAC,IAAD,CAAgBE,OAAQA,KACtB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAOd,KAAK,IAAIrT,UAAWuT,W,qlCClF1B,IAAMO,EAAY,SAACnb,GAAU,QACFgE,WAAe,IADb,GAC3ByX,EAD2B,KACjBC,EADiB,SAEF1X,WAAe,IAFb,GAE3B2X,EAF2B,KAEjBC,EAFiB,SAGM5X,WAAe,MAHrB,GAG3B6X,EAH2B,KAGbC,EAHa,KAI5BC,EAAc,WAClBC,MAAM,GAAD,OAAItG,IAAJ,kCAA8C,CACjDuG,OAAQ,OACRC,KAAM7B,KAAKC,UAAU,CAAEmB,WAAUE,aACjCQ,QAAS,CACP,eAAgB,mBAChB,mBAAoB,oBAGrBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACtX,GACa,MAAdA,EAAKyX,MACP/M,eAAegN,QAAQ,YAAa1X,EAAK2X,OAEzCzP,YAAYxN,IAAYob,QAExBlY,QAAQwF,MAAMpD,GACdgX,EAAgBhX,EAAK4X,cAI7B,OACE,uBACEpW,MAAO,CACLmQ,OAAQ,GAAF,OAAK/G,OAAOgH,YAAZ,MACNiG,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,cAAe,WAGjB,gBAAC,IAAD,CAAW/W,MAAM,WAAWjC,SAAU,SAAC7D,GAAD,OAAOyb,EAAYzb,EAAEE,OAAOC,UAClE,2BACA,gBAAC,IAAD,CACE8H,QAAS2T,EACTlL,WAAYkL,GAAgB,GAC5B/X,SAAU,SAAC7D,GAAD,OAAO2b,EAAY3b,EAAEE,OAAOC,QACtCG,KAAK,WACLwF,MAAM,WACNgX,WAAY,SAAC9c,GACO,IAAdA,EAAE+c,UACJjB,OAIN,2BACA,gBAAC,IAAD,CAAQtV,QAAQ,YAAYD,MAAM,UAAUN,QAAS,kBAAM6V,MAA3D,Y,iCC1DN,gEAGO,SAASjB,IACd,IAAMmC,EAOCC,IAAYC,MAAMnD,IAAQrK,SAAS6K,OAAOvK,MAAM,KAAK,IAN5D,OAAIgN,GAAUA,EAAO3J,SACZ+G,KAAK8C,MAAMF,EAAO3J,UAEpB,K,iCCRT,6EAYa7T,GAZb,OAYqB2d,KAMd,SAASzY,EACd4F,GAEA,OAAOgG,YAAqE9Q,EAAO8K,K,kBCpBjF,IAAI8S,EAAM,CAAC,KAAO,WAAW,YAAc,CAAC,CAAC,KAAO,sBAAsB,UAAY,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,0BAA0B,oBAAsB,CAAC,CAAC,KAAO,qBAAqB,SAAW,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,KAAO,CAAC,KAAO,cAAc,KAAO,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,WAAa,IAAI,CAAC,KAAO,qBAAqB,SAAW,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,KAAO,CAAC,KAAO,cAAc,KAAO,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,WAAa,KAAK,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,kBAAkB,UAAY,CAAC,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,MAAQ,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,WAAW,MAAQ,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,QAAQ,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,MAAM,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,OAAO,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,UAAY,GAAG,WAAa,iBAAiB,IAAM,CAAC,MAAQ,EAAE,IAAM,MAC5zGA,EAAIC,IAAItI,OAAS,CAAC,KAAO,4kBAA4kB,KAAO,kBAAkB,eAAiB,CAAC,KAAO,EAAE,OAAS,IAkDlqB,IAAIuI,EAAiB,GAWrB,SAASC,EAAcH,EAAKjF,GAC1B,IAAK,IAAIqF,EAAI,EAAGA,EAAIJ,EAAIK,YAAYzV,OAAQwV,IAAK,CAC/C,IAAIE,EAAUN,EAAIK,YAAYD,GAC9B,GAAIE,EAAQvF,MAAQuF,EAAQvF,KAAKhY,OAASgY,EACxC,OAAOuF,GAbXN,EAAIK,YAAYE,SAAQ,SAASC,GAC/B,GAAIA,EAAIzF,KAAM,CACZ,IAAI0F,EAAO,IAAIC,KAjCrB,SAASC,EAA0BzG,EAAMuG,GACvC,GAAkB,mBAAdvG,EAAK0G,KACPH,EAAKI,IAAI3G,EAAKa,KAAKhY,YACd,GAAkB,uBAAdmX,EAAK0G,KAA+B,CAC7C,IAAI1d,EAAOgX,EAAKhX,KACE,cAAdA,EAAK0d,MACPH,EAAKI,IAAI3d,EAAK6X,KAAKhY,OAInBmX,EAAK4G,cACP5G,EAAK4G,aAAaC,WAAWR,SAAQ,SAASS,GAC5CL,EAA0BK,EAAWP,MAIrCvG,EAAK+G,qBACP/G,EAAK+G,oBAAoBV,SAAQ,SAASC,GACxCG,EAA0BH,EAAKC,MAI/BvG,EAAKmG,aACPnG,EAAKmG,YAAYE,SAAQ,SAASC,GAChCG,EAA0BH,EAAKC,MAU/BE,CAA0BH,EAAKC,GAC/BP,EAAeM,EAAIzF,KAAKhY,OAAS0d,MA4DvCvC,EAAOgD,QAAUlB,EAEb9B,EAAOgD,QAAgC,uBAhD3C,SAAkBlB,EAAKmB,GAErB,IAAIC,EAAS,CACXR,KAAMZ,EAAIY,KACVP,YAAa,CAACF,EAAcH,EAAKmB,KAE/BnB,EAAIqB,eAAe,SACrBD,EAAOnB,IAAMD,EAAIC,KAKnB,IAAIqB,EAASpB,EAAeiB,IAAkB,IAAIT,IAC9Ca,EAAU,IAAIb,IACdc,EAAU,IAAId,IAOlB,IAJAY,EAAOf,SAAQ,SAASkB,GACtBD,EAAQX,IAAIY,MAGPD,EAAQ5V,KAAO,GAAG,CACvB,IAAI8V,EAAWF,EACfA,EAAU,IAAId,IAEdgB,EAASnB,SAAQ,SAASkB,GACnBF,EAAQI,IAAIF,KACfF,EAAQV,IAAIY,IACIvB,EAAeuB,IAAY,IAAIf,KACrCH,SAAQ,SAASqB,GACzBJ,EAAQX,IAAIe,UAapB,OAPAL,EAAQhB,SAAQ,SAASkB,GACvB,IAAII,EAAK1B,EAAcH,EAAKyB,GACxBI,GACFT,EAAOf,YAAYnD,KAAK2E,MAIrBT,EAKsCU,CAAS9B,EAAK,2B,kBCvH7D,IAAIA,EAAM,CAAC,KAAO,WAAW,YAAc,CAAC,CAAC,KAAO,sBAAsB,UAAY,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,mBAAmB,oBAAsB,CAAC,CAAC,KAAO,qBAAqB,SAAW,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,KAAO,CAAC,KAAO,cAAc,KAAO,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,wBAAwB,WAAa,KAAK,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,WAAW,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,CAAC,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,WAAW,MAAQ,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,MAAM,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,iBAAiB,cAAgB,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,qBAAqB,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,qBAAqB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,0BAA0B,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,mBAAmB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,qBAAqB,UAAY,GAAG,WAAa,UAAU,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,UAAY,GAAG,WAAa,UAAU,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,MAAM,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,QAAQ,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,UAAY,GAAG,WAAa,WAAW,IAAM,CAAC,MAAQ,EAAE,IAAM,MACn7IA,EAAIC,IAAItI,OAAS,CAAC,KAAO,0yBAA0yB,KAAO,kBAAkB,eAAiB,CAAC,KAAO,EAAE,OAAS,IAkDh4B,IAAIuI,EAAiB,GAWrB,SAASC,EAAcH,EAAKjF,GAC1B,IAAK,IAAIqF,EAAI,EAAGA,EAAIJ,EAAIK,YAAYzV,OAAQwV,IAAK,CAC/C,IAAIE,EAAUN,EAAIK,YAAYD,GAC9B,GAAIE,EAAQvF,MAAQuF,EAAQvF,KAAKhY,OAASgY,EACxC,OAAOuF,GAbXN,EAAIK,YAAYE,SAAQ,SAASC,GAC/B,GAAIA,EAAIzF,KAAM,CACZ,IAAI0F,EAAO,IAAIC,KAjCrB,SAASC,EAA0BzG,EAAMuG,GACvC,GAAkB,mBAAdvG,EAAK0G,KACPH,EAAKI,IAAI3G,EAAKa,KAAKhY,YACd,GAAkB,uBAAdmX,EAAK0G,KAA+B,CAC7C,IAAI1d,EAAOgX,EAAKhX,KACE,cAAdA,EAAK0d,MACPH,EAAKI,IAAI3d,EAAK6X,KAAKhY,OAInBmX,EAAK4G,cACP5G,EAAK4G,aAAaC,WAAWR,SAAQ,SAASS,GAC5CL,EAA0BK,EAAWP,MAIrCvG,EAAK+G,qBACP/G,EAAK+G,oBAAoBV,SAAQ,SAASC,GACxCG,EAA0BH,EAAKC,MAI/BvG,EAAKmG,aACPnG,EAAKmG,YAAYE,SAAQ,SAASC,GAChCG,EAA0BH,EAAKC,MAU/BE,CAA0BH,EAAKC,GAC/BP,EAAeM,EAAIzF,KAAKhY,OAAS0d,MA4DvCvC,EAAOgD,QAAUlB,EAEb9B,EAAOgD,QAAyB,gBAhDpC,SAAkBlB,EAAKmB,GAErB,IAAIC,EAAS,CACXR,KAAMZ,EAAIY,KACVP,YAAa,CAACF,EAAcH,EAAKmB,KAE/BnB,EAAIqB,eAAe,SACrBD,EAAOnB,IAAMD,EAAIC,KAKnB,IAAIqB,EAASpB,EAAeiB,IAAkB,IAAIT,IAC9Ca,EAAU,IAAIb,IACdc,EAAU,IAAId,IAOlB,IAJAY,EAAOf,SAAQ,SAASkB,GACtBD,EAAQX,IAAIY,MAGPD,EAAQ5V,KAAO,GAAG,CACvB,IAAI8V,EAAWF,EACfA,EAAU,IAAId,IAEdgB,EAASnB,SAAQ,SAASkB,GACnBF,EAAQI,IAAIF,KACfF,EAAQV,IAAIY,IACIvB,EAAeuB,IAAY,IAAIf,KACrCH,SAAQ,SAASqB,GACzBJ,EAAQX,IAAIe,UAapB,OAPAL,EAAQhB,SAAQ,SAASkB,GACvB,IAAII,EAAK1B,EAAcH,EAAKyB,GACxBI,GACFT,EAAOf,YAAYnD,KAAK2E,MAIrBT,EAK+BU,CAAS9B,EAAK,oB,iCCxH1D,6EAYa5d,GAZb,OAYqB2f,KAMd,SAASza,EACd4F,GAEA,OAAOgG,YAA2D9Q,EAAO8K,K,kBCpBvE,IAAI8S,EAAM,CAAC,KAAO,WAAW,YAAc,CAAC,CAAC,KAAO,sBAAsB,UAAY,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,qBAAqB,oBAAsB,CAAC,CAAC,KAAO,qBAAqB,SAAW,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,UAAU,KAAO,CAAC,KAAO,cAAc,KAAO,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,4BAA4B,WAAa,KAAK,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,qBAAqB,UAAY,CAAC,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,MAAQ,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,QAAQ,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,MAAM,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,OAAO,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,UAAY,GAAG,WAAa,iBAAiB,IAAM,CAAC,MAAQ,EAAE,IAAM,MACn+FA,EAAIC,IAAItI,OAAS,CAAC,KAAO,uiBAAuiB,KAAO,kBAAkB,eAAiB,CAAC,KAAO,EAAE,OAAS,IAkD7nB,IAAIuI,EAAiB,GAWrB,SAASC,EAAcH,EAAKjF,GAC1B,IAAK,IAAIqF,EAAI,EAAGA,EAAIJ,EAAIK,YAAYzV,OAAQwV,IAAK,CAC/C,IAAIE,EAAUN,EAAIK,YAAYD,GAC9B,GAAIE,EAAQvF,MAAQuF,EAAQvF,KAAKhY,OAASgY,EACxC,OAAOuF,GAbXN,EAAIK,YAAYE,SAAQ,SAASC,GAC/B,GAAIA,EAAIzF,KAAM,CACZ,IAAI0F,EAAO,IAAIC,KAjCrB,SAASC,EAA0BzG,EAAMuG,GACvC,GAAkB,mBAAdvG,EAAK0G,KACPH,EAAKI,IAAI3G,EAAKa,KAAKhY,YACd,GAAkB,uBAAdmX,EAAK0G,KAA+B,CAC7C,IAAI1d,EAAOgX,EAAKhX,KACE,cAAdA,EAAK0d,MACPH,EAAKI,IAAI3d,EAAK6X,KAAKhY,OAInBmX,EAAK4G,cACP5G,EAAK4G,aAAaC,WAAWR,SAAQ,SAASS,GAC5CL,EAA0BK,EAAWP,MAIrCvG,EAAK+G,qBACP/G,EAAK+G,oBAAoBV,SAAQ,SAASC,GACxCG,EAA0BH,EAAKC,MAI/BvG,EAAKmG,aACPnG,EAAKmG,YAAYE,SAAQ,SAASC,GAChCG,EAA0BH,EAAKC,MAU/BE,CAA0BH,EAAKC,GAC/BP,EAAeM,EAAIzF,KAAKhY,OAAS0d,MA4DvCvC,EAAOgD,QAAUlB,EAEb9B,EAAOgD,QAA2B,kBAhDtC,SAAkBlB,EAAKmB,GAErB,IAAIC,EAAS,CACXR,KAAMZ,EAAIY,KACVP,YAAa,CAACF,EAAcH,EAAKmB,KAE/BnB,EAAIqB,eAAe,SACrBD,EAAOnB,IAAMD,EAAIC,KAKnB,IAAIqB,EAASpB,EAAeiB,IAAkB,IAAIT,IAC9Ca,EAAU,IAAIb,IACdc,EAAU,IAAId,IAOlB,IAJAY,EAAOf,SAAQ,SAASkB,GACtBD,EAAQX,IAAIY,MAGPD,EAAQ5V,KAAO,GAAG,CACvB,IAAI8V,EAAWF,EACfA,EAAU,IAAId,IAEdgB,EAASnB,SAAQ,SAASkB,GACnBF,EAAQI,IAAIF,KACfF,EAAQV,IAAIY,IACIvB,EAAeuB,IAAY,IAAIf,KACrCH,SAAQ,SAASqB,GACzBJ,EAAQX,IAAIe,UAapB,OAPAL,EAAQhB,SAAQ,SAASkB,GACvB,IAAII,EAAK1B,EAAcH,EAAKyB,GACxBI,GACFT,EAAOf,YAAYnD,KAAK2E,MAIrBT,EAKiCU,CAAS9B,EAAK,sB,kBCvHxD,IAAIA,EAAM,CAAC,KAAO,WAAW,YAAc,CAAC,CAAC,KAAO,sBAAsB,UAAY,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,qBAAqB,oBAAsB,CAAC,CAAC,KAAO,qBAAqB,SAAW,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,OAAO,KAAO,CAAC,KAAO,cAAc,KAAO,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,WAAa,IAAI,CAAC,KAAO,qBAAqB,SAAW,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,KAAO,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,QAAQ,WAAa,IAAI,CAAC,KAAO,qBAAqB,SAAW,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,UAAU,KAAO,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,WAAW,WAAa,IAAI,CAAC,KAAO,qBAAqB,SAAW,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,KAAO,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,WAAW,WAAa,IAAI,CAAC,KAAO,qBAAqB,SAAW,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,kBAAkB,KAAO,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,WAAW,WAAa,KAAK,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,qBAAqB,UAAY,CAAC,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,MAAM,MAAQ,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,QAAQ,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,MAAQ,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,MAAQ,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,WAAW,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,MAAQ,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,mBAAmB,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,MAAQ,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,mBAAmB,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,QAAQ,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,MAAM,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,OAAO,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,UAAY,GAAG,WAAa,iBAAiB,IAAM,CAAC,MAAQ,EAAE,IAAM,MACxtIA,EAAIC,IAAItI,OAAS,CAAC,KAAO,wuBAAwuB,KAAO,kBAAkB,eAAiB,CAAC,KAAO,EAAE,OAAS,IAkD9zB,IAAIuI,EAAiB,GAWrB,SAASC,EAAcH,EAAKjF,GAC1B,IAAK,IAAIqF,EAAI,EAAGA,EAAIJ,EAAIK,YAAYzV,OAAQwV,IAAK,CAC/C,IAAIE,EAAUN,EAAIK,YAAYD,GAC9B,GAAIE,EAAQvF,MAAQuF,EAAQvF,KAAKhY,OAASgY,EACxC,OAAOuF,GAbXN,EAAIK,YAAYE,SAAQ,SAASC,GAC/B,GAAIA,EAAIzF,KAAM,CACZ,IAAI0F,EAAO,IAAIC,KAjCrB,SAASC,EAA0BzG,EAAMuG,GACvC,GAAkB,mBAAdvG,EAAK0G,KACPH,EAAKI,IAAI3G,EAAKa,KAAKhY,YACd,GAAkB,uBAAdmX,EAAK0G,KAA+B,CAC7C,IAAI1d,EAAOgX,EAAKhX,KACE,cAAdA,EAAK0d,MACPH,EAAKI,IAAI3d,EAAK6X,KAAKhY,OAInBmX,EAAK4G,cACP5G,EAAK4G,aAAaC,WAAWR,SAAQ,SAASS,GAC5CL,EAA0BK,EAAWP,MAIrCvG,EAAK+G,qBACP/G,EAAK+G,oBAAoBV,SAAQ,SAASC,GACxCG,EAA0BH,EAAKC,MAI/BvG,EAAKmG,aACPnG,EAAKmG,YAAYE,SAAQ,SAASC,GAChCG,EAA0BH,EAAKC,MAU/BE,CAA0BH,EAAKC,GAC/BP,EAAeM,EAAIzF,KAAKhY,OAAS0d,MA4DvCvC,EAAOgD,QAAUlB,EAEb9B,EAAOgD,QAA2B,kBAhDtC,SAAkBlB,EAAKmB,GAErB,IAAIC,EAAS,CACXR,KAAMZ,EAAIY,KACVP,YAAa,CAACF,EAAcH,EAAKmB,KAE/BnB,EAAIqB,eAAe,SACrBD,EAAOnB,IAAMD,EAAIC,KAKnB,IAAIqB,EAASpB,EAAeiB,IAAkB,IAAIT,IAC9Ca,EAAU,IAAIb,IACdc,EAAU,IAAId,IAOlB,IAJAY,EAAOf,SAAQ,SAASkB,GACtBD,EAAQX,IAAIY,MAGPD,EAAQ5V,KAAO,GAAG,CACvB,IAAI8V,EAAWF,EACfA,EAAU,IAAId,IAEdgB,EAASnB,SAAQ,SAASkB,GACnBF,EAAQI,IAAIF,KACfF,EAAQV,IAAIY,IACIvB,EAAeuB,IAAY,IAAIf,KACrCH,SAAQ,SAASqB,GACzBJ,EAAQX,IAAIe,UAapB,OAPAL,EAAQhB,SAAQ,SAASkB,GACvB,IAAII,EAAK1B,EAAcH,EAAKyB,GACxBI,GACFT,EAAOf,YAAYnD,KAAK2E,MAIrBT,EAKiCU,CAAS9B,EAAK,sB,iCCxH5D,kEAYa5d,GAZb,OAYqB4f,M,kBCXjB,IAAIhC,EAAM,CAAC,KAAO,WAAW,YAAc,CAAC,CAAC,KAAO,sBAAsB,UAAY,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,sBAAsB,oBAAsB,CAAC,CAAC,KAAO,qBAAqB,SAAW,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,OAAO,KAAO,CAAC,KAAO,cAAc,KAAO,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,WAAa,KAAK,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,sBAAsB,UAAY,CAAC,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,MAAM,MAAQ,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,QAAQ,UAAY,GAAG,WAAa,WAAW,IAAM,CAAC,MAAQ,EAAE,IAAM,KACn0BA,EAAIC,IAAItI,OAAS,CAAC,KAAO,gGAAgG,KAAO,kBAAkB,eAAiB,CAAC,KAAO,EAAE,OAAS,IAkDtL,IAAIuI,EAAiB,GAWrB,SAASC,EAAcH,EAAKjF,GAC1B,IAAK,IAAIqF,EAAI,EAAGA,EAAIJ,EAAIK,YAAYzV,OAAQwV,IAAK,CAC/C,IAAIE,EAAUN,EAAIK,YAAYD,GAC9B,GAAIE,EAAQvF,MAAQuF,EAAQvF,KAAKhY,OAASgY,EACxC,OAAOuF,GAbXN,EAAIK,YAAYE,SAAQ,SAASC,GAC/B,GAAIA,EAAIzF,KAAM,CACZ,IAAI0F,EAAO,IAAIC,KAjCrB,SAASC,EAA0BzG,EAAMuG,GACvC,GAAkB,mBAAdvG,EAAK0G,KACPH,EAAKI,IAAI3G,EAAKa,KAAKhY,YACd,GAAkB,uBAAdmX,EAAK0G,KAA+B,CAC7C,IAAI1d,EAAOgX,EAAKhX,KACE,cAAdA,EAAK0d,MACPH,EAAKI,IAAI3d,EAAK6X,KAAKhY,OAInBmX,EAAK4G,cACP5G,EAAK4G,aAAaC,WAAWR,SAAQ,SAASS,GAC5CL,EAA0BK,EAAWP,MAIrCvG,EAAK+G,qBACP/G,EAAK+G,oBAAoBV,SAAQ,SAASC,GACxCG,EAA0BH,EAAKC,MAI/BvG,EAAKmG,aACPnG,EAAKmG,YAAYE,SAAQ,SAASC,GAChCG,EAA0BH,EAAKC,MAU/BE,CAA0BH,EAAKC,GAC/BP,EAAeM,EAAIzF,KAAKhY,OAAS0d,MA4DvCvC,EAAOgD,QAAUlB,EAEb9B,EAAOgD,QAA4B,mBAhDvC,SAAkBlB,EAAKmB,GAErB,IAAIC,EAAS,CACXR,KAAMZ,EAAIY,KACVP,YAAa,CAACF,EAAcH,EAAKmB,KAE/BnB,EAAIqB,eAAe,SACrBD,EAAOnB,IAAMD,EAAIC,KAKnB,IAAIqB,EAASpB,EAAeiB,IAAkB,IAAIT,IAC9Ca,EAAU,IAAIb,IACdc,EAAU,IAAId,IAOlB,IAJAY,EAAOf,SAAQ,SAASkB,GACtBD,EAAQX,IAAIY,MAGPD,EAAQ5V,KAAO,GAAG,CACvB,IAAI8V,EAAWF,EACfA,EAAU,IAAId,IAEdgB,EAASnB,SAAQ,SAASkB,GACnBF,EAAQI,IAAIF,KACfF,EAAQV,IAAIY,IACIvB,EAAeuB,IAAY,IAAIf,KACrCH,SAAQ,SAASqB,GACzBJ,EAAQX,IAAIe,UAapB,OAPAL,EAAQhB,SAAQ,SAASkB,GACvB,IAAII,EAAK1B,EAAcH,EAAKyB,GACxBI,GACFT,EAAOf,YAAYnD,KAAK2E,MAIrBT,EAKkCU,CAAS9B,EAAK,uB,iCCxH7D,kEASa5d,GATb,OASqB6f,M,kBCRjB,IAAIjC,EAAM,CAAC,KAAO,WAAW,YAAc,CAAC,CAAC,KAAO,sBAAsB,UAAY,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,kBAAkB,oBAAsB,CAAC,CAAC,KAAO,qBAAqB,SAAW,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,OAAO,KAAO,CAAC,KAAO,cAAc,KAAO,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,WAAa,KAAK,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,kBAAkB,UAAY,CAAC,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,MAAM,MAAQ,CAAC,KAAO,WAAW,KAAO,CAAC,KAAO,OAAO,MAAQ,SAAS,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,QAAQ,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,cAAc,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,MAAM,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,WAAW,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,cAAc,IAAM,CAAC,MAAQ,EAAE,IAAM,MAC74CA,EAAIC,IAAItI,OAAS,CAAC,KAAO,+LAA+L,KAAO,kBAAkB,eAAiB,CAAC,KAAO,EAAE,OAAS,IAkDrR,IAAIuI,EAAiB,GAWrB,SAASC,EAAcH,EAAKjF,GAC1B,IAAK,IAAIqF,EAAI,EAAGA,EAAIJ,EAAIK,YAAYzV,OAAQwV,IAAK,CAC/C,IAAIE,EAAUN,EAAIK,YAAYD,GAC9B,GAAIE,EAAQvF,MAAQuF,EAAQvF,KAAKhY,OAASgY,EACxC,OAAOuF,GAbXN,EAAIK,YAAYE,SAAQ,SAASC,GAC/B,GAAIA,EAAIzF,KAAM,CACZ,IAAI0F,EAAO,IAAIC,KAjCrB,SAASC,EAA0BzG,EAAMuG,GACvC,GAAkB,mBAAdvG,EAAK0G,KACPH,EAAKI,IAAI3G,EAAKa,KAAKhY,YACd,GAAkB,uBAAdmX,EAAK0G,KAA+B,CAC7C,IAAI1d,EAAOgX,EAAKhX,KACE,cAAdA,EAAK0d,MACPH,EAAKI,IAAI3d,EAAK6X,KAAKhY,OAInBmX,EAAK4G,cACP5G,EAAK4G,aAAaC,WAAWR,SAAQ,SAASS,GAC5CL,EAA0BK,EAAWP,MAIrCvG,EAAK+G,qBACP/G,EAAK+G,oBAAoBV,SAAQ,SAASC,GACxCG,EAA0BH,EAAKC,MAI/BvG,EAAKmG,aACPnG,EAAKmG,YAAYE,SAAQ,SAASC,GAChCG,EAA0BH,EAAKC,MAU/BE,CAA0BH,EAAKC,GAC/BP,EAAeM,EAAIzF,KAAKhY,OAAS0d,MA4DvCvC,EAAOgD,QAAUlB,EAEb9B,EAAOgD,QAAwB,eAhDnC,SAAkBlB,EAAKmB,GAErB,IAAIC,EAAS,CACXR,KAAMZ,EAAIY,KACVP,YAAa,CAACF,EAAcH,EAAKmB,KAE/BnB,EAAIqB,eAAe,SACrBD,EAAOnB,IAAMD,EAAIC,KAKnB,IAAIqB,EAASpB,EAAeiB,IAAkB,IAAIT,IAC9Ca,EAAU,IAAIb,IACdc,EAAU,IAAId,IAOlB,IAJAY,EAAOf,SAAQ,SAASkB,GACtBD,EAAQX,IAAIY,MAGPD,EAAQ5V,KAAO,GAAG,CACvB,IAAI8V,EAAWF,EACfA,EAAU,IAAId,IAEdgB,EAASnB,SAAQ,SAASkB,GACnBF,EAAQI,IAAIF,KACfF,EAAQV,IAAIY,IACIvB,EAAeuB,IAAY,IAAIf,KACrCH,SAAQ,SAASqB,GACzBJ,EAAQX,IAAIe,UAapB,OAPAL,EAAQhB,SAAQ,SAASkB,GACvB,IAAII,EAAK1B,EAAcH,EAAKyB,GACxBI,GACFT,EAAOf,YAAYnD,KAAK2E,MAIrBT,EAK8BU,CAAS9B,EAAK,mB,iCCxHzD,6EASa5d,GATb,OASqB8f,KAOd,SAAS5a,EAAe4F,GAC7B,OAAOiV,YAAwC/f,EAAO8K,K,kBChBpD,IAAI8S,EAAM,CAAC,KAAO,WAAW,YAAc,CAAC,CAAC,KAAO,sBAAsB,UAAY,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,oBAAsB,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,UAAU,UAAY,GAAG,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,iBAAiB,cAAgB,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,gBAAgB,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,MAAM,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,UAAY,GAAG,WAAa,OAAO,CAAC,KAAO,iBAAiB,cAAgB,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,iBAAiB,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,MAAM,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,UAAU,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,WAAW,UAAY,GAAG,WAAa,OAAO,CAAC,KAAO,iBAAiB,cAAgB,CAAC,KAAO,YAAY,KAAO,CAAC,KAAO,OAAO,MAAQ,eAAe,WAAa,GAAG,aAAe,CAAC,KAAO,eAAe,WAAa,CAAC,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,MAAM,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,aAAa,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,YAAY,UAAY,GAAG,WAAa,IAAI,CAAC,KAAO,QAAQ,KAAO,CAAC,KAAO,OAAO,MAAQ,UAAU,UAAY,GAAG,WAAa,iBAAiB,IAAM,CAAC,MAAQ,EAAE,IAAM,MACtiFA,EAAIC,IAAItI,OAAS,CAAC,KAAO,ydAAyd,KAAO,kBAAkB,eAAiB,CAAC,KAAO,EAAE,OAAS,IAkD/iB,IAAIuI,EAAiB,GAWrB,SAASC,EAAcH,EAAKjF,GAC1B,IAAK,IAAIqF,EAAI,EAAGA,EAAIJ,EAAIK,YAAYzV,OAAQwV,IAAK,CAC/C,IAAIE,EAAUN,EAAIK,YAAYD,GAC9B,GAAIE,EAAQvF,MAAQuF,EAAQvF,KAAKhY,OAASgY,EACxC,OAAOuF,GAbXN,EAAIK,YAAYE,SAAQ,SAASC,GAC/B,GAAIA,EAAIzF,KAAM,CACZ,IAAI0F,EAAO,IAAIC,KAjCrB,SAASC,EAA0BzG,EAAMuG,GACvC,GAAkB,mBAAdvG,EAAK0G,KACPH,EAAKI,IAAI3G,EAAKa,KAAKhY,YACd,GAAkB,uBAAdmX,EAAK0G,KAA+B,CAC7C,IAAI1d,EAAOgX,EAAKhX,KACE,cAAdA,EAAK0d,MACPH,EAAKI,IAAI3d,EAAK6X,KAAKhY,OAInBmX,EAAK4G,cACP5G,EAAK4G,aAAaC,WAAWR,SAAQ,SAASS,GAC5CL,EAA0BK,EAAWP,MAIrCvG,EAAK+G,qBACP/G,EAAK+G,oBAAoBV,SAAQ,SAASC,GACxCG,EAA0BH,EAAKC,MAI/BvG,EAAKmG,aACPnG,EAAKmG,YAAYE,SAAQ,SAASC,GAChCG,EAA0BH,EAAKC,MAU/BE,CAA0BH,EAAKC,GAC/BP,EAAeM,EAAIzF,KAAKhY,OAAS0d,MA4DvCvC,EAAOgD,QAAUlB,EAEb9B,EAAOgD,QAAmB,UAhD9B,SAAkBlB,EAAKmB,GAErB,IAAIC,EAAS,CACXR,KAAMZ,EAAIY,KACVP,YAAa,CAACF,EAAcH,EAAKmB,KAE/BnB,EAAIqB,eAAe,SACrBD,EAAOnB,IAAMD,EAAIC,KAKnB,IAAIqB,EAASpB,EAAeiB,IAAkB,IAAIT,IAC9Ca,EAAU,IAAIb,IACdc,EAAU,IAAId,IAOlB,IAJAY,EAAOf,SAAQ,SAASkB,GACtBD,EAAQX,IAAIY,MAGPD,EAAQ5V,KAAO,GAAG,CACvB,IAAI8V,EAAWF,EACfA,EAAU,IAAId,IAEdgB,EAASnB,SAAQ,SAASkB,GACnBF,EAAQI,IAAIF,KACfF,EAAQV,IAAIY,IACIvB,EAAeuB,IAAY,IAAIf,KACrCH,SAAQ,SAASqB,GACzBJ,EAAQX,IAAIe,UAapB,OAPAL,EAAQhB,SAAQ,SAASkB,GACvB,IAAII,EAAK1B,EAAcH,EAAKyB,GACxBI,GACFT,EAAOf,YAAYnD,KAAK2E,MAIrBT,EAKyBU,CAAS9B,EAAK,c,0zBC/GpD,IAAMoC,EAAkB,IAAIC,IAA6B,CACvDC,6BAA8B,CAC5BC,SAAU,CACRC,MAAO,OAKAC,EAAYC,aAAQ,YAAqC,IAAlCC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aAE7CD,GACFA,EAAcpC,SAAQ,SAACsC,GACjBA,EAASC,YAA0C,OAA5BD,EAASC,WAAW5D,OAC7C7M,OAAOC,SAASC,KAAO,aACvBlN,QAAQwF,MAAM,qBAIhB+X,GAAcvd,QAAQwF,MAAR,2BAAkC+X,OAahDG,EAAWC,aAAW,SAACzT,EAAD,GAAoB,IAAduP,EAAc,EAAdA,QAC1BM,EAAQjN,eAAeiG,QAAQ,aACrC,MAAO,CACL0G,QAAS,EAAF,KACFA,GADE,IAELmE,cAAe7D,EAAQ,UAAH,OAAaA,GAAU,SAKpCjB,EAAS,IAAI+E,IAAG,CAC3BC,KApBOC,YAAOL,EAAUN,GAAWW,OACjC,IAAIC,IAAS,CACXC,IAAK,GAAF,OAAKjL,IAAL,qBACHyG,QAAS,CACPmE,cAAe,UAAF,OAAY9Q,eAAeiG,QAAQ,kBAiBtD5Q,MAAO,IAAI+b,IAAc,CACvBnB,uB,02BCtCJ,IAVuBoB,EAAcC,EAU/BC,GAViBF,EAUM,GAVQC,EAUJ,CAC/BE,UAAW,SAACD,GAAD,SAAgBA,EAAOxc,MAAM,KACxC0c,UAAW,SAACF,EAAQG,GAAT,kBAAwBH,GAAxB,CAAgCG,EAAOC,UAX3C,WAA+C,IAA9B9e,EAA8B,uDAAtBwe,EAAcK,EAAQ,uCACpD,OAAIJ,EAASpC,eAAewC,EAAO3gB,MAC1BugB,EAASI,EAAO3gB,MAAM8B,EAAO6e,GAE7B7e,IAcE+e,EAJEC,0BAAgB,CAC/BN,W,SCXIO,ECHwB,SAACT,GAC7B,IAAIU,EAAaC,0BAAgBC,IAAOC,OAYxC,OARcC,sBAAYP,EAAUP,EAAcU,GDFtCK,GAEdC,SACE,gBAAC,IAAD,CAAUP,MAAOA,GACf,gBAAC,IAAD,CAAQtH,QAASA,KACf,gBAAC,IAAD,QAGJ8H,SAASC,eAAe,U,gCElB1B,mHAYatiB,GAZb,OAYqBuiB,KAMd,SAASrd,EACd4F,GAEA,OAAOiV,YAAoD/f,EAAO8K,K,wJCZ7D,SAASwH,EAAWkQ,GAEzB,OADa,IAAIpf,KAAKof,GACVtN,mBAAmB,QAAS,CACtCuN,MAAO,QACPC,IAAK,UACLC,SAAU,QAIP,IAAMhf,EAAmB,SAAC6e,GAC/B,IAAMI,EAAOJ,EAAEK,cACTJ,EAAQD,EAAEM,WAAa,EAAI,KAAON,EAAEM,WAAa,GAAKN,EAAEM,WAAa,EACrEJ,EAAMF,EAAEjf,UAAY,GAAK,IAAMif,EAAEjf,UAAYif,EAAEjf,UACrD,gBAAUqf,EAAV,YAAkBH,EAAlB,YAA2BC,IAGtB,SAAS9W,IACd,IAAMzI,EAAQ,IAAIC,KACZwf,EAAOzf,EAAM0f,cACbJ,EAAQtf,EAAM2f,WAAa,EAAI,KAAO3f,EAAM2f,WAAa,GAAK3f,EAAM2f,WAAa,EACjFJ,EAAMvf,EAAMI,UAAY,GAAK,IAAMJ,EAAMI,UAAYJ,EAAMI,UACjE,gBAAUqf,EAAV,YAAkBH,EAAlB,YAA2BC,K,gCCRtB,IAAKK,EAwHA9O,EA0EA5L,EAxNZ,sG,SAsBY0a,K,oCAAAA,E,oCAAAA,E,gCAAAA,E,oCAAAA,E,gCAAAA,E,wBAAAA,E,gCAAAA,E,sCAAAA,E,gDAAAA,E,oCAAAA,E,kCAAAA,E,kCAAAA,E,gCAAAA,E,gCAAAA,E,sCAAAA,E,yCAAAA,M,cAwHA9O,K,wBAAAA,E,oCAAAA,E,6BAAAA,M,cA0EA5L,K,sBAAAA,E,8BAAAA,E,YAAAA,E,iBAAAA,M,KAkCZ,IAgPazD,EAAiB,CAC5ByI,iBAjPuB,SACvBhI,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAU1V,iBAChB6V,MAAOH,EAAU1V,iBACjBhI,OACA2d,aACAC,sBAwOJE,iBApOuB,SACvB9d,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUI,iBAChBD,MAAOH,EAAUI,iBACjB9d,OACA2d,aACAC,sBA2NJG,eAvNqB,SACrB/d,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUK,eAChBF,MAAOH,EAAUK,eACjB/d,OACA2d,aACAC,sBA8MJ5I,iBA1MuB,SACvBhV,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAU1I,iBAChB6I,MAAOH,EAAU1I,iBACjBhV,OACA2d,aACAC,sBAiMJ3I,eA7LqB,SACrBjV,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUzI,eAChB4I,MAAOH,EAAUzI,eACjBjV,OACA2d,aACAC,sBAoLJI,WAhLiB,SACjBhe,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUM,WAChBH,MAAOH,EAAUM,WACjBhe,OACA2d,aACAC,sBAuKJK,eAnKqB,SACrBje,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUO,eAChBJ,MAAOH,EAAUO,eACjBje,OACA2d,aACAC,sBA0JJM,kBAtJwB,SACxBle,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUQ,kBAChBL,MAAOH,EAAUQ,kBACjBle,OACA2d,aACAC,sBA6IJO,uBAzI6B,SAC7Bne,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUS,uBAChBN,MAAOH,EAAUS,uBACjBne,OACA2d,aACAC,sBAgIJQ,iBA5HuB,SACvBpe,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUU,iBAChBP,MAAOH,EAAUU,iBACjBpe,OACA2d,aACAC,sBAmHJS,gBA/GsB,SACtBre,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUW,gBAChBR,MAAOH,EAAUW,gBACjBre,OACA2d,aACAC,sBAsGJU,gBAlGsB,SACtBte,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUY,gBAChBT,MAAOH,EAAUY,gBACjBte,OACA2d,aACAC,sBAyFJW,eArFqB,SACrBve,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUa,eAChBV,MAAOH,EAAUa,eACjBve,OACA2d,aACAC,sBA4EJY,eAxEqB,SACrBxe,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUc,eAChBX,MAAOH,EAAUc,eACjBxe,OACA2d,aACAC,sBA+DJa,kBA3DwB,SACxBze,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUe,kBAChBZ,MAAOH,EAAUe,kBACjBze,OACA2d,aACAC,sBAkDJc,mBA9CyB,SACzB1e,EACA2d,EACAC,GAEA,OAAO,SAACve,GAAD,OACLA,EAAS,CACP5D,KAAMiiB,EAAUgB,mBAChBb,MAAOH,EAAUgB,mBACjB1e,OACA2d,aACAC,wB,gCCteN,uFAGanP,EAAkBvP,gBAAyB,IAC3C2V,EAAgB3V,gBAA2CK,M,gCCJxE,kCAaA,IAAMof,IAAY/T,OAAOC,SAAS+T,KACrBhO,EAAW,GAAH,OAAMhG,OAAOC,SAASgU,SAAtB,aAAmCjU,OAAOC,SAASiU,SAAnD,YACnBH,EAAU,OAAS,M","file":"app.js","sourcesContent":["import {\n  ICheckPoint,\n  IStatement,\n  IImportBatch,\n  IUserTransaction,\n  ICategory,\n} from '@src/__generated__/backendSchemas'\n\nexport * from '@src/__generated__/backendSchemas'\n\nexport type IEvent = ICheckPoint | IStatement | IImportBatch\n\nexport interface State {\n  user_id: number\n  balance: string\n  events: Array<IEvent>\n  categories: Array<ICategory>\n  authToken: string | null\n  isAuthenticated: boolean\n  transactions: Array<IUserTransaction>\n  router?: any\n  snacks: Array<string>\n}\n\nexport enum UrlPathEnum {\n  Root = '/',\n  LoginPage = '/LoginPage',\n  TransactionList = '/TransactionList',\n  TransactionChart = '/TransactionChart',\n  CategoryPage = '/CategoryPage',\n}\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  UpdateTransaction,\n  UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction'\nimport UpdateTransaction__QUERY from '@src/queries/UpdateTransaction.graphql'\n\nexport * from '@src/queries/__generated__/UpdateTransaction'\n\nexport const QUERY = UpdateTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<UpdateTransaction, UpdateTransactionVariables>,\n) {\n  return useMutation<UpdateTransaction, UpdateTransactionVariables>(QUERY, options)\n}\n","import { MenuItem, Select } from '@material-ui/core'\n// import { parseUrlState } from '@src/selectors'\nimport HighchartsData from 'highcharts-data'\nimport HighchartsDrilldown from 'highcharts-drilldown'\nimport * as React from 'react'\nimport Highchart from 'react-highcharts'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport u from 'updeep'\nimport { getIsoDateString } from '@src/utils'\nimport { BUTLER_ACTIONS } from '@src/types'\n\nHighchartsData(Highchart.Highcharts)\nHighchartsDrilldown(Highchart.Highcharts)\n\ntype ReportType = 'INCOME_EXPENSE' | 'EXPENSE'\n\nconst getChartConfig = ({ onClickColumn }) => {\n  return {\n    chart: {\n      type: 'column',\n      //height: 800,\n      //width: 800\n    },\n    title: {\n      text: 'Income/Expense Report',\n    },\n    xAxis: {\n      type: 'category',\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Spend',\n        align: 'high',\n      },\n      labels: {\n        overflow: 'justify',\n      },\n    },\n    tooltip: {\n      valueSuffix: ' dollars',\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: true,\n        },\n      },\n      column: {\n        dataLabels: {\n          enabled: true,\n        },\n        allowPointSelect: false,\n        events: {\n          click: onClickColumn,\n        },\n      },\n    },\n    legend: {\n      enabled: true,\n      layout: 'vertical',\n      align: 'right',\n      verticalAlign: 'top',\n      x: -40,\n      y: 80,\n      floating: true,\n      borderWidth: 1,\n      shadow: true,\n    },\n    credits: {\n      enabled: false,\n    },\n  }\n}\ninterface Prop {\n  butler: typeof BUTLER_ACTIONS\n  initialReportType?: string\n}\n\ninterface State {\n  config: any\n  reportTitle: string\n  chart: any\n  report_type: ReportType\n}\n\nclass TransactionChartComponent extends React.Component<Prop, State> {\n  constructor(props) {\n    super(props)\n    const config = getChartConfig({\n      onClickColumn: this.onClickColumn.bind(this),\n    })\n    this.state = {\n      config,\n      chart: null,\n      reportTitle: '',\n      report_type: props.initialReportType,\n    }\n  }\n\n  onClickColumn(e) {\n    if (this.state.report_type === 'INCOME_EXPENSE') {\n      return console.log(e)\n    }\n  }\n\n  getReportTitle(value) {\n    return value == 'INCOME_EXPENSE' ? 'Income/Expense Report' : 'Expense Report'\n  }\n\n  onChangeReportType = (e) => {\n    this.showReport(e.target.value)\n  }\n\n  showReport(report_type: ReportType) {\n    const today = new Date()\n    const threeMonthAgo = new Date()\n    threeMonthAgo.setDate(threeMonthAgo.getDate() - 180)\n    const apiName = report_type === 'INCOME_EXPENSE' ? 'GetIncomeExpenseReport' : 'GetExpenseReport'\n    this.props.butler[apiName](\n      { start_date: getIsoDateString(threeMonthAgo), end_date: getIsoDateString(today) },\n      'do-nothing',\n      (res) => {\n        const titled = u(\n          {\n            title: {\n              text: this.getReportTitle(report_type),\n            },\n          },\n          this.state.config,\n        )\n        const config = Object.assign({}, titled, res.chart_data)\n        this.setState({ chart: <Highchart config={config} /> })\n        this.setState({ report_type, config })\n      },\n    )\n  }\n\n  componentDidMount() {\n    this.showReport(this.state.report_type)\n  }\n\n  render() {\n    if (!this.state.config) {\n      return <p>Loading ...</p>\n    }\n    return (\n      <div>\n        <Select value={this.state.report_type} onChange={this.onChangeReportType}>\n          <MenuItem value={'INCOME_EXPENSE'}>Income/Expense</MenuItem>\n          <MenuItem value={'EXPENSE'}>Expense</MenuItem>\n        </Select>\n        <p>{this.state.reportTitle}</p>\n        {this.state.chart}\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    butler: bindActionCreators(BUTLER_ACTIONS, dispatch),\n  }\n}\nexport const TransactionChart = connect(null, mapDispatchToProps)(TransactionChartComponent)\n","import { Button, Grid, TextField } from '@material-ui/core'\nimport * as React from 'react'\nimport { useApolloQuery } from '@src/queries/__generated__/ImportWaveTransactions.hooks'\nimport {\n  GetTransactions,\n  QUERY as GET_TRANSACTIONS_QUERY,\n} from '@src/queries/__generated__/GetTransactions.hooks'\n\nconst today = new Date().toISOString().slice(0, 10)\n\nexport const ImportForm = (props: { onClose: () => void }) => {\n  const [start_date, setStartDate] = React.useState(today)\n  const [end_date, setEndDate] = React.useState(today)\n  const [importWaveTransactions, { loading }] = useApolloQuery({\n    update(cache, { data }) {\n      if (data?.importFromWave.isOk) {\n        const cached = cache.readQuery<GetTransactions>({ query: GET_TRANSACTIONS_QUERY })\n        cache.writeQuery({\n          query: GET_TRANSACTIONS_QUERY,\n          data: Object.assign({}, cached, {\n            transactions: [...data.importFromWave.transactions, ...cached!.transactions],\n          }),\n        })\n        props.onClose()\n      }\n    },\n  })\n\n  return (\n    <Grid container>\n      <Grid item xs={4}>\n        <TextField\n          type=\"date\"\n          label=\"from\"\n          value={start_date}\n          onChange={(e) => setStartDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField\n          type=\"date\"\n          label=\"to\"\n          defaultValue={today}\n          onChange={(e) => setEndDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <Button\n          onClick={() =>\n            importWaveTransactions({\n              variables: {\n                startDate: start_date,\n                endDate: end_date,\n              },\n            })\n          }\n          style={{ marginTop: '10px' }}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {loading ? 'importing ...' : 'Import'}\n        </Button>\n      </Grid>\n    </Grid>\n  )\n}\n","import { Button } from '@material-ui/core'\nimport * as React from 'react'\n\ninterface Prop {\n  submitFileContent: (content: string | ArrayBuffer | null) => void\n  button?: React.ReactElement<any>\n}\nexport class FileUploadButton extends React.Component<Prop, any> {\n  fileInput: any\n\n  onFileInputChange = (event) => {\n    const file = event.target.files[0]\n    const reader = new FileReader()\n\n    const callback = () => this.props.submitFileContent(reader.result)\n    reader.addEventListener('load', callback, false)\n    if (file) {\n      reader.readAsText(file)\n    }\n  }\n\n  render() {\n    const button = this.props.button || (\n      <Button variant=\"outlined\" component=\"span\">\n        Upload\n      </Button>\n    )\n    return (\n      <div>\n        <input\n          id=\"file-upload-form\"\n          hidden\n          ref={(ref) => (this.fileInput = ref)}\n          onChange={this.onFileInputChange}\n          type=\"file\"\n        />\n        <label htmlFor=\"file-upload-form\">{button}</label>\n      </div>\n    )\n  }\n}\n","import {\n  Select,\n  Button,\n  Divider,\n  ExpansionPanel,\n  ExpansionPanelActions,\n  ExpansionPanelSummary,\n  Grid,\n  MenuItem,\n} from '@material-ui/core'\n\nimport * as React from 'react'\nimport { FileUploadButton } from '../components/FileUploadButton'\nimport { EnumStatementSource } from '@src/__generated__/backendSchemas'\n\ninterface OwnProps {\n  onClose: () => void\n}\n\ninterface State {\n  selectedSource: EnumStatementSource\n}\n\nexport class NewStatementForm extends React.Component<OwnProps, State> {\n  state = {\n    selectedSource: EnumStatementSource.CHEQUE,\n  }\n\n  onSelectType = (event) => {\n    this.setState({ selectedSource: event.target.value })\n  }\n\n  submitFileContent = (content: string) => {\n    if (this.state.selectedSource.length && content) {\n      console.error('doing nothing')\n    }\n  }\n\n  render() {\n    const choices = ['CHEQUE', 'PC_MASTER', 'SCOTIA_MASTER', 'VISA']\n    return (\n      <div style={{ paddingTop: '10px' }}>\n        <ExpansionPanel expanded={true}>\n          <ExpansionPanelSummary>\n            <Grid container spacing={10}>\n              <Grid item xs={6} sm={4}>\n                <Select value={this.state.selectedSource} onChange={this.onSelectType}>\n                  {choices.map((c) => {\n                    return (\n                      <MenuItem key={c} value={c}>\n                        {c}\n                      </MenuItem>\n                    )\n                  })}\n                </Select>\n              </Grid>\n              <Grid item xs={6} sm={4}>\n                <FileUploadButton submitFileContent={this.submitFileContent} />\n              </Grid>\n            </Grid>\n          </ExpansionPanelSummary>\n          <Divider />\n          <ExpansionPanelActions>\n            <Button\n              size=\"small\"\n              onClick={() => {\n                this.props.onClose()\n              }}\n            >\n              Cancel\n            </Button>\n          </ExpansionPanelActions>\n        </ExpansionPanel>\n      </div>\n    )\n  }\n}\n","import { Button, Dialog, DialogContent, DialogTitle, Icon } from '@material-ui/core'\n\nimport * as React from 'react'\n\nimport { Autocomplete } from 'rice-instructor'\n\ninterface DialogSelectProps {\n  choices: Array<{\n    value: string | number\n    mui_icon_id?: string\n    label: string\n  }>\n  onSelectOption: (option) => void\n  value: string | null | number\n}\nconst getInitialOption = (\n  value: string | number | null,\n  choices: Array<{\n    value: string | number\n    mui_icon_id?: string\n    label: string\n  }>,\n) => {\n  if (!value) return null\n  const option = choices.find((x) => x.value === value)\n  if (!option) {\n    console.log(choices)\n    throw new Error(`${value} not found `)\n  }\n\n  return option\n}\nexport const DialogSelect = (props: DialogSelectProps) => {\n  const { choices, value, onSelectOption } = props\n  const [isOpen, setIsOpen] = React.useState(false)\n  const initialOption = getInitialOption(value, choices)\n  return (\n    <div>\n      <Button onClick={() => setIsOpen(true)} variant=\"outlined\" color=\"primary\">\n        {initialOption ? (\n          <Icon style={{ marginRight: '5px' }}>{initialOption.mui_icon_id}</Icon>\n        ) : null}\n        {initialOption ? initialOption.label : 'Select a Category'}\n      </Button>\n      <Dialog open={isOpen} fullWidth onClose={() => setIsOpen(false)}>\n        <DialogTitle>Select a Category</DialogTitle>\n        <DialogContent>\n          <Autocomplete\n            onSelectOption={(opt) => {\n              onSelectOption(opt)\n              setIsOpen(false)\n            }}\n            defaultValue={initialOption ? initialOption.value : undefined}\n            placeholder=\"Select a category\"\n            options={choices}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import {\n  Button,\n  Divider,\n  ExpansionPanel,\n  ExpansionPanelActions,\n  ExpansionPanelSummary,\n  Grid,\n  TextField,\n} from '@material-ui/core'\nimport * as React from 'react'\nimport { DialogSelect } from '@src/components/DialogSelect'\nimport { useApolloQuery } from '@src/queries/__generated__/CreateTransaction.hooks'\nimport { CreateTransaction__Request } from '@src/types'\nimport { GetTransactions_categories as ICategory } from '@src/queries/__generated__/GetTransactions.hooks'\nimport { getToday } from '@src/utils'\n\ninterface NewTransactionFormProps {\n  onClose: () => void\n  selectableCategories: Array<ICategory>\n}\n\ntype FieldName =\n  | 'issued_date'\n  | 'merchant'\n  | 'notes'\n  | 'category_id'\n  | 'total_amount'\n  | 'balance_adjust'\n\nconst fieldConfig = {\n  issued_date: { type: 'date', required: true },\n  merchant: { type: 'text', required: true },\n  notes: { type: 'text', required: false },\n  category_id: { type: 'number', required: false },\n  balance_adjust: { type: 'number', required: false },\n  total_amount: { type: 'number', required: true },\n}\n\nconst FieldInput = (props: {\n  fieldName: FieldName\n  updateField: (fieldName) => (event) => void\n  instance: CreateTransaction__Request\n}) => {\n  const { fieldName, updateField, instance } = props\n  const config = fieldConfig[fieldName]\n  let error = false\n  if (config.required && !instance[fieldName]) {\n    error = true\n  } else if (config.required && config.type === 'number' && !instance[fieldName]) {\n    error = true\n  }\n\n  return (\n    <TextField\n      type={config.type}\n      required={config.required}\n      error={error}\n      label={fieldName}\n      value={instance[fieldName]}\n      onChange={updateField(fieldName)}\n    />\n  )\n}\nconst initialForm = {\n  issued_date: getToday(),\n  merchant: '',\n  notes: '',\n  category_id: null,\n  total_amount: '0',\n  balance_adjust: '0',\n}\n\nexport const NewTransactionForm: React.FC<NewTransactionFormProps> = (props) => {\n  const { selectableCategories, onClose } = props\n  const [formData, setFormData] = React.useState<CreateTransaction__Request>(initialForm)\n  const [createTransaction, { loading }] = useApolloQuery({})\n\n  const createNewTransaction = () => {\n    createTransaction({\n      variables: {\n        input: {\n          issuedDate: formData.issued_date,\n          totalAmount: formData.total_amount,\n          merchantName: formData.merchant,\n          balanceAdjust: formData.balance_adjust || '0',\n          categoryId: formData.category_id,\n          notes: formData.notes,\n        },\n      },\n    })\n  }\n  const updateField = (fieldName: FieldName) => {\n    const old = formData\n    return (event) => {\n      const newState = Object.assign({}, old, {\n        [fieldName]: event.target.value,\n      })\n      setFormData(newState)\n    }\n  }\n  const isValid = () => {\n    const t = formData\n    return [t.issued_date, t.merchant, +t.total_amount].every(Boolean)\n  }\n  const transaction = formData\n  return (\n    <div style={{ paddingTop: '10px' }}>\n      <ExpansionPanel expanded={true}>\n        <ExpansionPanelSummary>\n          <Grid container spacing={10}>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                instance={transaction}\n                fieldName=\"issued_date\"\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput fieldName=\"merchant\" instance={transaction} updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"total_amount\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <DialogSelect\n                value={transaction.category_id || ''}\n                onSelectOption={(option) => {\n                  const newState = Object.assign({}, formData, {\n                    category_id: option.value,\n                  })\n                  setFormData(newState)\n                }}\n                choices={selectableCategories.map((cat) => {\n                  return {\n                    value: cat.id,\n                    label: cat.description,\n                    mui_icon_id: cat.mui_icon_id || '',\n                  }\n                })}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput fieldName=\"notes\" instance={transaction} updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"balance_adjust\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <Divider />\n        <ExpansionPanelActions>\n          <Button\n            size=\"small\"\n            onClick={() => {\n              setFormData(initialForm)\n              onClose()\n            }}\n          >\n            Cancel\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={createNewTransaction} disabled={!isValid()}>\n            {loading ? `saving ...` : `Save`}\n          </Button>\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport * as _ from 'lodash'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { InputAdornment, Menu, MenuItem, TextField } from '@material-ui/core'\nimport { Search } from '@material-ui/icons'\nimport { pushHistory } from '@src/history'\nimport { UrlPathEnum, BUTLER_ACTIONS } from '@src/types'\n\ninterface PropsFromStore {\n  suggestions: Array<any>\n}\ninterface DispatchProps {\n  butler: typeof BUTLER_ACTIONS\n}\ntype Props = PropsFromStore & DispatchProps\n\nclass SearchBarComponent extends React.Component<Props, { anchorEl: JSX.Element | null }> {\n  state = { anchorEl: null }\n\n  debounced = _.debounce(\n    (newValue) =>\n      this.props.butler.ListTransactions({ search_text: newValue }, 'replace', (data) =>\n        pushHistory(UrlPathEnum.TransactionList, {\n          search_text: newValue,\n        }),\n      ),\n    500,\n  )\n\n  onFocus = (event) => {\n    this.setState({ anchorEl: event.currentTarget })\n  }\n  handleClose = (event) => {\n    this.setState({ anchorEl: null })\n  }\n  onSearch = (event) => {\n    this.debounced(event.target.value)\n  }\n  render() {\n    const icon = (\n      <InputAdornment position=\"start\">\n        <Search />\n      </InputAdornment>\n    )\n    return (\n      <div>\n        <TextField\n          onChange={this.onSearch}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">{icon}</InputAdornment>,\n          }}\n        />\n        <Menu\n          open={!!this.state.anchorEl}\n          anchorEl={this.state.anchorEl}\n          onClose={this.handleClose}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n        >\n          {this.props.suggestions.map((sug, index) => (\n            <MenuItem\n              key={index}\n              onClick={() => {\n                this.props.butler.ListTransactions({}, 'replace')\n              }}\n            >\n              {sug.label}\n            </MenuItem>\n          ))}\n        </Menu>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps): PropsFromStore => {\n  return { suggestions: [] }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    butler: bindActionCreators(BUTLER_ACTIONS, dispatch),\n  }\n}\nexport const SearchBar = connect<PropsFromStore, DispatchProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SearchBarComponent)\n","import {\n  AppBar,\n  Icon,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@material-ui/core'\nimport { Add, AttachMoney, CreditCard, History, Waves } from '@material-ui/icons'\nimport * as React from 'react'\nimport { IconMenu } from 'rice-instructor'\nimport { SearchBar } from '@src/Root/SearchBar'\n\ninterface Prop {\n  balance: string\n  showForm: (formType: string) => void\n  toggleTimeline: () => void\n}\n\nexport const TransactionListAppBar = (props: Prop) => {\n  const showNewTransactionForm = () => {\n    props.showForm('transaction')\n  }\n\n  const showNewStatementForm = () => {\n    props.showForm('statement')\n  }\n\n  const showWaveImportForm = () => {\n    props.showForm('wave')\n  }\n\n  const toggleTimeline = () => {\n    props.toggleTimeline()\n  }\n\n  return (\n    <AppBar position=\"static\" color=\"default\">\n      <Toolbar>\n        <Tooltip title=\"Timeline\">\n          <IconButton onClick={toggleTimeline}>\n            <History />\n          </IconButton>\n        </Tooltip>\n        {props.balance ? (\n          <Typography variant=\"body1\" key=\"balance\">{`Balance: $${props.balance}`}</Typography>\n        ) : null}\n        <div style={{ flex: 1 }} />\n        <SearchBar />\n        <IconMenu icon={<Add />}>\n          <MenuItem key=\"new-transaction-menu\" onClick={showNewTransactionForm}>\n            <ListItemIcon>\n              <AttachMoney />\n            </ListItemIcon>\n            <ListItemText>Transaction</ListItemText>\n          </MenuItem>\n          <MenuItem key=\"new-statement-menu\" onClick={showNewStatementForm}>\n            <ListItemIcon>\n              <CreditCard />\n            </ListItemIcon>\n            <ListItemText>Statement</ListItemText>\n          </MenuItem>\n          <MenuItem key=\"new-wave-menu\" onClick={showWaveImportForm}>\n            <ListItemIcon>\n              <Waves color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText>Wave Import</ListItemText>\n          </MenuItem>\n        </IconMenu>\n        <IconButton\n          onClick={() => {\n            sessionStorage.removeItem('authToken')\n            window.location.href = '/'\n          }}\n        >\n          <Icon className=\"material-icons\">exit_to_app</Icon>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import * as React from 'react'\n\nimport { Grid, IconButton } from '@material-ui/core'\nimport { Check, Close } from '@material-ui/icons'\nimport { GetTransactions_transactions_prediction as IPrediction } from '@src/queries/__generated__/GetTransactions.hooks'\n\ninterface SmartCatProp {\n  prediction: IPrediction\n  onAccept: () => void\n}\nexport const SmartCatField: React.FC<SmartCatProp> = (props) => {\n  const { prediction, onAccept } = props\n  const split = prediction.split ? 'Split ' : ''\n  return (\n    <div style={{ color: 'rgb(0, 188, 212)', fontWeight: 'bold' }}>\n      {`${split}${prediction.categoryName}?`}\n      <Grid container>\n        <Grid item xs={12} sm={1}>\n          <IconButton onClick={() => onAccept()}>\n            <Check color=\"primary\" />\n          </IconButton>\n        </Grid>\n        <Grid item xs={12} sm={1}>\n          <IconButton\n            onClick={() => {\n              // Do nothing because the Transaction row will be focused and enter edit mode\n            }}\n          >\n            <Close color=\"secondary\" />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import * as React from 'react'\n\nimport { useMutation } from '@apollo/react-hooks'\nimport { DialogSelect } from '@src/components/DialogSelect'\n\nimport {\n  GetTransactions_categories as ICategory,\n  GetTransactions_transactions as IUserTransaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\n\nimport {\n  QUERY as MUTATION,\n  UpdateTransaction,\n  UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction.hooks'\n\ninterface CategoryFieldProp {\n  transaction: IUserTransaction\n  selectableCategories: Array<ICategory>\n}\n\nexport const CategoryField: React.FC<CategoryFieldProp> = (props) => {\n  const { selectableCategories, transaction } = props\n  const [updateTransaction, { loading }] = useMutation<\n    UpdateTransaction,\n    UpdateTransactionVariables\n  >(MUTATION)\n  if (!selectableCategories.length) return <div></div>\n  if (loading) return <div>updating...</div>\n\n  return (\n    <DialogSelect\n      value={transaction.categoryId || null}\n      onSelectOption={(option) => {\n        updateTransaction({\n          variables: { id: transaction.id, categoryId: option.value },\n        })\n      }}\n      choices={selectableCategories.map((cat) => {\n        return {\n          value: cat.id,\n          label: cat.description,\n          mui_icon_id: cat.mui_icon_id || '',\n        }\n      })}\n    />\n  )\n}\n","import * as React from 'react'\nimport * as _ from 'lodash'\nimport { TextField } from '@material-ui/core'\n\ninterface IDebouncedTextField {\n  helperText?: string\n  onBounce: (newValue) => void\n  setter: (newValue) => void\n  type?: string\n  value?: any\n  loading?: boolean\n}\n\nexport const DebouncedTextField: React.FunctionComponent<IDebouncedTextField> = ({\n  helperText,\n  setter,\n  onBounce,\n  type,\n  value,\n  loading,\n}) => {\n  const debounced = React.useCallback(_.debounce(onBounce, 1000), [])\n\n  return (\n    <TextField\n      error={!!loading}\n      helperText={loading ? 'saving ...' : helperText}\n      type={type}\n      onChange={(event) => {\n        setter(event.target.value)\n        debounced(event.target.value)\n      }}\n      value={value}\n    />\n  )\n}\n","import * as React from 'react'\nimport { Icon } from '@material-ui/core'\n\nexport class PlaidIcon extends React.Component<{}> {\n  render() {\n    return (\n      <Icon style={{ color: 'blue', float: 'left' }} className=\"material-icons\">\n        grid_on\n      </Icon>\n    )\n  }\n}\n","import {\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Fab,\n  Grid,\n  Icon,\n  Tooltip,\n  Typography,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\nimport { useMutation } from '@apollo/react-hooks'\nimport * as _ from 'lodash'\nimport JSONTree from 'react-json-tree'\nimport * as React from 'react'\nimport { SmartCatField } from './SmartCatField'\nimport { CategoryField } from './CategoryField'\nimport {\n  QUERY as MUTATION,\n  UpdateTransaction,\n  UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction.hooks'\nimport {\n  QUERY as GET_TRANSACTIONS_QUERY,\n  GetTransactions,\n  GetTransactions_categories,\n  GetTransactions_transactions as GetTransactions_transaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\nimport { DebouncedTextField } from '@src/components/DebouncedTextField'\nimport { formatDate } from '@src/utils'\n\nimport {\n  QUERY as ARCHIVE_TRANSACTION_MUTATION,\n  ArchiveTransaction,\n  ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction.hooks'\nimport { PlaidIcon } from '@src/components/icons'\n\ninterface ITransactionRowProps {\n  transaction: GetTransactions_transaction\n  user_id: number\n  expanded: boolean\n  selectableCategories: Array<GetTransactions_categories>\n  onToggleExpansion: (event, expanded) => void\n}\n\nexport const CategoryInfoField = (props: {\n  transaction: GetTransactions_transaction\n  category: GetTransactions_categories | null\n  user_id: number\n  onAccept: (arg: { id: number; category_id: number; balance_adjust: string }) => void\n}) => {\n  const { transaction, category, onAccept } = props\n  const prediction = transaction.prediction\n  const multiplier = props.user_id === transaction.lenderId ? 1 : -1\n  if (!transaction.categoryId && prediction) {\n    return (\n      <SmartCatField\n        prediction={prediction}\n        onAccept={() =>\n          onAccept({\n            id: transaction.id,\n            category_id: prediction.categoryId,\n            balance_adjust: prediction.split\n              ? ((multiplier * parseFloat(transaction.totalAmount)) / 2).toString()\n              : '0',\n          })\n        }\n      />\n    )\n  }\n  return (\n    <Grid container spacing={10}>\n      <Grid item xs={1}>\n        <Icon className=\"material-icons\">{category ? category.mui_icon_id : null}</Icon>\n      </Grid>\n      <Grid item xs>\n        {category ? <Typography color=\"textSecondary\">{category.description}</Typography> : null}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport const TransactionRowComponent = (props: ITransactionRowProps) => {\n  const { user_id, selectableCategories, transaction, expanded, onToggleExpansion } = props\n  const [balanceAdjust, setBalanceAdjust] = React.useState(transaction.balanceAdjust)\n  const [notes, setNotes] = React.useState(transaction.notes)\n  console.log('render row')\n\n  const [updateTransaction, { loading }] = useMutation<\n    UpdateTransaction,\n    UpdateTransactionVariables\n  >(MUTATION)\n  const [archiveTransaction] = useMutation<ArchiveTransaction, ArchiveTransactionVariables>(\n    ARCHIVE_TRANSACTION_MUTATION,\n    {\n      update(cache, { data }) {\n        if (data?.archiveTransaction?.isOk) {\n          const cached = cache.readQuery<GetTransactions>({ query: GET_TRANSACTIONS_QUERY })\n          const removed = [...cached!.transactions]\n          _.remove(removed, (t) => t.id === transaction.id)\n          cache.writeQuery({\n            query: GET_TRANSACTIONS_QUERY,\n            data: Object.assign({}, cached, { transactions: removed }),\n          })\n        }\n      },\n    },\n  )\n\n  const onAcceptSmartCat = (fields: {\n    id: number\n    category_id: number\n    balance_adjust: string\n  }) => {\n    updateTransaction({\n      variables: {\n        id: transaction.id,\n        categoryId: fields.category_id,\n        balanceAdjust: fields.balance_adjust,\n      },\n    })\n  }\n  const getCategory = () => {\n    if (!transaction.categoryId) return null\n    return selectableCategories.find((c) => c.id === transaction.categoryId) || null\n  }\n  return (\n    <div>\n      <ExpansionPanel\n        disabled={!transaction.editable}\n        expanded={expanded}\n        onChange={onToggleExpansion}\n      >\n        <ExpansionPanelSummary>\n          <Grid container spacing={10}>\n            <Grid item xs={3} sm={4}>\n              <Typography>{formatDate(transaction.issuedDate)}</Typography>\n              {expanded ? null : (\n                <CategoryInfoField\n                  user_id={user_id}\n                  transaction={transaction}\n                  category={getCategory()}\n                  onAccept={onAcceptSmartCat}\n                />\n              )}\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              {transaction.originPayload ? (\n                <Tooltip\n                  title={\n                    <JSONTree shouldExpandNode={() => true} data={transaction.originPayload} />\n                  }\n                >\n                  {transaction.originPayload.__typename === 'IWaveTransaction' ? (\n                    <Icon style={{ color: 'blue', float: 'left' }} className=\"material-icons\">\n                      waves\n                    </Icon>\n                  ) : (\n                    <PlaidIcon />\n                  )}\n                </Tooltip>\n              ) : null}\n              <Typography variant=\"body1\">{transaction.merchantName}</Typography>\n              <div>\n                <Typography color=\"textSecondary\">{transaction.accountName}</Typography>\n                <Typography color=\"textSecondary\">{transaction.plaidCategory}</Typography>\n                <Typography color=\"textSecondary\">{transaction.notes}</Typography>\n              </div>\n            </Grid>\n            <Grid item xs={3} sm={4} style={{ paddingLeft: '40px' }}>\n              <Typography>{`$${transaction.totalAmount}`}</Typography>\n              {+transaction.balanceAdjust && !expanded ? (\n                <Typography\n                  style={{\n                    color: +transaction.balanceAdjust > 0 ? 'green' : 'red',\n                  }}\n                >\n                  {`$${transaction.balanceAdjust}`}\n                </Typography>\n              ) : null}\n            </Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Grid container spacing={10}>\n            <Grid item xs={6} sm={4}>\n              <DebouncedTextField\n                loading={loading}\n                helperText={'notes'}\n                value={notes}\n                setter={(newValue) => {\n                  setNotes(newValue)\n                }}\n                onBounce={(newValue) =>\n                  updateTransaction({\n                    variables: { id: transaction.id, notes: newValue },\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <CategoryField\n                transaction={transaction}\n                selectableCategories={selectableCategories}\n              />\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <DebouncedTextField\n                type=\"number\"\n                loading={loading}\n                helperText=\"Balance Adjust\"\n                value={balanceAdjust}\n                setter={setBalanceAdjust}\n                onBounce={(newValue) => {\n                  updateTransaction({\n                    variables: { id: transaction.id, balanceAdjust: newValue },\n                  })\n                }}\n              />\n            </Grid>\n            <Grid item xs={6} sm={1} style={{ textAlign: 'right' }}>\n              <Fab\n                size=\"medium\"\n                color=\"secondary\"\n                aria-label=\"Delete\"\n                onClick={() =>\n                  archiveTransaction({\n                    variables: {\n                      id: transaction.id,\n                    },\n                  })\n                }\n              >\n                <Delete />\n              </Fab>\n            </Grid>\n          </Grid>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  )\n}\nconst areEqual = (last: ITransactionRowProps, next: ITransactionRowProps) => {\n  if (\n    _.isEqual(last.transaction, next.transaction) &&\n    last.expanded === next.expanded &&\n    last.selectableCategories.length === next.selectableCategories.length\n  ) {\n    return true\n  }\n  return false\n}\nconst TransactionRow = React.memo(TransactionRowComponent, areEqual)\n\n/*\n * This is a wrapper component that is used to control the expansion states of\n * the rows. We do not want a compolicated component to manage the expansion\n * state becaue the rerending will be too expensive.\n */\nexport const TransactionRows: React.FC<{\n  categories: Array<GetTransactions_categories>\n  transactions: Array<GetTransactions_transaction>\n}> = (props) => {\n  const [expanded, setExpanded] = React.useState<number | null>(null)\n  const handleChange = (eventId: number) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n    setExpanded(eventId)\n  }\n  return (\n    <>\n      {props.transactions.map((t) => {\n        return (\n          <TransactionRow\n            user_id={1}\n            selectableCategories={props.categories}\n            expanded={expanded === t.id}\n            key={t.id}\n            transaction={t}\n            onToggleExpansion={handleChange(t.id)}\n          />\n        )\n      })}\n    </>\n  )\n}\n","import * as React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport {\n  ListItemSecondaryAction,\n  ButtonGroup,\n  Button,\n  Tooltip,\n  Icon,\n  ListItemIcon,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@material-ui/core'\nimport { getEventButtonIcon, getEventIcon, getEventDescription } from './utils'\nimport { IEvent, ICheckPoint } from './types'\nimport {\n  QUERY as SIGN_CHECKPOINT_MUTATION,\n  SignCheckpoint,\n  SignCheckpointVariables,\n} from '@src/queries/__generated__/SignCheckpoint.hooks'\nimport { BASE_URL } from '@src/actions'\nimport { UrlStateContext } from '@src/Root/contexts'\nimport { EventType, UrlPathEnum } from '@src/types'\nimport { pushHistory } from '@src/history'\n\nexport const EventRow = (props: {\n  onFilterEvent: (string) => void\n  authToken: string\n  event: IEvent\n}) => {\n  const urlState = React.useContext(UrlStateContext)\n\n  const { event } = props\n  const disabled = urlState.event_id === `${event.eventType}-${event.id}`\n  if (event.eventType === EventType.CHECKPOINT) {\n    return (\n      <CheckpointListItem\n        onFilterEvent={props.onFilterEvent}\n        authToken={props.authToken}\n        disabled={disabled}\n        checkpoint={event as ICheckPoint}\n      />\n    )\n  }\n  const eventIcon = getEventIcon(event)\n  const onFilter = (e) => {\n    props.onFilterEvent(`${event.eventType}-${event.id}`)\n    pushHistory(UrlPathEnum.TransactionList, {\n      event_id: `${event.eventType}-${event.id}`,\n    })\n  }\n  const eventButtonIcon = getEventButtonIcon(event)\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilter}>\n      <ListItemIcon>\n        <Tooltip title={event.eventType || ''}>\n          <Icon color=\"primary\">{eventIcon}</Icon>\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(event.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{getEventDescription(event)}</Typography>\n      </ListItemText>\n      {eventButtonIcon ? (\n        <ListItemSecondaryAction>\n          <Button>\n            <Icon>{eventButtonIcon}</Icon>\n          </Button>\n        </ListItemSecondaryAction>\n      ) : null}\n    </ListItem>\n  )\n}\n\nexport const CheckpointListItem: React.FC<{\n  authToken: string\n  onFilterEvent: (string) => void\n  disabled: boolean\n  checkpoint: ICheckPoint\n}> = ({ onFilterEvent, authToken, checkpoint, disabled }) => {\n  const [signCheckpoint, { loading }] = useMutation<SignCheckpoint, SignCheckpointVariables>(\n    SIGN_CHECKPOINT_MUTATION,\n  )\n  const onFilter = (e) => {\n    onFilterEvent(`${checkpoint.eventType}-${checkpoint.id}`)\n    pushHistory(UrlPathEnum.TransactionList, {\n      event_id: `${checkpoint.eventType}-${checkpoint.id}`,\n    })\n  }\n  const description = checkpoint.signedTs\n    ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n        checkpoint.signedTs,\n      ).toLocaleDateString()}`\n    : 'Not Signed'\n\n  if (loading) {\n    return <div>Signing ...</div>\n  }\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilter}>\n      <ListItemIcon>\n        <Tooltip title={checkpoint.eventType || ''}>\n          {checkpoint.signedTs ? (\n            <Icon color=\"primary\">toll</Icon>\n          ) : (\n            <Icon style={{ color: 'green' }}>fiber_new</Icon>\n          )}\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(checkpoint.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{description}</Typography>\n      </ListItemText>\n      <ListItemSecondaryAction>\n        <ButtonGroup\n          color=\"secondary\"\n          variant=\"contained\"\n          size=\"small\"\n          aria-label=\"Small outlined button group\"\n        >\n          {checkpoint.signedTs ? null : (\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              onClick={() =>\n                signCheckpoint({\n                  variables: {\n                    id: checkpoint.id,\n                  },\n                })\n              }\n            >\n              <Icon>plus_one</Icon>\n            </Button>\n          )}\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            disabled={!sessionStorage.getItem('authToken')}\n            onClick={() => {\n              window.open(\n                `${BASE_URL}/RAHoliCy/checkpoint/${checkpoint.id}?token=${sessionStorage.getItem(\n                  'authToken',\n                )}`,\n                '_blank',\n              )\n            }}\n          >\n            <Icon>cloud_download</Icon>\n          </Button>\n        </ButtonGroup>\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n}\n","import { IStatement, IImportBatch, ICheckPoint, IEvent } from './types'\nimport { EventType } from '@src/types'\n\nexport const getEventDescription = (e: IEvent) => {\n  if (e.eventType === EventType.CHECKPOINT) {\n    const checkpoint = e as ICheckPoint\n    return checkpoint.signedTs\n      ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n          checkpoint.signedTs,\n        ).toLocaleDateString()}`\n      : 'Not Signed'\n  }\n  if (e.eventType === EventType.BATCH_IMPORT) {\n    const batch_import = e as IImportBatch\n    return `${batch_import.origin}: ${batch_import.startDate.slice(\n      0,\n      10,\n    )} TO ${batch_import.endDate.slice(0, 10)}`\n  }\n  if (e.eventType === EventType.STATEMENT_UPLOAD) {\n    const upload = e as IStatement\n    return `${upload.source}: ${upload.firstDate} TO ${upload.lastDate}`\n  }\n  throw new Error('not possible')\n}\nexport const getEventIcon = (event: IEvent) => {\n  if (event.eventType === EventType.CHECKPOINT) {\n    return 'toll'\n  }\n  if (event.eventType === EventType.BATCH_IMPORT) {\n    const batch_import = event as IImportBatch\n    return { plaid: 'grid_on', wave: 'waves' }[batch_import.origin]\n  }\n  if (event.eventType === EventType.STATEMENT_UPLOAD) {\n    // const upload = memory as IStatement\n    return 'cloud_upload'\n  }\n  throw new Error('not possible')\n}\n\nexport const getEventButtonIcon = (event: IEvent) => {\n  if (event.eventType === EventType.CHECKPOINT) {\n    return 'plus_one'\n  }\n  return null\n}\n","import { LinearProgress, List } from '@material-ui/core'\nimport * as React from 'react'\nimport { EventRow } from './EventRow'\nimport { useApolloQuery } from '@src/queries/__generated__/GetEvents.hooks'\n\ninterface Prop {\n  onFilterEvent: (string) => void\n}\nexport const Timeline: React.FC<Prop> = (props) => {\n  const { loading, error, data } = useApolloQuery()\n  if (loading) return <LinearProgress />\n  if (error) return <p>Error :(</p>\n  if (!data) throw new Error('bad')\n  return (\n    <div>\n      <List>\n        {data.eventList.events.map((e, index) => {\n          return e ? (\n            <EventRow onFilterEvent={props.onFilterEvent} authToken={''} event={e} key={index} />\n          ) : null\n        })}\n      </List>\n    </div>\n  )\n}\n","import { LinearProgress, Button, Grid } from '@material-ui/core'\nimport * as React from 'react'\nimport { ImportForm } from './ImportForm'\nimport { NewStatementForm } from './NewStatementForm'\n\nimport { NewTransactionForm } from './NewTransactionForm'\nimport { TransactionListAppBar } from './TransactionListAppBar'\nimport { TransactionRows } from './TransactionRow'\nimport { useApolloQuery } from '@src/queries/__generated__/GetTransactions.hooks'\nimport { Timeline } from '@src/Root/Timeline'\n\ntype FormType = 'transaction' | 'plaid' | 'statement' | 'wave'\n\nconst limit = 40\n\nexport const TransactionList = (props: {}) => {\n  console.log('rerender entire list page')\n  const [showTimeline, setShowTimeline] = React.useState(true)\n  const [formType, setFormType] = React.useState<FormType | null>(null)\n\n  const { loading, error, data, fetchMore, refetch } = useApolloQuery({\n    variables: {\n      filters: {\n        offset: 0,\n        limit,\n      },\n    },\n  })\n  if (error) {\n    return <div>error ...</div>\n  }\n\n  if (loading || !data) return <LinearProgress />\n  const loadMoreTransactions = () => {\n    fetchMore({\n      variables: { filters: { offset: data.transactions.length, limit } },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev\n        return Object.assign({}, prev, {\n          transactions: [...prev.transactions, ...fetchMoreResult.transactions],\n        })\n      },\n    })\n  }\n\n  const showForm = (formType: FormType) => {\n    setFormType(formType)\n  }\n  return (\n    <div style={{ maxWidth: '100%' }}>\n      <TransactionListAppBar\n        toggleTimeline={() => setShowTimeline(true)}\n        showForm={showForm}\n        balance={data.balance}\n      />\n      <div\n        style={{\n          height: window.innerHeight - 70,\n          overflow: 'scroll',\n        }}\n      >\n        <Grid container>\n          {showTimeline ? (\n            <Grid item sm={3}>\n              <Timeline\n                onFilterEvent={(eventId: string) =>\n                  refetch({\n                    filters: { offset: 0, limit, eventId },\n                  })\n                }\n              />\n            </Grid>\n          ) : null}\n          <Grid item sm={showTimeline ? 9 : 12}>\n            <div style={{ marginBottom: '20px' }}>\n              {formType === 'transaction' ? (\n                <NewTransactionForm\n                  selectableCategories={data.categories}\n                  onClose={() => setFormType(null)}\n                />\n              ) : null}\n              {formType === 'statement' ? (\n                <NewStatementForm onClose={() => setFormType(null)} />\n              ) : null}\n              {formType === 'wave' ? <ImportForm onClose={() => setFormType(null)} /> : null}\n            </div>\n            {loading ? (\n              <div>loading transactions ... </div>\n            ) : (\n              <TransactionRows categories={data.categories} transactions={data.transactions} />\n            )}\n            <Button fullWidth size=\"large\" color=\"secondary\" onClick={loadMoreTransactions}>\n              ({data.transactions.length}) Click to Load More ...\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  )\n}\n","import { Typography, Icon, ListItemIcon, Select, MenuItem } from '@material-ui/core'\nimport * as React from 'react'\n\ninterface IIconSelect {\n  initialValue: string | null\n  onChange: (event, child) => void\n  /*\n  options: Array<{\n    value: number | string\n    label: string\n  }>\n   */\n}\nconst ICON_IDS = [\n  'attach_money',\n  'beach_access',\n  'cake',\n  'compare_arrows',\n  'free_breakfast',\n  'gavel',\n  'home',\n  'local_activity',\n  'local_bar',\n  'local_car_wash',\n  'local_gas_station',\n  'local_grocery_store',\n  'local_hospital',\n  'local_parking',\n  'local_taxi',\n  'motorcycle',\n  'movie',\n  'not_interested',\n  'perm_scan_wifi',\n  'phone_iphone',\n  'power',\n  'help',\n  'restaurant',\n  'rowing',\n  'school',\n  'settings_input_component',\n  'settings_input_hdmi',\n  'shopping_basket',\n  'subway',\n  'theaters',\n  'pets',\n]\nexport const IconSelect: React.FC<IIconSelect> = ({ initialValue, onChange }) => {\n  return (\n    <Select onChange={onChange} value={initialValue}>\n      {ICON_IDS.map((iconId) => (\n        <MenuItem key={iconId} value={iconId}>\n          <ListItemIcon>\n            <Icon color=\"primary\">{iconId}</Icon>\n          </ListItemIcon>\n          <Typography style={{ float: 'right' }}>{iconId}</Typography>\n        </MenuItem>\n      ))}\n    </Select>\n  )\n}\n","import * as React from 'react'\n\nimport {\n  makeStyles,\n  TextField,\n  ListItemSecondaryAction,\n  IconButton,\n  Theme,\n  createStyles,\n  Icon,\n  ListItemIcon,\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core'\nimport { ExpandMore, ExpandLess } from '@material-ui/icons'\nimport { IconSelect } from '@src/components/IconSelect'\n\nimport { ITreeNode } from '@src/types'\n\ninterface ITreeProps {\n  node: ITreeNode\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n  level?: number\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    node: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n)\n\nexport const Tree: React.FC<ITreeProps> = (props) => {\n  const { node, level = 0, onSelectIcon, onSaveNode } = props\n  const classes = useStyles()\n\n  const [open, setOpen] = React.useState(true)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n  return (\n    <List component=\"nav\" className={classes.node}>\n      <ListItem button onClick={handleClick} style={{ paddingLeft: `${32 * level}px` }}>\n        <ListItemIcon>\n          <Icon color=\"secondary\">{node.mui_icon_id}</Icon>\n        </ListItemIcon>\n        <ListItemText primary={node.name}></ListItemText>\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {node.children.map((child) =>\n            child.children.length ? (\n              <Tree\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ) : (\n              <NodeListItem\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ),\n          )}\n        </List>\n      </Collapse>\n    </List>\n  )\n}\n\nconst NodeListItem: React.FC<{\n  node: ITreeNode\n  level: number\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n}> = ({ node, level, onSaveNode, onSelectIcon }) => {\n  const [editable, setEditable] = React.useState(false)\n  const [pickingIcon, setPickingIcon] = React.useState(false)\n  const [nodeName, setNodeName] = React.useState(node.name)\n  const [iconId, setIconId] = React.useState(node.mui_icon_id)\n  return (\n    <>\n      <ListItem\n        key={node.id}\n        dense\n        button\n        role={undefined}\n        style={{ paddingLeft: `${32 * (level + 1)}px` }}\n      >\n        {editable ? (\n          <TextField\n            autoFocus={true}\n            value={nodeName}\n            onChange={(event) => setNodeName(event.target.value)}\n            onBlur={() => {\n              setEditable(false)\n              onSaveNode(node.id, nodeName)\n            }}\n          />\n        ) : (\n          <>\n            {pickingIcon ? (\n              <IconSelect\n                onChange={(e, child) => {\n                  onSelectIcon(node.id, e.target.value)\n                  setIconId(e.target.value)\n                  setPickingIcon(false)\n                }}\n                initialValue={iconId}\n              ></IconSelect>\n            ) : (\n              <ListItemText onClick={() => setEditable(true)} primary={nodeName}></ListItemText>\n            )}\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => setPickingIcon(true)} edge=\"end\">\n                <Icon color=\"primary\">{iconId}</Icon>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </>\n        )}\n      </ListItem>\n    </>\n  )\n}\n","import * as React from 'react'\nimport { Tree } from './Tree'\nimport { ButlerContext } from '@src/Root/contexts'\nimport { ITreeNode } from '@src/__generated__/backendSchemas'\n\nexport const CategoryPage: React.FC<{}> = (props) => {\n  const butler = React.useContext(ButlerContext)\n  const [root, setRoot] = React.useState<ITreeNode | null>(null)\n  React.useEffect(() => {\n    if (!root) {\n      butler.TreefyCategories({}, 'replace', (data) => {\n        setRoot(data.root)\n      })\n    }\n  })\n  if (!root) {\n    return <div></div>\n  }\n  return (\n    <Tree\n      onSaveNode={(id: number, name: string) => butler.UpdateCategory({ id, name }, 'do-nothing')}\n      onSelectIcon={(id: number, iconId: string) =>\n        butler.UpdateCategory({ id, mui_icon_id: iconId }, 'do-nothing')\n      }\n      node={root}\n    />\n  )\n}\n","import { createBrowserHistory } from 'history'\nimport { UrlPathEnum } from '@src/types'\n\nexport const history = createBrowserHistory()\nexport const pushHistory = (\n  pathname: UrlPathEnum,\n  urlState?: {} | null,\n  state: {} | null = null,\n) => {\n  const searchString =\n    urlState && urlState && Object.keys(urlState).length\n      ? '?urlState=' + JSON.stringify(urlState)\n      : ''\n  return history.push({\n    pathname,\n    search: searchString,\n    state,\n  })\n}\n\nexport const getPathName = () => {\n  const path = history.location.pathname\n  return path.endsWith('/') ? path.slice(0, path.length - 1) || '/' : path\n}\n","import { List, ListItem, ListItemText } from '@material-ui/core'\nimport { Route, Switch } from 'react-router'\nimport * as React from 'react'\nimport { hot } from 'react-hot-loader'\nimport { ApolloProvider } from '@apollo/react-hooks'\n\nimport { connect } from 'react-redux'\nimport { UrlStateContext } from './contexts'\nimport { CategoryPage } from '@src/CategoryPage'\nimport { UrlPathEnum } from '@src/types'\nimport { getPathName, pushHistory } from '@src/history'\nimport { LoginPage } from '@src/LoginPage'\nimport { TransactionChart } from '@src/TransactionChart'\nimport { parseUrlState } from '@src/selectors'\nimport { TransactionList } from '@src/TransactionList'\nimport { client } from '@src/gqlClient'\n\ninterface StateProps {\n  isAuthenticated: boolean\n  urlState: any\n}\n\ntype Prop = StateProps\n\nconst RootComponent: React.FC<Prop> = (props) => {\n  return (\n    <div style={{ maxWidth: '100%', flex: 8 }}>\n      <UrlStateContext.Provider value={props.urlState}>\n        <Body isAuthenticated={props.isAuthenticated} />\n      </UrlStateContext.Provider>\n    </div>\n  )\n}\n\nexport const Root = connect<StateProps, null>((state, ownProps) => {\n  return {\n    isAuthenticated: !!sessionStorage.getItem('authToken'),\n    urlState: parseUrlState(),\n    state,\n  }\n}, null)(RootComponent)\n\nconst PageList: React.FC = () => {\n  const UrlPathsMap = {\n    TransactionList,\n    TransactionChart,\n    CategoryPage,\n  }\n  return (\n    <List>\n      {Object.keys(UrlPathsMap).map((c, index) => {\n        return (\n          <ListItem key={index} button onClick={() => pushHistory(c as UrlPathEnum)}>\n            <ListItemText primary={c} />\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n\nclass Body extends React.Component<{ isAuthenticated: boolean }> {\n  render() {\n    if (getPathName() === UrlPathEnum.LoginPage) {\n      return <LoginPage />\n    }\n    if (!this.props.isAuthenticated) {\n      console.warn('not authenticated!!!')\n      pushHistory(UrlPathEnum.LoginPage)\n      return <div />\n    }\n    if (getPathName() === '/goTIOnaTErYeRsUraYhOMEO' || getPathName() === UrlPathEnum.Root) {\n      return <PageList />\n    }\n    if (getPathName() === UrlPathEnum.TransactionList) {\n      return <TransactionList />\n    }\n    if (getPathName() === UrlPathEnum.TransactionChart) {\n      return <TransactionChart />\n    }\n    if (getPathName() === UrlPathEnum.CategoryPage) {\n      return <CategoryPage />\n    }\n\n    throw new Error(`Invalid paths: ${getPathName()}`)\n  }\n}\nexport const App = hot(module)(() => (\n  <ApolloProvider client={client}>\n    <Switch>\n      <Route path=\"/\" component={Root} />\n    </Switch>\n  </ApolloProvider>\n))\n","import { Button } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport * as React from 'react'\n\nimport { pushHistory } from '@src/history'\nimport { UrlPathEnum } from '@src/types'\nimport { BASE_URL } from '@src/actions'\n\nexport const LoginPage = (props) => {\n  const [username, setUsername] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const [errorMessage, setErrorMessage] = React.useState(null)\n  const submitLogin = () => {\n    fetch(`${BASE_URL}/goTIOnaTErYeRsUraYhOMEO/login`, {\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.code === 200) {\n          sessionStorage.setItem('authToken', data.token)\n          // Redirect to root\n          pushHistory(UrlPathEnum.Root)\n        } else {\n          console.error(data)\n          setErrorMessage(data.message)\n        }\n      })\n  }\n  return (\n    <div\n      style={{\n        height: `${window.innerHeight}px`,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <TextField label=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n      <br />\n      <TextField\n        error={!!errorMessage}\n        helperText={errorMessage || ''}\n        onChange={(e) => setPassword(e.target.value)}\n        type=\"password\"\n        label=\"Password\"\n        onKeyPress={(e) => {\n          if (e.charCode == 13) {\n            submitLogin()\n          }\n        }}\n      />\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={() => submitLogin()}>\n        Login\n      </Button>\n    </div>\n  )\n}\n","import querystring from 'querystring'\nimport { history } from '@src/history'\n\nexport function parseUrlState() {\n  const params = parseSearch()\n  if (params && params.urlState) {\n    return JSON.parse(params.urlState as string)\n  }\n  return {}\n}\nexport function parseSearch() {\n  return querystring.parse(history.location.search.split('?')[1])\n}\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  ImportWaveTransactions,\n  ImportWaveTransactionsVariables,\n} from '@src/queries/__generated__/ImportWaveTransactions'\nimport ImportWaveTransactions__QUERY from '@src/queries/ImportWaveTransactions.graphql'\n\nexport * from '@src/queries/__generated__/ImportWaveTransactions'\n\nexport const QUERY = ImportWaveTransactions__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ImportWaveTransactions, ImportWaveTransactionsVariables>,\n) {\n  return useMutation<ImportWaveTransactions, ImportWaveTransactionsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ImportWaveTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"importFromWave\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalAmount\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issuedDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpointId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"statementId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"plaidCategory\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"editable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"originPayload\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"accountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"prediction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"split\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":555}};\n    doc.loc.source = {\"body\":\"mutation ImportWaveTransactions($startDate: String!, $endDate: String!) {\\n  importFromWave(startDate: $startDate, endDate: $endDate) {\\n    isOk\\n    transactions {\\n      id\\n      lenderId\\n      totalAmount\\n      issuedDate\\n      notes\\n      categoryId\\n      checkpointId\\n      statementId\\n      merchantName\\n      balanceAdjust\\n      createdById\\n      lenderId\\n      plaidCategory\\n      editable\\n      originPayload {\\n        __typename\\n      }\\n      accountName\\n      prediction {\\n        categoryId\\n        categoryName\\n        split\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"ImportWaveTransactions\"] = oneQuery(doc, \"ImportWaveTransactions\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"TransactionFilters\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalAmount\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issuedDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpointId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"statementId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"plaidCategory\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"editable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"originPayload\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IWaveTransaction\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"anchorAccountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"dateCreated\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"direction\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionDescription\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionAmount\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"accountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"prediction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"split\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"parent_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"mui_icon_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_selectable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":761}};\n    doc.loc.source = {\"body\":\"query GetTransactions($filters: TransactionFilters!) {\\n  balance\\n  transactions(filters: $filters) {\\n    id\\n    lenderId\\n    totalAmount\\n    issuedDate\\n    notes\\n    categoryId\\n    checkpointId\\n    statementId\\n    merchantName\\n    balanceAdjust\\n    createdById\\n    lenderId\\n    plaidCategory\\n    editable\\n    originPayload {\\n      __typename\\n      ... on IWaveTransaction {\\n        anchorAccountName\\n        dateCreated\\n        direction\\n        transactionDescription\\n        transactionDate\\n        transactionId\\n        transactionAmount\\n      }\\n    }\\n    accountName\\n    prediction {\\n      categoryId\\n      categoryName\\n      split\\n    }\\n  }\\n  categories {\\n    id\\n    description\\n    name\\n    parent_id\\n    mui_icon_id\\n    is_selectable\\n    is_active\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetTransactions\"] = oneQuery(doc, \"GetTransactions\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  CreateTransaction,\n  CreateTransactionVariables,\n} from '@src/queries/__generated__/CreateTransaction'\nimport CreateTransaction__QUERY from '@src/queries/CreateTransaction.graphql'\n\nexport * from '@src/queries/__generated__/CreateTransaction'\n\nexport const QUERY = CreateTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<CreateTransaction, CreateTransactionVariables>,\n) {\n  return useMutation<CreateTransaction, CreateTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransactionInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalAmount\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issuedDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpointId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"statementId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"plaidCategory\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"editable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"originPayload\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"accountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"prediction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"split\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":518}};\n    doc.loc.source = {\"body\":\"mutation CreateTransaction($input: CreateTransactionInput!) {\\n  createTransaction(input: $input) {\\n    isOk\\n    transaction {\\n      id\\n      lenderId\\n      totalAmount\\n      issuedDate\\n      notes\\n      categoryId\\n      checkpointId\\n      statementId\\n      merchantName\\n      balanceAdjust\\n      createdById\\n      lenderId\\n      plaidCategory\\n      editable\\n      originPayload {\\n        __typename\\n      }\\n      accountName\\n      prediction {\\n        categoryId\\n        categoryName\\n        split\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"CreateTransaction\"] = oneQuery(doc, \"CreateTransaction\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalAmount\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issuedDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpointId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"statementId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"plaidCategory\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"editable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"originPayload\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"accountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"prediction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"split\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":699}};\n    doc.loc.source = {\"body\":\"mutation UpdateTransaction(\\n  $id: Int!\\n  $categoryId: Int\\n  $notes: String\\n  $merchantName: String\\n  $balanceAdjust: String\\n) {\\n  updateTransaction(\\n    id: $id\\n    categoryId: $categoryId\\n    notes: $notes\\n    balanceAdjust: $balanceAdjust\\n    merchantName: $merchantName\\n  ) {\\n    isOk\\n    transaction {\\n      id\\n      lenderId\\n      totalAmount\\n      issuedDate\\n      notes\\n      categoryId\\n      checkpointId\\n      statementId\\n      merchantName\\n      balanceAdjust\\n      createdById\\n      lenderId\\n      plaidCategory\\n      editable\\n      originPayload {\\n        __typename\\n      }\\n      accountName\\n      prediction {\\n        categoryId\\n        categoryName\\n        split\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"UpdateTransaction\"] = oneQuery(doc, \"UpdateTransaction\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  ArchiveTransaction,\n  ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction'\nimport ArchiveTransaction__QUERY from '@src/queries/ArchiveTransaction.graphql'\n\nexport * from '@src/queries/__generated__/ArchiveTransaction'\n\nexport const QUERY = ArchiveTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ArchiveTransaction, ArchiveTransactionVariables>,\n) {\n  return useMutation<ArchiveTransaction, ArchiveTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ArchiveTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"archiveTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":88}};\n    doc.loc.source = {\"body\":\"mutation ArchiveTransaction($id: Int!) {\\n  archiveTransaction(id: $id) {\\n    isOk\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"ArchiveTransaction\"] = oneQuery(doc, \"ArchiveTransaction\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport { SignCheckpoint, SignCheckpointVariables } from '@src/queries/__generated__/SignCheckpoint'\nimport SignCheckpoint__QUERY from '@src/queries/SignCheckpoint.graphql'\n\nexport * from '@src/queries/__generated__/SignCheckpoint'\n\nexport const QUERY = SignCheckpoint__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<SignCheckpoint, SignCheckpointVariables>,\n) {\n  return useMutation<SignCheckpoint, SignCheckpointVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"SignCheckpoint\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signCheckpoint\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpoint\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBy\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"groupId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":176}};\n    doc.loc.source = {\"body\":\"mutation SignCheckpoint($id: Int!) {\\n  signCheckpoint(id: $id) {\\n    isOk\\n    checkpoint {\\n      id\\n      signedTs\\n      signedBy\\n      groupId\\n      signedBalance\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"SignCheckpoint\"] = oneQuery(doc, \"SignCheckpoint\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport { GetEvents } from '@src/queries/__generated__/GetEvents'\nimport GetEvents__QUERY from '@src/queries/GetEvents.graphql'\n\nexport * from '@src/queries/__generated__/GetEvents'\n\nexport const QUERY = GetEvents__QUERY\nexport type GetEventsVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(options?: QueryHookOptions<GetEvents, GetEventsVariables>) {\n  return useQuery<GetEvents, GetEventsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetEvents\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventList\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"events\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ICheckPoint\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IImportBatch\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"origin\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IStatement\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"firstDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lastDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"source\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":441}};\n    doc.loc.source = {\"body\":\"query GetEvents {\\n  eventList {\\n    events {\\n      ... on ICheckPoint {\\n        id\\n        eventType\\n        createdTs\\n        signedTs\\n        signedBalance\\n      }\\n      ... on IImportBatch {\\n        id\\n        eventType\\n        createdTs\\n        origin\\n        startDate\\n        endDate\\n      }\\n      ... on IStatement {\\n        id\\n        eventType\\n        createdTs\\n        firstDate\\n        lastDate\\n        source\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetEvents\"] = oneQuery(doc, \"GetEvents\");\n        \n","import { InMemoryCache, IntrospectionFragmentMatcher } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n\nimport { ApolloClient as AC } from 'apollo-client'\nimport { concat } from 'apollo-link'\nimport { onError } from 'apollo-link-error'\nimport { HttpLink } from 'apollo-link-http'\nimport { BASE_URL } from '@src/actions'\n\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\n  introspectionQueryResultData: {\n    __schema: {\n      types: [],\n    },\n  },\n})\n\nexport const errorLink = onError(({ graphQLErrors, networkError }) => {\n  // NO-op for now\n  if (graphQLErrors)\n    graphQLErrors.forEach((gqlError) => {\n      if (gqlError.extensions && gqlError.extensions.code == '401') {\n        window.location.href = '/LoginPage'\n        console.error('Authenticated')\n      }\n    })\n\n  if (networkError) console.error(`[Network error]: ${networkError}`)\n})\n\nconst getLink = () => {\n  return concat(authLink, errorLink).concat(\n    new HttpLink({\n      uri: `${BASE_URL}/RAHoliCy/graphql`,\n      headers: {\n        authorization: `Bearer ${sessionStorage.getItem('authToken')}`,\n      },\n    }),\n  )\n}\nconst authLink = setContext((_, { headers }) => {\n  const token = sessionStorage.getItem('authToken')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  }\n})\n\nexport const client = new AC({\n  link: getLink(),\n  cache: new InMemoryCache({\n    fragmentMatcher,\n  }),\n})\n","import * as _ from 'lodash'\nimport { combineReducers } from 'redux'\n\nexport const initialState = {}\n\nfunction createReducer(initialState, handlers) {\n  return function reducer(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action)\n    } else {\n      return state\n    }\n  }\n}\n\nconst snacks = createReducer([], {\n  EAT_SNACK: (snacks) => [...snacks.slice(1)],\n  ADD_SNACK: (snacks, action) => [...snacks, action.snack],\n})\n\nconst reducers = combineReducers({\n  snacks,\n})\n\nexport default reducers\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport { Router } from 'react-router'\nimport { history } from './history'\n\nimport { configureStore } from './configureStore'\nimport { App } from '@src/Root'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n)\n","import { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nexport const configureStore = (initialState?) => {\n  let middleware = applyMiddleware(thunk, logger())\n  if (process.env.NODE_ENV !== 'production') {\n    middleware = composeWithDevTools(middleware)\n  }\n  const store = createStore(reducers, initialState, middleware)\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers')\n      store.replaceReducer(nextReducer)\n    })\n  }\n  return store\n}\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport {\n  GetTransactions,\n  GetTransactionsVariables,\n} from '@src/queries/__generated__/GetTransactions'\nimport GetTransactions__QUERY from '@src/queries/GetTransactions.graphql'\n\nexport * from '@src/queries/__generated__/GetTransactions'\n\nexport const QUERY = GetTransactions__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetTransactions, GetTransactionsVariables>,\n) {\n  return useQuery<GetTransactions, GetTransactionsVariables>(QUERY, options)\n}\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { BUTLER_ACTIONS } from '@src/__generated__/backendSchemas'\n\nexport function stringToDate(dateString: string): Date {\n  const [year, month, day] = dateString.split('-').map((v) => parseInt(v))\n  const ret = new Date(year, month - 1, day)\n  return ret\n}\nexport function formatDate(d: string): string {\n  const date = new Date(d)\n  return date.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    timeZone: 'UTC',\n  })\n}\n\nexport const getIsoDateString = (d: Date) => {\n  const year = d.getFullYear()\n  const month = d.getMonth() < 9 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1\n  const day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport function getToday(): string {\n  const today = new Date()\n  const year = today.getFullYear()\n  const month = today.getMonth() < 9 ? '0' + (today.getMonth() + 1) : today.getMonth() + 1\n  const day = today.getDate() < 10 ? '0' + today.getDate() : today.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport interface Identifiable {\n  id: string | number\n}\nexport const mergeArrays = <T extends Identifiable>(\n  existing: Array<T>,\n  incoming: Array<T>,\n  prependOrAppend: 'prepend' | 'append',\n): Array<T> => {\n  return incoming.reduce(\n    function (accumulator: Array<T>, value: T) {\n      const index = existing.findIndex((x) => x.id === value.id)\n      if (index >= 0) {\n        const ret = [\n          ...accumulator.slice(0, index),\n          value,\n          ...accumulator.slice(index + 1, accumulator.length),\n        ]\n        return ret\n      } else {\n        return prependOrAppend === 'append' ? [...accumulator, value] : [value, ...accumulator]\n      }\n    },\n    [...existing],\n  )\n}\nexport interface ButlerProps {\n  butler: typeof BUTLER_ACTIONS\n}\nconst mapDispatchToProps = (dispatch): ButlerProps => {\n  return {\n    butler: bindActionCreators(BUTLER_ACTIONS, dispatch),\n  }\n}\n\nexport const connectButler = <T extends {}>(stateMapper: ((state) => T) | null) => {\n  return connect<T, ButlerProps>(stateMapper, mapDispatchToProps)\n}\n","/**\n * GENERATED CODE. DO NOT EDIT !!!\"\n */\nexport interface ArchiveTransaction__Request {\n  id: number\n}\nexport interface AuthenticateUserRequest {\n  username: string\n  password: string\n}\nexport interface AuthenticateUserResponse {\n  errors: {}\n  authToken: string\n}\nexport interface CreateTransaction__Request {\n  issued_date: string\n  total_amount: string\n  notes: string\n  category_id: number | null\n  merchant: string\n  balance_adjust?: string\n}\nexport enum EnumRoute {\n  ListTransactions = 'ListTransactions',\n  AuthenticateUser = 'AuthenticateUser',\n  ListCategories = 'ListCategories',\n  TreefyCategories = 'TreefyCategories',\n  UpdateCategory = 'UpdateCategory',\n  ListEvents = 'ListEvents',\n  GetUserBalance = 'GetUserBalance',\n  UpdateTransaction = 'UpdateTransaction',\n  GetIncomeExpenseReport = 'GetIncomeExpenseReport',\n  GetExpenseReport = 'GetExpenseReport',\n  UploadStatement = 'UploadStatement',\n  ImportFromPlaid = 'ImportFromPlaid',\n  ImportFromWave = 'ImportFromWave',\n  SignCheckPoint = 'SignCheckPoint',\n  CreateTransaction = 'CreateTransaction',\n  ArchiveTransaction = 'ArchiveTransaction',\n}\nexport interface GetExpenseReport__Request {\n  start_date: string\n  end_date: string\n}\nexport interface GetIncomeExpenseReportResponse {\n  chart_data: {}\n}\nexport interface GetIncomeExpenseReport__Request {\n  start_date: string\n  end_date: string\n}\nexport interface GetUserBalanceRequest {}\nexport interface GetUserBalanceResponse {\n  balance: string\n  user_id: number\n}\nexport interface ITreeNode {\n  id: number\n  children: Array<ITreeNode>\n  mui_icon_id: string | null\n  name: string\n}\nexport interface ImportFromPlaidRequest {\n  start_date: string\n  end_date: string\n}\nexport interface IPlaidAccount {\n  account_id: string\n  name: string\n  type: string\n  subtype: string\n  mask: string\n}\nexport interface IPlaidTransaction {\n  account_id: string\n  account: IPlaidAccount\n  amount: number\n  category: Array<string>\n  category_id: string\n  date: string\n  iso_currency_code: string\n  name: string\n  pending: boolean\n  transaction_id: string\n  transaction_type: string\n}\nexport interface IWaveTransaction {\n  anchor_account_name: string\n  date_created: string\n  direction: string\n  transaction_description: string\n  transaction_date: string\n  transaction_id: string\n  transaction_amount: string\n}\nexport interface IPrediction {\n  category_id: number\n  category_name: string\n  split: boolean\n}\nexport interface IUserTransaction {\n  id: number\n  issued_date: string\n  total_amount: string\n  notes: string\n  category_id: number | null\n  checkpoint_id: number | null\n  statement_id: number | null\n  merchant: string\n  balance_adjust: string\n  created_by_id: number\n  origin_payload: IPlaidTransaction | IWaveTransaction | null\n  account_name: string\n  lender_id: number\n  plaid_category: string | null\n  prediction: IPrediction | null\n  editable: boolean\n}\nexport interface ImportFromPlaidResponse {\n  transactions: Array<IUserTransaction>\n}\nexport interface ImportFromWaveRequest {\n  start_date: string\n  end_date: string\n}\nexport interface ImportFromWaveResponse {\n  transactions: Array<IUserTransaction>\n}\nexport interface ListCategoriesRequest {}\nexport interface ICategory {\n  id: number\n  description: string\n  name: string\n  parent_id: number | null\n  mui_icon_id: string\n  is_selectable: boolean\n  is_active: boolean\n}\nexport interface ListCategoriesResponse {\n  categories: Array<ICategory>\n}\nexport interface ListEventsRequest {}\nexport enum EventType {\n  CHECKPOINT = 'CHECKPOINT',\n  STATEMENT_UPLOAD = 'STATEMENT_UPLOAD',\n  BATCH_IMPORT = 'BATCH_IMPORT',\n}\nexport interface ICheckPoint {\n  id: number\n  group_id: number\n  signed_ts: string | null\n  signed_by: number | null\n  signed_balance: string | null\n  updated_ts: string\n  created_ts: string\n  created_by: number\n  event_type?: EventType\n}\nexport interface IStatement {\n  id: number\n  source: string\n  user_id: string\n  created_ts: number\n  first_date: string\n  last_date: string\n  notes: string\n  is_processed: boolean\n  event_type?: EventType\n}\nexport interface IImportBatch {\n  id: number\n  origin: string\n  user_id: string\n  created_ts: number\n  start_date: string\n  end_date: string\n  event_type?: EventType\n}\nexport interface ListEventsResponse {\n  events: Array<ICheckPoint | IStatement | IImportBatch>\n}\nexport interface ListTransactionsRequest {\n  start?: number\n  end?: number\n  event_id?: string\n  search_text?: string\n}\nexport interface ListTransactionsResponse {\n  transactions: Array<IUserTransaction>\n}\nexport interface SignCheckPointRequest {\n  id: number\n}\nexport interface SignCheckPointResponse {\n  events: Array<ICheckPoint | IStatement | IImportBatch>\n}\nexport interface TreefyCategoriesRequest {}\nexport interface TreefyCategoriesResponse {\n  root: ITreeNode\n}\nexport interface UpdateCategoryRequest {\n  id: number\n  name?: string | null\n  mui_icon_id?: string | null\n}\nexport interface UpdateCategoryResponse {}\nexport interface UpdateTransactionRequest {\n  id: number\n  issued_date?: string | null\n  notes?: string | null\n  category_id?: number | null\n  balance_adjust?: string\n}\nexport interface UpdateTransactionsResponse {\n  transactions: Array<IUserTransaction>\n}\nexport enum EnumStatementSource {\n  PC_MASTER = 'PC_MASTER',\n  SCOTIA_MASTER = 'SCOTIA_MASTER',\n  VISA = 'VISA',\n  CHEQUE = 'CHEQUE',\n}\nexport interface UploadStatementRequest {\n  source: EnumStatementSource\n  content: string\n}\nexport interface ITransaction {\n  id: number\n  issued_date: string\n  total_amount: string\n  notes: string\n  category_id: number | null\n  checkpoint_id: number | null\n  statement_id: number | null\n  merchant: string\n  balance_adjust: string\n  created_by_id: number\n  origin_payload: IPlaidTransaction | IWaveTransaction | null\n  account_name: string\n  lender_id: number\n  plaid_category: string | null\n  prediction: string | null\n}\nexport interface UploadStatementResponse {\n  events: Array<ICheckPoint | IStatement | IImportBatch>\n  transactions: Array<ITransaction>\n  duplicates: Array<ITransaction>\n}\n\nexport type UpdateType = 'replace' | 'do-nothing' | 'merge-append' | 'remove'\nconst ListTransactions = (\n  data: ListTransactionsRequest,\n  updateType: UpdateType,\n  successCallback?: (data: ListTransactionsResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.ListTransactions,\n      route: EnumRoute.ListTransactions,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst AuthenticateUser = (\n  data: AuthenticateUserRequest,\n  updateType: UpdateType,\n  successCallback?: (data: AuthenticateUserResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.AuthenticateUser,\n      route: EnumRoute.AuthenticateUser,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst ListCategories = (\n  data: ListCategoriesRequest,\n  updateType: UpdateType,\n  successCallback?: (data: ListCategoriesResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.ListCategories,\n      route: EnumRoute.ListCategories,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst TreefyCategories = (\n  data: TreefyCategoriesRequest,\n  updateType: UpdateType,\n  successCallback?: (data: TreefyCategoriesResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.TreefyCategories,\n      route: EnumRoute.TreefyCategories,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst UpdateCategory = (\n  data: UpdateCategoryRequest,\n  updateType: UpdateType,\n  successCallback?: (data: UpdateCategoryResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.UpdateCategory,\n      route: EnumRoute.UpdateCategory,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst ListEvents = (\n  data: ListEventsRequest,\n  updateType: UpdateType,\n  successCallback?: (data: ListEventsResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.ListEvents,\n      route: EnumRoute.ListEvents,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst GetUserBalance = (\n  data: GetUserBalanceRequest,\n  updateType: UpdateType,\n  successCallback?: (data: GetUserBalanceResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.GetUserBalance,\n      route: EnumRoute.GetUserBalance,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst UpdateTransaction = (\n  data: UpdateTransactionRequest,\n  updateType: UpdateType,\n  successCallback?: (data: UpdateTransactionsResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.UpdateTransaction,\n      route: EnumRoute.UpdateTransaction,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst GetIncomeExpenseReport = (\n  data: GetIncomeExpenseReport__Request,\n  updateType: UpdateType,\n  successCallback?: (data: GetIncomeExpenseReportResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.GetIncomeExpenseReport,\n      route: EnumRoute.GetIncomeExpenseReport,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst GetExpenseReport = (\n  data: GetExpenseReport__Request,\n  updateType: UpdateType,\n  successCallback?: (data: GetIncomeExpenseReportResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.GetExpenseReport,\n      route: EnumRoute.GetExpenseReport,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst UploadStatement = (\n  data: UploadStatementRequest,\n  updateType: UpdateType,\n  successCallback?: (data: UploadStatementResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.UploadStatement,\n      route: EnumRoute.UploadStatement,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst ImportFromPlaid = (\n  data: ImportFromPlaidRequest,\n  updateType: UpdateType,\n  successCallback?: (data: ImportFromPlaidResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.ImportFromPlaid,\n      route: EnumRoute.ImportFromPlaid,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst ImportFromWave = (\n  data: ImportFromWaveRequest,\n  updateType: UpdateType,\n  successCallback?: (data: ImportFromWaveResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.ImportFromWave,\n      route: EnumRoute.ImportFromWave,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst SignCheckPoint = (\n  data: SignCheckPointRequest,\n  updateType: UpdateType,\n  successCallback?: (data: SignCheckPointResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.SignCheckPoint,\n      route: EnumRoute.SignCheckPoint,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst CreateTransaction = (\n  data: CreateTransaction__Request,\n  updateType: UpdateType,\n  successCallback?: (data: ListTransactionsResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.CreateTransaction,\n      route: EnumRoute.CreateTransaction,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst ArchiveTransaction = (\n  data: ArchiveTransaction__Request,\n  updateType: UpdateType,\n  successCallback?: (data: ListTransactionsResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.ArchiveTransaction,\n      route: EnumRoute.ArchiveTransaction,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nexport const BUTLER_ACTIONS = {\n  ListTransactions,\n\n  AuthenticateUser,\n\n  ListCategories,\n\n  TreefyCategories,\n\n  UpdateCategory,\n\n  ListEvents,\n\n  GetUserBalance,\n\n  UpdateTransaction,\n\n  GetIncomeExpenseReport,\n\n  GetExpenseReport,\n\n  UploadStatement,\n\n  ImportFromPlaid,\n\n  ImportFromWave,\n\n  SignCheckPoint,\n\n  CreateTransaction,\n\n  ArchiveTransaction,\n}\n","import * as React from 'react'\nimport { BUTLER_ACTIONS } from '@src/types'\n\nexport const UrlStateContext = React.createContext<any>({})\nexport const ButlerContext = React.createContext<typeof BUTLER_ACTIONS>(BUTLER_ACTIONS)\n","export function addSnack(message: string) {\n  return {\n    type: 'ADD_SNACK',\n    snack: message,\n  }\n}\n\nexport function eatSnack() {\n  return {\n    type: 'EAT_SNACK',\n  }\n}\n\nconst isLocal = !!window.location.port\nexport const BASE_URL = `${window.location.protocol}//${window.location.hostname}:${\n  isLocal ? '8888' : ''\n}`\n"],"sourceRoot":""}