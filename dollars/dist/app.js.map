{"version":3,"sources":["webpack:///./__generated__/backendSchemas.ts","webpack:///./Root/contexts.ts","webpack:///./queries/__generated__/UpdateTransaction.hooks.ts","webpack:///./types/index.ts","webpack:///./TransactionChart.tsx","webpack:///./Report/PnlChart.tsx","webpack:///./TransactionList/ImportForm.tsx","webpack:///./components/FileUploadButton.tsx","webpack:///./TransactionList/NewStatementForm.tsx","webpack:///./components/DialogSelect.tsx","webpack:///./TransactionList/NewTransactionForm.tsx","webpack:///./TransactionList/FilterDialog.tsx","webpack:///./TransactionList/TransactionListAppBar.tsx","webpack:///./TransactionList/SmartCatField.tsx","webpack:///./TransactionList/CategoryField.tsx","webpack:///./components/DebouncedTextField.tsx","webpack:///./components/icons.tsx","webpack:///./TransactionList/TransactionRow.tsx","webpack:///./Root/Timeline/EventRow.tsx","webpack:///./Root/Timeline/utils.ts","webpack:///./Root/Timeline/index.tsx","webpack:///./TransactionList/index.tsx","webpack:///./components/IconSelect.tsx","webpack:///./CategoryPage/Tree.tsx","webpack:///./CategoryPage/selectors.tsx","webpack:///./CategoryPage/index.tsx","webpack:///./history.ts","webpack:///./Root/index.tsx","webpack:///./queries/__generated__/GetCategories.hooks.ts","webpack:///./queries/GetCategories.graphql","webpack:///./LoginPage.tsx","webpack:///./queries/__generated__/GetProfitAndLossChart.hooks.ts","webpack:///./queries/GetProfitAndLossChart.graphql","webpack:///./selectors.ts","webpack:///./queries/__generated__/ImportWaveTransactions.hooks.ts","webpack:///./queries/ImportWaveTransactions.graphql","webpack:///./queries/GetTransactions.graphql","webpack:///./queries/__generated__/CreateTransaction.hooks.ts","webpack:///./queries/CreateTransaction.graphql","webpack:///./queries/UpdateTransaction.graphql","webpack:///./queries/__generated__/ArchiveTransaction.hooks.ts","webpack:///./queries/ArchiveTransaction.graphql","webpack:///./queries/__generated__/SignCheckpoint.hooks.ts","webpack:///./queries/SignCheckpoint.graphql","webpack:///./queries/__generated__/GetEvents.hooks.ts","webpack:///./queries/GetEvents.graphql","webpack:///./gqlClient.ts","webpack:///./utils.ts","webpack:///./queries/__generated__/GetTransactions.hooks.ts","webpack:///./reducers.ts","webpack:///./main.tsx","webpack:///./configureStore.tsx","webpack:///./actions.ts"],"names":["EnumRoute","EventType","EnumStatementSource","BUTLER_ACTIONS","ListTransactions","data","updateType","successCallback","dispatch","type","route","AuthenticateUser","ListCategories","TreefyCategories","UpdateCategory","ListEvents","GetUserBalance","UpdateTransaction","GetIncomeExpenseReport","GetExpenseReport","UploadStatement","ImportFromPlaid","ImportFromWave","SignCheckPoint","CreateTransaction","ArchiveTransaction","UrlStateContext","React","QUERY","UpdateTransaction__QUERY","UrlPathEnum","HighchartsData","Highchart","Highcharts","HighchartsDrilldown","TransactionChartComponent","props","e","showReport","target","value","config","chart","title","text","xAxis","yAxis","min","align","labels","overflow","tooltip","valueSuffix","plotOptions","bar","dataLabels","enabled","column","allowPointSelect","events","click","onClickColumn","bind","legend","layout","verticalAlign","x","y","floating","borderWidth","shadow","credits","state","reportTitle","report_type","initialReportType","this","console","log","today","Date","threeMonthAgo","setDate","getDate","apiName","butler","start_date","getIsoDateString","end_date","res","titled","u","getReportTitle","Object","assign","chart_data","setState","onChange","onChangeReportType","TransactionChart","connect","bindActionCreators","sixMonthsAgo","PnlChart","useApolloQuery","variables","startDate","endDate","loading","error","initial","profitAndLossChart","toISOString","slice","ImportForm","setStartDate","setEndDate","update","cache","importFromWave","isOk","cached","readQuery","query","GET_TRANSACTIONS_QUERY","writeQuery","transactions","onClose","importWaveTransactions","Grid","container","item","xs","TextField","label","defaultValue","Button","onClick","style","marginTop","color","variant","FileUploadButton","event","file","files","reader","FileReader","addEventListener","submitFileContent","result","readAsText","button","component","id","hidden","ref","fileInput","onFileInputChange","htmlFor","NewStatementForm","selectedSource","CHEQUE","content","length","paddingTop","ExpansionPanel","expanded","ExpansionPanelSummary","spacing","sm","Select","onSelectType","map","c","MenuItem","key","Divider","ExpansionPanelActions","size","DialogSelect","choices","onSelectOption","isOpen","setIsOpen","initialOption","option","find","Error","getInitialOption","Icon","marginRight","mui_icon_id","Dialog","open","fullWidth","DialogTitle","DialogContent","opt","undefined","placeholder","options","fieldConfig","issued_date","required","merchant","notes","category_id","balance_adjust","total_amount","FieldInput","fieldName","updateField","instance","initialForm","getToday","NewTransactionForm","t","selectableCategories","formData","setFormData","createTransaction","old","newState","transaction","cat","description","input","issuedDate","totalAmount","merchantName","balanceAdjust","categoryId","disabled","every","Boolean","FilterDialog","setOpen","isShared","setIsShared","searchText","setSearchText","setCategoryId","handleClose","IconButton","aria-labelledby","DialogContentText","margin","parseInt","FormControlLabel","control","Checkbox","checked","name","DialogActions","onSearch","TransactionListAppBar","AppBar","position","Toolbar","Tooltip","toggleTimeline","History","balance","Typography","flex","icon","Add","showForm","ListItemIcon","AttachMoney","ListItemText","CreditCard","Waves","sessionStorage","removeItem","window","location","href","className","SmartCatField","prediction","onAccept","split","fontWeight","categoryName","Check","Close","CategoryField","useMutation","MUTATION","updateTransaction","DebouncedTextField","helperText","setter","onBounce","debounced","_","PlaidIcon","float","CategoryInfoField","category","multiplier","user_id","lenderId","parseFloat","toString","TransactionRowComponent","onToggleExpansion","setBalanceAdjust","setNotes","archiveTransaction","ARCHIVE_TRANSACTION_MUTATION","removed","editable","formatDate","fields","originPayload","shouldExpandNode","__typename","accountName","plaidCategory","paddingLeft","ExpansionPanelDetails","newValue","textAlign","Fab","aria-label","Delete","areEqual","last","next","TransactionRow","TransactionRows","setExpanded","categories","eventId","isExpanded","EventRow","urlState","event_id","eventType","CHECKPOINT","onFilterEvent","authToken","checkpoint","eventIcon","BATCH_IMPORT","plaid","wave","origin","STATEMENT_UPLOAD","getEventIcon","eventButtonIcon","getEventButtonIcon","ListItem","selected","pushHistory","TransactionList","createdTs","toLocaleDateString","signedTs","signedBalance","batch_import","upload","source","firstDate","lastDate","getEventDescription","ListItemSecondaryAction","CheckpointListItem","SIGN_CHECKPOINT_MUTATION","signCheckpoint","ButtonGroup","getItem","BASE_URL","Timeline","LinearProgress","List","eventList","index","showTimeline","setShowTimeline","formType","setFormType","filters","offset","limit","isTransactionLoading","fetchMore","refetch","maxWidth","height","innerHeight","marginBottom","updateQuery","prev","fetchMoreResult","ICON_IDS","IconSelect","initialValue","iconId","useStyles","makeStyles","theme","createStyles","node","width","backgroundColor","palette","background","paper","Tree","level","onSelectIcon","onSaveNode","classes","primary","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","children","child","NodeListItem","setEditable","pickingIcon","setPickingIcon","nodeName","setNodeName","setIconId","dense","role","autoFocus","onBlur","edge","addNode","tree","visited","remaining","push","p","parent_id","parentNode","v","CategoryPage","pop","getCategoryTree","root","keys","k","history","createBrowserHistory","pathname","searchString","JSON","stringify","search","getPathName","path","endsWith","Root","ownProps","isAuthenticated","parseUrlState","Provider","Body","PageList","UrlPathsMap","LoginPage","warn","App","hot","module","client","GetCategories__QUERY","useQuery","doc","loc","definitionRefs","findOperation","i","definitions","element","forEach","def","refs","Set","collectFragmentReferences","kind","add","selectionSet","selections","selection","variableDefinitions","exports","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","prevRefs","has","childRef","op","oneQuery","username","setUsername","password","setPassword","errorMessage","setErrorMessage","submitLogin","fetch","method","body","headers","then","response","json","code","setItem","token","message","display","alignItems","justifyContent","flexDirection","onKeyPress","charCode","GetProfitAndLossChart__QUERY","params","querystring","parse","ImportWaveTransactions__QUERY","CreateTransaction__QUERY","ArchiveTransaction__QUERY","SignCheckpoint__QUERY","GetEvents__QUERY","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","__schema","types","errorLink","onError","graphQLErrors","networkError","gqlError","extensions","authLink","setContext","authorization","AC","link","concat","HttpLink","uri","InMemoryCache","d","month","day","timeZone","year","getFullYear","getMonth","GetTransactions__QUERY","initialState","handlers","snacks","EAT_SNACK","ADD_SNACK","action","snack","reducers","combineReducers","store","middleware","applyMiddleware","thunk","logger","createStore","configureStore","ReactDOM","document","getElementById","isLocal","port","protocol","hostname"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * GENERATED CODE. DO NOT EDIT !!!\"\n */\nexport interface ArchiveTransaction__Request {\n  id: number\n}\nexport interface AuthenticateUserRequest {\n  username: string\n  password: string\n}\nexport interface AuthenticateUserResponse {\n  errors: {}\n  authToken: string\n}\nexport interface CreateTransaction__Request {\n  issued_date: string\n  total_amount: string\n  notes: string\n  category_id: number | null\n  merchant: string\n  balance_adjust?: string\n}\nexport enum EnumRoute {\n  ListTransactions = 'ListTransactions',\n  AuthenticateUser = 'AuthenticateUser',\n  ListCategories = 'ListCategories',\n  TreefyCategories = 'TreefyCategories',\n  UpdateCategory = 'UpdateCategory',\n  ListEvents = 'ListEvents',\n  GetUserBalance = 'GetUserBalance',\n  UpdateTransaction = 'UpdateTransaction',\n  GetIncomeExpenseReport = 'GetIncomeExpenseReport',\n  GetExpenseReport = 'GetExpenseReport',\n  UploadStatement = 'UploadStatement',\n  ImportFromPlaid = 'ImportFromPlaid',\n  ImportFromWave = 'ImportFromWave',\n  SignCheckPoint = 'SignCheckPoint',\n  CreateTransaction = 'CreateTransaction',\n  ArchiveTransaction = 'ArchiveTransaction',\n}\nexport interface GetExpenseReport__Request {\n  start_date: string\n  end_date: string\n}\nexport interface GetIncomeExpenseReportResponse {\n  chart_data: {}\n}\nexport interface GetIncomeExpenseReport__Request {\n  start_date: string\n  end_date: string\n}\nexport interface GetUserBalanceRequest {}\nexport interface GetUserBalanceResponse {\n  balance: string\n  user_id: number\n}\nexport interface ITreeNode {\n  id: number\n  children: Array<ITreeNode>\n  mui_icon_id: string | null\n  name: string\n}\nexport interface ImportFromPlaidRequest {\n  start_date: string\n  end_date: string\n}\nexport interface IPlaidAccount {\n  account_id: string\n  name: string\n  type: string\n  subtype: string\n  mask: string\n}\nexport interface IPlaidTransaction {\n  account_id: string\n  account: IPlaidAccount\n  amount: number\n  category: Array<string>\n  category_id: string\n  date: string\n  iso_currency_code: string\n  name: string\n  pending: boolean\n  transaction_id: string\n  transaction_type: string\n}\nexport interface IWaveTransaction {\n  anchor_account_name: string\n  date_created: string\n  direction: string\n  transaction_description: string\n  transaction_date: string\n  transaction_id: string\n  transaction_amount: string\n}\nexport interface IPrediction {\n  category_id: number\n  category_name: string\n  split: boolean\n}\nexport interface IUserTransaction {\n  id: number\n  issued_date: string\n  total_amount: string\n  notes: string\n  category_id: number | null\n  checkpoint_id: number | null\n  statement_id: number | null\n  merchant: string\n  balance_adjust: string\n  created_by_id: number\n  origin_payload: IPlaidTransaction | IWaveTransaction | null\n  account_name: string\n  lender_id: number\n  plaid_category: string | null\n  prediction: IPrediction | null\n  editable: boolean\n}\nexport interface ImportFromPlaidResponse {\n  transactions: Array<IUserTransaction>\n}\nexport interface ImportFromWaveRequest {\n  start_date: string\n  end_date: string\n}\nexport interface ImportFromWaveResponse {\n  transactions: Array<IUserTransaction>\n}\nexport interface ListCategoriesRequest {}\nexport interface ICategory {\n  id: number\n  description: string\n  name: string\n  parent_id: number | null\n  mui_icon_id: string\n  is_selectable: boolean\n  is_active: boolean\n}\nexport interface ListCategoriesResponse {\n  categories: Array<ICategory>\n}\nexport interface ListEventsRequest {}\nexport enum EventType {\n  CHECKPOINT = 'CHECKPOINT',\n  STATEMENT_UPLOAD = 'STATEMENT_UPLOAD',\n  BATCH_IMPORT = 'BATCH_IMPORT',\n}\nexport interface ICheckPoint {\n  id: number\n  group_id: number\n  signed_ts: string | null\n  signed_by: number | null\n  signed_balance: string | null\n  updated_ts: string\n  created_ts: string\n  created_by: number\n  event_type?: EventType\n}\nexport interface IStatement {\n  id: number\n  source: string\n  user_id: string\n  created_ts: number\n  first_date: string\n  last_date: string\n  notes: string\n  is_processed: boolean\n  event_type?: EventType\n}\nexport interface IImportBatch {\n  id: number\n  origin: string\n  user_id: string\n  created_ts: number\n  start_date: string\n  end_date: string\n  event_type?: EventType\n}\nexport interface ListEventsResponse {\n  events: Array<ICheckPoint | IStatement | IImportBatch>\n}\nexport interface ListTransactionsRequest {\n  start?: number\n  end?: number\n  event_id?: string\n  search_text?: string\n}\nexport interface ListTransactionsResponse {\n  transactions: Array<IUserTransaction>\n}\nexport interface SignCheckPointRequest {\n  id: number\n}\nexport interface SignCheckPointResponse {\n  events: Array<ICheckPoint | IStatement | IImportBatch>\n}\nexport interface TreefyCategoriesRequest {}\nexport interface TreefyCategoriesResponse {\n  root: ITreeNode\n}\nexport interface UpdateCategoryRequest {\n  id: number\n  name?: string | null\n  mui_icon_id?: string | null\n}\nexport interface UpdateCategoryResponse {}\nexport interface UpdateTransactionRequest {\n  id: number\n  issued_date?: string | null\n  notes?: string | null\n  category_id?: number | null\n  balance_adjust?: string\n}\nexport interface UpdateTransactionsResponse {\n  transactions: Array<IUserTransaction>\n}\nexport enum EnumStatementSource {\n  PC_MASTER = 'PC_MASTER',\n  SCOTIA_MASTER = 'SCOTIA_MASTER',\n  VISA = 'VISA',\n  CHEQUE = 'CHEQUE',\n}\nexport interface UploadStatementRequest {\n  source: EnumStatementSource\n  content: string\n}\nexport interface ITransaction {\n  id: number\n  issued_date: string\n  total_amount: string\n  notes: string\n  category_id: number | null\n  checkpoint_id: number | null\n  statement_id: number | null\n  merchant: string\n  balance_adjust: string\n  created_by_id: number\n  origin_payload: IPlaidTransaction | IWaveTransaction | null\n  account_name: string\n  lender_id: number\n  plaid_category: string | null\n  prediction: string | null\n}\nexport interface UploadStatementResponse {\n  events: Array<ICheckPoint | IStatement | IImportBatch>\n  transactions: Array<ITransaction>\n  duplicates: Array<ITransaction>\n}\n\nexport type UpdateType = 'replace' | 'do-nothing' | 'merge-append' | 'remove'\nconst ListTransactions = (\n  data: ListTransactionsRequest,\n  updateType: UpdateType,\n  successCallback?: (data: ListTransactionsResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.ListTransactions,\n      route: EnumRoute.ListTransactions,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst AuthenticateUser = (\n  data: AuthenticateUserRequest,\n  updateType: UpdateType,\n  successCallback?: (data: AuthenticateUserResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.AuthenticateUser,\n      route: EnumRoute.AuthenticateUser,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst ListCategories = (\n  data: ListCategoriesRequest,\n  updateType: UpdateType,\n  successCallback?: (data: ListCategoriesResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.ListCategories,\n      route: EnumRoute.ListCategories,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst TreefyCategories = (\n  data: TreefyCategoriesRequest,\n  updateType: UpdateType,\n  successCallback?: (data: TreefyCategoriesResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.TreefyCategories,\n      route: EnumRoute.TreefyCategories,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst UpdateCategory = (\n  data: UpdateCategoryRequest,\n  updateType: UpdateType,\n  successCallback?: (data: UpdateCategoryResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.UpdateCategory,\n      route: EnumRoute.UpdateCategory,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst ListEvents = (\n  data: ListEventsRequest,\n  updateType: UpdateType,\n  successCallback?: (data: ListEventsResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.ListEvents,\n      route: EnumRoute.ListEvents,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst GetUserBalance = (\n  data: GetUserBalanceRequest,\n  updateType: UpdateType,\n  successCallback?: (data: GetUserBalanceResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.GetUserBalance,\n      route: EnumRoute.GetUserBalance,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst UpdateTransaction = (\n  data: UpdateTransactionRequest,\n  updateType: UpdateType,\n  successCallback?: (data: UpdateTransactionsResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.UpdateTransaction,\n      route: EnumRoute.UpdateTransaction,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst GetIncomeExpenseReport = (\n  data: GetIncomeExpenseReport__Request,\n  updateType: UpdateType,\n  successCallback?: (data: GetIncomeExpenseReportResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.GetIncomeExpenseReport,\n      route: EnumRoute.GetIncomeExpenseReport,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst GetExpenseReport = (\n  data: GetExpenseReport__Request,\n  updateType: UpdateType,\n  successCallback?: (data: GetIncomeExpenseReportResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.GetExpenseReport,\n      route: EnumRoute.GetExpenseReport,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst UploadStatement = (\n  data: UploadStatementRequest,\n  updateType: UpdateType,\n  successCallback?: (data: UploadStatementResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.UploadStatement,\n      route: EnumRoute.UploadStatement,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst ImportFromPlaid = (\n  data: ImportFromPlaidRequest,\n  updateType: UpdateType,\n  successCallback?: (data: ImportFromPlaidResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.ImportFromPlaid,\n      route: EnumRoute.ImportFromPlaid,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst ImportFromWave = (\n  data: ImportFromWaveRequest,\n  updateType: UpdateType,\n  successCallback?: (data: ImportFromWaveResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.ImportFromWave,\n      route: EnumRoute.ImportFromWave,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst SignCheckPoint = (\n  data: SignCheckPointRequest,\n  updateType: UpdateType,\n  successCallback?: (data: SignCheckPointResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.SignCheckPoint,\n      route: EnumRoute.SignCheckPoint,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst CreateTransaction = (\n  data: CreateTransaction__Request,\n  updateType: UpdateType,\n  successCallback?: (data: ListTransactionsResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.CreateTransaction,\n      route: EnumRoute.CreateTransaction,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nconst ArchiveTransaction = (\n  data: ArchiveTransaction__Request,\n  updateType: UpdateType,\n  successCallback?: (data: ListTransactionsResponse) => void,\n) => {\n  return (dispatch) =>\n    dispatch({\n      type: EnumRoute.ArchiveTransaction,\n      route: EnumRoute.ArchiveTransaction,\n      data,\n      updateType,\n      successCallback,\n    })\n}\n\nexport const BUTLER_ACTIONS = {\n  ListTransactions,\n\n  AuthenticateUser,\n\n  ListCategories,\n\n  TreefyCategories,\n\n  UpdateCategory,\n\n  ListEvents,\n\n  GetUserBalance,\n\n  UpdateTransaction,\n\n  GetIncomeExpenseReport,\n\n  GetExpenseReport,\n\n  UploadStatement,\n\n  ImportFromPlaid,\n\n  ImportFromWave,\n\n  SignCheckPoint,\n\n  CreateTransaction,\n\n  ArchiveTransaction,\n}\n","import * as React from 'react'\nimport { BUTLER_ACTIONS } from '@src/types'\n\nexport const UrlStateContext = React.createContext<any>({})\nexport const ButlerContext = React.createContext<typeof BUTLER_ACTIONS>(BUTLER_ACTIONS)\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  UpdateTransaction,\n  UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction'\nimport UpdateTransaction__QUERY from '@src/queries/UpdateTransaction.graphql'\n\nexport * from '@src/queries/__generated__/UpdateTransaction'\n\nexport const QUERY = UpdateTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<UpdateTransaction, UpdateTransactionVariables>,\n) {\n  return useMutation<UpdateTransaction, UpdateTransactionVariables>(QUERY, options)\n}\n","import {\n  ICheckPoint,\n  IStatement,\n  IImportBatch,\n  IUserTransaction,\n  ICategory,\n} from '@src/__generated__/backendSchemas'\n\nexport * from '@src/__generated__/backendSchemas'\n\nexport type IEvent = ICheckPoint | IStatement | IImportBatch\n\nexport interface State {\n  user_id: number\n  balance: string\n  events: Array<IEvent>\n  categories: Array<ICategory>\n  authToken: string | null\n  isAuthenticated: boolean\n  transactions: Array<IUserTransaction>\n  router?: any\n  snacks: Array<string>\n}\n\nexport enum UrlPathEnum {\n  Root = '/',\n  LoginPage = '/LoginPage',\n  TransactionList = '/TransactionList',\n  TransactionChart = '/TransactionChart',\n  CategoryPage = '/CategoryPage',\n  PnlChart = '/PnlChart',\n}\n","import { MenuItem, Select } from '@material-ui/core'\n// import { parseUrlState } from '@src/selectors'\nimport HighchartsData from 'highcharts-data'\nimport HighchartsDrilldown from 'highcharts-drilldown'\nimport * as React from 'react'\nimport Highchart from 'react-highcharts'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport u from 'updeep'\nimport { getIsoDateString } from '@src/utils'\nimport { BUTLER_ACTIONS } from '@src/types'\n\nHighchartsData(Highchart.Highcharts)\nHighchartsDrilldown(Highchart.Highcharts)\n\ntype ReportType = 'INCOME_EXPENSE' | 'EXPENSE'\n\nconst getChartConfig = ({ onClickColumn }) => {\n  return {\n    chart: {\n      type: 'column',\n      //height: 800,\n      //width: 800\n    },\n    title: {\n      text: 'Income/Expense Report',\n    },\n    xAxis: {\n      type: 'category',\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Spend',\n        align: 'high',\n      },\n      labels: {\n        overflow: 'justify',\n      },\n    },\n    tooltip: {\n      valueSuffix: ' dollars',\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: true,\n        },\n      },\n      column: {\n        dataLabels: {\n          enabled: true,\n        },\n        allowPointSelect: false,\n        events: {\n          click: onClickColumn,\n        },\n      },\n    },\n    legend: {\n      enabled: true,\n      layout: 'vertical',\n      align: 'right',\n      verticalAlign: 'top',\n      x: -40,\n      y: 80,\n      floating: true,\n      borderWidth: 1,\n      shadow: true,\n    },\n    credits: {\n      enabled: false,\n    },\n  }\n}\ninterface Prop {\n  butler: typeof BUTLER_ACTIONS\n  initialReportType?: string\n}\n\ninterface State {\n  config: any\n  reportTitle: string\n  chart: any\n  report_type: ReportType\n}\n\nclass TransactionChartComponent extends React.Component<Prop, State> {\n  constructor(props) {\n    super(props)\n    const config = getChartConfig({\n      onClickColumn: this.onClickColumn.bind(this),\n    })\n    this.state = {\n      config,\n      chart: null,\n      reportTitle: '',\n      report_type: props.initialReportType,\n    }\n  }\n\n  onClickColumn(e) {\n    if (this.state.report_type === 'INCOME_EXPENSE') {\n      return console.log(e)\n    }\n  }\n\n  getReportTitle(value) {\n    return value == 'INCOME_EXPENSE' ? 'Income/Expense Report' : 'Expense Report'\n  }\n\n  onChangeReportType = (e) => {\n    this.showReport(e.target.value)\n  }\n\n  showReport(report_type: ReportType) {\n    const today = new Date()\n    const threeMonthAgo = new Date()\n    threeMonthAgo.setDate(threeMonthAgo.getDate() - 180)\n    const apiName = report_type === 'INCOME_EXPENSE' ? 'GetIncomeExpenseReport' : 'GetExpenseReport'\n    this.props.butler[apiName](\n      { start_date: getIsoDateString(threeMonthAgo), end_date: getIsoDateString(today) },\n      'do-nothing',\n      (res) => {\n        const titled = u(\n          {\n            title: {\n              text: this.getReportTitle(report_type),\n            },\n          },\n          this.state.config,\n        )\n        const config = Object.assign({}, titled, res.chart_data)\n        this.setState({ chart: <Highchart config={config} /> })\n        this.setState({ report_type, config })\n      },\n    )\n  }\n\n  componentDidMount() {\n    this.showReport(this.state.report_type)\n  }\n\n  render() {\n    if (!this.state.config) {\n      return <p>Loading ...</p>\n    }\n    return (\n      <div>\n        <Select value={this.state.report_type} onChange={this.onChangeReportType}>\n          <MenuItem value={'INCOME_EXPENSE'}>Income/Expense</MenuItem>\n          <MenuItem value={'EXPENSE'}>Expense</MenuItem>\n        </Select>\n        <p>{this.state.reportTitle}</p>\n        {this.state.chart}\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    butler: bindActionCreators(BUTLER_ACTIONS, dispatch),\n  }\n}\nexport const TransactionChart = connect(null, mapDispatchToProps)(TransactionChartComponent)\n","import HighchartsData from 'highcharts-data'\nimport HighchartsDrilldown from 'highcharts-drilldown'\nimport * as React from 'react'\nimport Highchart from 'react-highcharts'\nimport u from 'updeep'\nimport { useApolloQuery } from '@src/queries/__generated__/GetProfitAndLossChart.hooks'\nimport { getIsoDateString } from '@src/utils'\n\nHighchartsData(Highchart.Highcharts)\nHighchartsDrilldown(Highchart.Highcharts)\n\nconst getChartConfig = ({ onClickColumn }) => {\n  return {\n    chart: {\n      type: 'column',\n      //height: 800,\n      //width: 800\n    },\n    title: {\n      text: 'Income/Expense Report',\n    },\n    xAxis: {\n      type: 'category',\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Spend',\n        align: 'high',\n      },\n      labels: {\n        overflow: 'justify',\n      },\n    },\n    tooltip: {\n      valueSuffix: ' dollars',\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: true,\n        },\n      },\n      column: {\n        dataLabels: {\n          enabled: true,\n        },\n        allowPointSelect: false,\n        events: {\n          click: onClickColumn,\n        },\n      },\n    },\n    legend: {\n      enabled: true,\n      layout: 'vertical',\n      align: 'right',\n      verticalAlign: 'top',\n      x: -40,\n      y: 80,\n      floating: true,\n      borderWidth: 1,\n      shadow: true,\n    },\n    credits: {\n      enabled: false,\n    },\n  }\n}\nconst today = new Date()\nconst sixMonthsAgo = new Date()\nsixMonthsAgo.setDate(sixMonthsAgo.getDate() - 180)\n\nexport const PnlChart: React.FC<{}> = (props) => {\n  const { loading, error, data } = useApolloQuery({\n    variables: {\n      startDate: getIsoDateString(sixMonthsAgo),\n      endDate: getIsoDateString(today),\n    },\n  })\n  if (loading) {\n    return <div>loading ...</div>\n  }\n  if (error) return <div>error ...</div>\n\n  const initial = getChartConfig({\n    onClickColumn: (e) => console.log(e),\n  })\n  const titled = u(\n    {\n      title: {\n        text: 'Profit & Loss Report',\n      },\n    },\n    initial,\n  )\n  const config = Object.assign({}, titled, data!.profitAndLossChart)\n  return (\n    <div>\n      <Highchart config={config} />\n    </div>\n  )\n}\n","import { Button, Grid, TextField } from '@material-ui/core'\nimport * as React from 'react'\nimport { useApolloQuery } from '@src/queries/__generated__/ImportWaveTransactions.hooks'\nimport {\n  GetTransactions,\n  QUERY as GET_TRANSACTIONS_QUERY,\n} from '@src/queries/__generated__/GetTransactions.hooks'\n\nconst today = new Date().toISOString().slice(0, 10)\n\nexport const ImportForm = (props: { onClose: () => void }) => {\n  const [start_date, setStartDate] = React.useState(today)\n  const [end_date, setEndDate] = React.useState(today)\n  const [importWaveTransactions, { loading }] = useApolloQuery({\n    update(cache, { data }) {\n      if (data?.importFromWave.isOk) {\n        const cached = cache.readQuery<GetTransactions>({ query: GET_TRANSACTIONS_QUERY })\n        cache.writeQuery({\n          query: GET_TRANSACTIONS_QUERY,\n          data: Object.assign({}, cached, {\n            transactions: [...data.importFromWave.transactions, ...cached!.transactions],\n          }),\n        })\n        props.onClose()\n      }\n    },\n  })\n\n  return (\n    <Grid container>\n      <Grid item xs={4}>\n        <TextField\n          type=\"date\"\n          label=\"from\"\n          value={start_date}\n          onChange={(e) => setStartDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField\n          type=\"date\"\n          label=\"to\"\n          defaultValue={today}\n          onChange={(e) => setEndDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <Button\n          onClick={() =>\n            importWaveTransactions({\n              variables: {\n                startDate: start_date,\n                endDate: end_date,\n              },\n            })\n          }\n          style={{ marginTop: '10px' }}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {loading ? 'importing ...' : 'Import'}\n        </Button>\n      </Grid>\n    </Grid>\n  )\n}\n","import { Button } from '@material-ui/core'\nimport * as React from 'react'\n\ninterface Prop {\n  submitFileContent: (content: string | ArrayBuffer | null) => void\n  button?: React.ReactElement<any>\n}\nexport class FileUploadButton extends React.Component<Prop, any> {\n  fileInput: any\n\n  onFileInputChange = (event) => {\n    const file = event.target.files[0]\n    const reader = new FileReader()\n\n    const callback = () => this.props.submitFileContent(reader.result)\n    reader.addEventListener('load', callback, false)\n    if (file) {\n      reader.readAsText(file)\n    }\n  }\n\n  render() {\n    const button = this.props.button || (\n      <Button variant=\"outlined\" component=\"span\">\n        Upload\n      </Button>\n    )\n    return (\n      <div>\n        <input\n          id=\"file-upload-form\"\n          hidden\n          ref={(ref) => (this.fileInput = ref)}\n          onChange={this.onFileInputChange}\n          type=\"file\"\n        />\n        <label htmlFor=\"file-upload-form\">{button}</label>\n      </div>\n    )\n  }\n}\n","import {\n  Select,\n  Button,\n  Divider,\n  ExpansionPanel,\n  ExpansionPanelActions,\n  ExpansionPanelSummary,\n  Grid,\n  MenuItem,\n} from '@material-ui/core'\n\nimport * as React from 'react'\nimport { FileUploadButton } from '../components/FileUploadButton'\nimport { EnumStatementSource } from '@src/__generated__/backendSchemas'\n\ninterface OwnProps {\n  onClose: () => void\n}\n\ninterface State {\n  selectedSource: EnumStatementSource\n}\n\nexport class NewStatementForm extends React.Component<OwnProps, State> {\n  state = {\n    selectedSource: EnumStatementSource.CHEQUE,\n  }\n\n  onSelectType = (event) => {\n    this.setState({ selectedSource: event.target.value })\n  }\n\n  submitFileContent = (content: string) => {\n    if (this.state.selectedSource.length && content) {\n      console.error('doing nothing')\n    }\n  }\n\n  render() {\n    const choices = ['CHEQUE', 'PC_MASTER', 'SCOTIA_MASTER', 'VISA']\n    return (\n      <div style={{ paddingTop: '10px' }}>\n        <ExpansionPanel expanded={true}>\n          <ExpansionPanelSummary>\n            <Grid container spacing={10}>\n              <Grid item xs={6} sm={4}>\n                <Select value={this.state.selectedSource} onChange={this.onSelectType}>\n                  {choices.map((c) => {\n                    return (\n                      <MenuItem key={c} value={c}>\n                        {c}\n                      </MenuItem>\n                    )\n                  })}\n                </Select>\n              </Grid>\n              <Grid item xs={6} sm={4}>\n                <FileUploadButton submitFileContent={this.submitFileContent} />\n              </Grid>\n            </Grid>\n          </ExpansionPanelSummary>\n          <Divider />\n          <ExpansionPanelActions>\n            <Button\n              size=\"small\"\n              onClick={() => {\n                this.props.onClose()\n              }}\n            >\n              Cancel\n            </Button>\n          </ExpansionPanelActions>\n        </ExpansionPanel>\n      </div>\n    )\n  }\n}\n","import { Button, Dialog, DialogContent, DialogTitle, Icon } from '@material-ui/core'\n\nimport * as React from 'react'\n\nimport { Autocomplete } from 'rice-instructor'\n\ninterface DialogSelectProps {\n  choices: Array<{\n    value: string | number\n    mui_icon_id?: string\n    label: string\n  }>\n  onSelectOption: (option) => void\n  value: string | null | number\n}\nconst getInitialOption = (\n  value: string | number | null,\n  choices: Array<{\n    value: string | number\n    mui_icon_id?: string\n    label: string\n  }>,\n) => {\n  if (!value) return null\n  const option = choices.find((x) => x.value === value)\n  if (!option) {\n    console.log(choices)\n    throw new Error(`${value} not found `)\n  }\n\n  return option\n}\nexport const DialogSelect = (props: DialogSelectProps) => {\n  const { choices, value, onSelectOption } = props\n  const [isOpen, setIsOpen] = React.useState(false)\n  const initialOption = getInitialOption(value, choices)\n  return (\n    <div>\n      <Button onClick={() => setIsOpen(true)} variant=\"outlined\" color=\"primary\">\n        {initialOption ? (\n          <Icon style={{ marginRight: '5px' }}>{initialOption.mui_icon_id}</Icon>\n        ) : null}\n        {initialOption ? initialOption.label : 'Select a Category'}\n      </Button>\n      <Dialog open={isOpen} fullWidth onClose={() => setIsOpen(false)}>\n        <DialogTitle>Select a Category</DialogTitle>\n        <DialogContent>\n          <Autocomplete\n            onSelectOption={(opt) => {\n              onSelectOption(opt)\n              setIsOpen(false)\n            }}\n            defaultValue={initialOption ? initialOption.value : undefined}\n            placeholder=\"Select a category\"\n            options={choices}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import {\n  Button,\n  Divider,\n  ExpansionPanel,\n  ExpansionPanelActions,\n  ExpansionPanelSummary,\n  Grid,\n  TextField,\n} from '@material-ui/core'\nimport * as React from 'react'\nimport { DialogSelect } from '@src/components/DialogSelect'\nimport { useApolloQuery } from '@src/queries/__generated__/CreateTransaction.hooks'\nimport { CreateTransaction__Request } from '@src/types'\nimport { GetTransactions_categories as ICategory } from '@src/queries/__generated__/GetTransactions.hooks'\nimport { getToday } from '@src/utils'\n\ninterface NewTransactionFormProps {\n  onClose: () => void\n  selectableCategories: Array<ICategory>\n}\n\ntype FieldName =\n  | 'issued_date'\n  | 'merchant'\n  | 'notes'\n  | 'category_id'\n  | 'total_amount'\n  | 'balance_adjust'\n\nconst fieldConfig = {\n  issued_date: { type: 'date', required: true },\n  merchant: { type: 'text', required: true },\n  notes: { type: 'text', required: false },\n  category_id: { type: 'number', required: false },\n  balance_adjust: { type: 'number', required: false },\n  total_amount: { type: 'number', required: true },\n}\n\nconst FieldInput = (props: {\n  fieldName: FieldName\n  updateField: (fieldName) => (event) => void\n  instance: CreateTransaction__Request\n}) => {\n  const { fieldName, updateField, instance } = props\n  const config = fieldConfig[fieldName]\n  let error = false\n  if (config.required && !instance[fieldName]) {\n    error = true\n  } else if (config.required && config.type === 'number' && !instance[fieldName]) {\n    error = true\n  }\n\n  return (\n    <TextField\n      type={config.type}\n      required={config.required}\n      error={error}\n      label={fieldName}\n      value={instance[fieldName]}\n      onChange={updateField(fieldName)}\n    />\n  )\n}\nconst initialForm = {\n  issued_date: getToday(),\n  merchant: '',\n  notes: '',\n  category_id: null,\n  total_amount: '0',\n  balance_adjust: '0',\n}\n\nexport const NewTransactionForm: React.FC<NewTransactionFormProps> = (props) => {\n  const { selectableCategories, onClose } = props\n  const [formData, setFormData] = React.useState<CreateTransaction__Request>(initialForm)\n  const [createTransaction, { loading }] = useApolloQuery({})\n\n  const createNewTransaction = () => {\n    createTransaction({\n      variables: {\n        input: {\n          issuedDate: formData.issued_date,\n          totalAmount: formData.total_amount,\n          merchantName: formData.merchant,\n          balanceAdjust: formData.balance_adjust || '0',\n          categoryId: formData.category_id,\n          notes: formData.notes,\n        },\n      },\n    })\n  }\n  const updateField = (fieldName: FieldName) => {\n    const old = formData\n    return (event) => {\n      const newState = Object.assign({}, old, {\n        [fieldName]: event.target.value,\n      })\n      setFormData(newState)\n    }\n  }\n  const isValid = () => {\n    const t = formData\n    return [t.issued_date, t.merchant, +t.total_amount].every(Boolean)\n  }\n  const transaction = formData\n  return (\n    <div style={{ paddingTop: '10px' }}>\n      <ExpansionPanel expanded={true}>\n        <ExpansionPanelSummary>\n          <Grid container spacing={10}>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                instance={transaction}\n                fieldName=\"issued_date\"\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput fieldName=\"merchant\" instance={transaction} updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"total_amount\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <DialogSelect\n                value={transaction.category_id || ''}\n                onSelectOption={(option) => {\n                  const newState = Object.assign({}, formData, {\n                    category_id: option.value,\n                  })\n                  setFormData(newState)\n                }}\n                choices={selectableCategories.map((cat) => {\n                  return {\n                    value: cat.id,\n                    label: cat.description,\n                    mui_icon_id: cat.mui_icon_id || '',\n                  }\n                })}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput fieldName=\"notes\" instance={transaction} updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"balance_adjust\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <Divider />\n        <ExpansionPanelActions>\n          <Button\n            size=\"small\"\n            onClick={() => {\n              setFormData(initialForm)\n              onClose()\n            }}\n          >\n            Cancel\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={createNewTransaction} disabled={!isValid()}>\n            {loading ? `saving ...` : `Save`}\n          </Button>\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport {\n  DialogContentText,\n  DialogTitle,\n  Icon,\n  IconButton,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n} from '@material-ui/core'\n\ninterface Prop {\n  onSearch: (filters: { isShared: boolean; categoryId: number | null; searchText: string }) => void\n}\n\nexport const FilterDialog: React.FC<Prop> = (props) => {\n  const [open, setOpen] = React.useState(false)\n  const [isShared, setIsShared] = React.useState(false)\n  const [searchText, setSearchText] = React.useState<string>('')\n  const [categoryId, setCategoryId] = React.useState<number | null>(null)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div>\n      <IconButton onClick={handleClickOpen}>\n        <Icon color=\"primary\">filter_alt</Icon>\n      </IconButton>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Filter Transactions</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Search transactions by category, text (merchant name and notes). By checking \"Shared\",\n            you can limit the results to be shared transactions only.\n          </DialogContentText>\n          <TextField\n            margin=\"dense\"\n            id=\"categoryId\"\n            label=\"Category\"\n            type=\"number\"\n            fullWidth\n            value={categoryId}\n            onChange={(e) => setCategoryId(parseInt(e.target.value))}\n          />\n          <TextField\n            onChange={(e) => setSearchText(e.target.value)}\n            value={searchText}\n            margin=\"dense\"\n            id=\"searchText\"\n            label=\"Text Search\"\n            type=\"text\"\n            fullWidth\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isShared}\n                onChange={(e) => setIsShared(e.target.checked)}\n                name=\"isShared\"\n              />\n            }\n            label=\"Shared\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={(e) => {\n              props.onSearch({\n                isShared,\n                searchText,\n                categoryId,\n              })\n              handleClose()\n            }}\n            color=\"primary\"\n          >\n            Search\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import {\n  AppBar,\n  Icon,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@material-ui/core'\nimport { Add, AttachMoney, CreditCard, History, Waves } from '@material-ui/icons'\nimport * as React from 'react'\nimport { IconMenu } from 'rice-instructor'\nimport { FilterDialog } from '@src/TransactionList/FilterDialog'\n\ninterface Prop {\n  balance: string\n  showForm: (formType: string) => void\n  toggleTimeline: () => void\n  onSearch: (filters: { isShared: boolean; categoryId: number | null; searchText: string }) => void\n}\n\nexport const TransactionListAppBar = (props: Prop) => {\n  const showNewTransactionForm = () => {\n    props.showForm('transaction')\n  }\n\n  const showNewStatementForm = () => {\n    props.showForm('statement')\n  }\n\n  const showWaveImportForm = () => {\n    props.showForm('wave')\n  }\n\n  const toggleTimeline = () => {\n    props.toggleTimeline()\n  }\n\n  return (\n    <AppBar position=\"static\" color=\"default\">\n      <Toolbar>\n        <Tooltip title=\"Timeline\">\n          <IconButton onClick={toggleTimeline}>\n            <History />\n          </IconButton>\n        </Tooltip>\n        {props.balance ? (\n          <Typography variant=\"body1\" key=\"balance\">{`Balance: $${props.balance}`}</Typography>\n        ) : null}\n        <div style={{ flex: 1 }} />\n        <FilterDialog onSearch={props.onSearch} />\n        <IconMenu icon={<Add />}>\n          <MenuItem key=\"new-transaction-menu\" onClick={showNewTransactionForm}>\n            <ListItemIcon>\n              <AttachMoney />\n            </ListItemIcon>\n            <ListItemText>Transaction</ListItemText>\n          </MenuItem>\n          <MenuItem key=\"new-statement-menu\" onClick={showNewStatementForm}>\n            <ListItemIcon>\n              <CreditCard />\n            </ListItemIcon>\n            <ListItemText>Statement</ListItemText>\n          </MenuItem>\n          <MenuItem key=\"new-wave-menu\" onClick={showWaveImportForm}>\n            <ListItemIcon>\n              <Waves color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText>Wave Import</ListItemText>\n          </MenuItem>\n        </IconMenu>\n        <IconButton\n          onClick={() => {\n            sessionStorage.removeItem('authToken')\n            window.location.href = '/'\n          }}\n        >\n          <Icon className=\"material-icons\">exit_to_app</Icon>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import * as React from 'react'\n\nimport { Grid, IconButton } from '@material-ui/core'\nimport { Check, Close } from '@material-ui/icons'\nimport { GetTransactions_transactions_prediction as IPrediction } from '@src/queries/__generated__/GetTransactions.hooks'\n\ninterface SmartCatProp {\n  prediction: IPrediction\n  onAccept: () => void\n}\nexport const SmartCatField: React.FC<SmartCatProp> = (props) => {\n  const { prediction, onAccept } = props\n  const split = prediction.split ? 'Split ' : ''\n  return (\n    <div style={{ color: 'rgb(0, 188, 212)', fontWeight: 'bold' }}>\n      {`${split}${prediction.categoryName}?`}\n      <Grid container>\n        <Grid item xs={12} sm={1}>\n          <IconButton onClick={() => onAccept()}>\n            <Check color=\"primary\" />\n          </IconButton>\n        </Grid>\n        <Grid item xs={12} sm={1}>\n          <IconButton\n            onClick={() => {\n              // Do nothing because the Transaction row will be focused and enter edit mode\n            }}\n          >\n            <Close color=\"secondary\" />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import * as React from 'react'\n\nimport { useMutation } from '@apollo/react-hooks'\nimport { DialogSelect } from '@src/components/DialogSelect'\n\nimport {\n  GetTransactions_categories as ICategory,\n  GetTransactions_transactions as IUserTransaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\n\nimport {\n  QUERY as MUTATION,\n  UpdateTransaction,\n  UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction.hooks'\n\ninterface CategoryFieldProp {\n  transaction: IUserTransaction\n  selectableCategories: Array<ICategory>\n}\n\nexport const CategoryField: React.FC<CategoryFieldProp> = (props) => {\n  const { selectableCategories, transaction } = props\n  const [updateTransaction, { loading }] = useMutation<\n    UpdateTransaction,\n    UpdateTransactionVariables\n  >(MUTATION)\n  if (!selectableCategories.length) return <div></div>\n  if (loading) return <div>updating...</div>\n\n  return (\n    <DialogSelect\n      value={transaction.categoryId || null}\n      onSelectOption={(option) => {\n        updateTransaction({\n          variables: { id: transaction.id, categoryId: option.value },\n        })\n      }}\n      choices={selectableCategories.map((cat) => {\n        return {\n          value: cat.id,\n          label: cat.description,\n          mui_icon_id: cat.mui_icon_id || '',\n        }\n      })}\n    />\n  )\n}\n","import * as React from 'react'\nimport * as _ from 'lodash'\nimport { TextField } from '@material-ui/core'\n\ninterface IDebouncedTextField {\n  helperText?: string\n  onBounce: (newValue) => void\n  setter: (newValue) => void\n  type?: string\n  value?: any\n  loading?: boolean\n}\n\nexport const DebouncedTextField: React.FunctionComponent<IDebouncedTextField> = ({\n  helperText,\n  setter,\n  onBounce,\n  type,\n  value,\n  loading,\n}) => {\n  const debounced = React.useCallback(_.debounce(onBounce, 1000), [])\n\n  return (\n    <TextField\n      error={!!loading}\n      helperText={loading ? 'saving ...' : helperText}\n      type={type}\n      onChange={(event) => {\n        setter(event.target.value)\n        debounced(event.target.value)\n      }}\n      value={value}\n    />\n  )\n}\n","import * as React from 'react'\nimport { Icon } from '@material-ui/core'\n\nexport class PlaidIcon extends React.Component<{}> {\n  render() {\n    return (\n      <Icon style={{ color: 'blue', float: 'left' }} className=\"material-icons\">\n        grid_on\n      </Icon>\n    )\n  }\n}\n","import {\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Fab,\n  Grid,\n  Icon,\n  Tooltip,\n  Typography,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\nimport { useMutation } from '@apollo/react-hooks'\nimport * as _ from 'lodash'\nimport JSONTree from 'react-json-tree'\nimport * as React from 'react'\nimport { SmartCatField } from './SmartCatField'\nimport { CategoryField } from './CategoryField'\nimport {\n  QUERY as MUTATION,\n  UpdateTransaction,\n  UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction.hooks'\nimport {\n  QUERY as GET_TRANSACTIONS_QUERY,\n  GetTransactions,\n  GetTransactions_categories,\n  GetTransactions_transactions as GetTransactions_transaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\nimport { DebouncedTextField } from '@src/components/DebouncedTextField'\nimport { formatDate } from '@src/utils'\n\nimport {\n  QUERY as ARCHIVE_TRANSACTION_MUTATION,\n  ArchiveTransaction,\n  ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction.hooks'\nimport { PlaidIcon } from '@src/components/icons'\n\ninterface ITransactionRowProps {\n  transaction: GetTransactions_transaction\n  user_id: number\n  expanded: boolean\n  selectableCategories: Array<GetTransactions_categories>\n  onToggleExpansion: (event, expanded) => void\n}\n\nexport const CategoryInfoField = (props: {\n  transaction: GetTransactions_transaction\n  category: GetTransactions_categories | null\n  user_id: number\n  onAccept: (arg: { id: number; category_id: number; balance_adjust: string }) => void\n}) => {\n  const { transaction, category, onAccept } = props\n  const prediction = transaction.prediction\n  const multiplier = props.user_id === transaction.lenderId ? 1 : -1\n  if (!transaction.categoryId && prediction) {\n    return (\n      <SmartCatField\n        prediction={prediction}\n        onAccept={() =>\n          onAccept({\n            id: transaction.id,\n            category_id: prediction.categoryId,\n            balance_adjust: prediction.split\n              ? ((multiplier * parseFloat(transaction.totalAmount)) / 2).toString()\n              : '0',\n          })\n        }\n      />\n    )\n  }\n  return (\n    <Grid container spacing={10}>\n      <Grid item xs={1}>\n        <Icon className=\"material-icons\">{category ? category.mui_icon_id : null}</Icon>\n      </Grid>\n      <Grid item xs>\n        {category ? <Typography color=\"textSecondary\">{category.description}</Typography> : null}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport const TransactionRowComponent = (props: ITransactionRowProps) => {\n  const { user_id, selectableCategories, transaction, expanded, onToggleExpansion } = props\n  const [balanceAdjust, setBalanceAdjust] = React.useState(transaction.balanceAdjust)\n  const [notes, setNotes] = React.useState(transaction.notes)\n  console.log('render row')\n\n  const [updateTransaction, { loading }] = useMutation<\n    UpdateTransaction,\n    UpdateTransactionVariables\n  >(MUTATION)\n  const [archiveTransaction] = useMutation<ArchiveTransaction, ArchiveTransactionVariables>(\n    ARCHIVE_TRANSACTION_MUTATION,\n    {\n      update(cache, { data }) {\n        if (data?.archiveTransaction?.isOk) {\n          const cached = cache.readQuery<GetTransactions>({ query: GET_TRANSACTIONS_QUERY })\n          const removed = [...cached!.transactions]\n          _.remove(removed, (t) => t.id === transaction.id)\n          cache.writeQuery({\n            query: GET_TRANSACTIONS_QUERY,\n            data: Object.assign({}, cached, { transactions: removed }),\n          })\n        }\n      },\n    },\n  )\n\n  const onAcceptSmartCat = (fields: {\n    id: number\n    category_id: number\n    balance_adjust: string\n  }) => {\n    updateTransaction({\n      variables: {\n        id: transaction.id,\n        categoryId: fields.category_id,\n        balanceAdjust: fields.balance_adjust,\n      },\n    })\n  }\n  const getCategory = () => {\n    if (!transaction.categoryId) return null\n    return selectableCategories.find((c) => c.id === transaction.categoryId) || null\n  }\n  return (\n    <div>\n      <ExpansionPanel\n        disabled={!transaction.editable}\n        expanded={expanded}\n        onChange={onToggleExpansion}\n      >\n        <ExpansionPanelSummary>\n          <Grid container spacing={10}>\n            <Grid item xs={3} sm={4}>\n              <Typography>{formatDate(transaction.issuedDate)}</Typography>\n              {expanded ? null : (\n                <CategoryInfoField\n                  user_id={user_id}\n                  transaction={transaction}\n                  category={getCategory()}\n                  onAccept={onAcceptSmartCat}\n                />\n              )}\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              {transaction.originPayload ? (\n                <Tooltip\n                  title={\n                    <JSONTree shouldExpandNode={() => true} data={transaction.originPayload} />\n                  }\n                >\n                  {transaction.originPayload.__typename === 'IWaveTransaction' ? (\n                    <Icon style={{ color: 'blue', float: 'left' }} className=\"material-icons\">\n                      waves\n                    </Icon>\n                  ) : (\n                    <PlaidIcon />\n                  )}\n                </Tooltip>\n              ) : null}\n              <Typography variant=\"body1\">{transaction.merchantName}</Typography>\n              <div>\n                <Typography color=\"textSecondary\">{transaction.accountName}</Typography>\n                <Typography color=\"textSecondary\">{transaction.plaidCategory}</Typography>\n                <Typography color=\"textSecondary\">{transaction.notes}</Typography>\n              </div>\n            </Grid>\n            <Grid item xs={3} sm={4} style={{ paddingLeft: '40px' }}>\n              <Typography>{`$${transaction.totalAmount}`}</Typography>\n              {+transaction.balanceAdjust && !expanded ? (\n                <Typography\n                  style={{\n                    color: +transaction.balanceAdjust > 0 ? 'green' : 'red',\n                  }}\n                >\n                  {`$${transaction.balanceAdjust}`}\n                </Typography>\n              ) : null}\n            </Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Grid container spacing={10}>\n            <Grid item xs={6} sm={4}>\n              <DebouncedTextField\n                loading={loading}\n                helperText={'notes'}\n                value={notes}\n                setter={(newValue) => {\n                  setNotes(newValue)\n                }}\n                onBounce={(newValue) =>\n                  updateTransaction({\n                    variables: { id: transaction.id, notes: newValue },\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <CategoryField\n                transaction={transaction}\n                selectableCategories={selectableCategories}\n              />\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <DebouncedTextField\n                type=\"number\"\n                loading={loading}\n                helperText=\"Balance Adjust\"\n                value={balanceAdjust}\n                setter={setBalanceAdjust}\n                onBounce={(newValue) => {\n                  updateTransaction({\n                    variables: { id: transaction.id, balanceAdjust: newValue },\n                  })\n                }}\n              />\n            </Grid>\n            <Grid item xs={6} sm={1} style={{ textAlign: 'right' }}>\n              <Fab\n                size=\"medium\"\n                color=\"secondary\"\n                aria-label=\"Delete\"\n                onClick={() =>\n                  archiveTransaction({\n                    variables: {\n                      id: transaction.id,\n                    },\n                  })\n                }\n              >\n                <Delete />\n              </Fab>\n            </Grid>\n          </Grid>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  )\n}\nconst areEqual = (last: ITransactionRowProps, next: ITransactionRowProps) => {\n  if (\n    _.isEqual(last.transaction, next.transaction) &&\n    last.expanded === next.expanded &&\n    last.selectableCategories.length === next.selectableCategories.length\n  ) {\n    return true\n  }\n  return false\n}\nconst TransactionRow = React.memo(TransactionRowComponent, areEqual)\n\n/*\n * This is a wrapper component that is used to control the expansion states of\n * the rows. We do not want a compolicated component to manage the expansion\n * state becaue the rerending will be too expensive.\n */\nexport const TransactionRows: React.FC<{\n  categories: Array<GetTransactions_categories>\n  transactions: Array<GetTransactions_transaction>\n}> = (props) => {\n  const [expanded, setExpanded] = React.useState<number | null>(null)\n  const handleChange = (eventId: number) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n    setExpanded(eventId)\n  }\n  return (\n    <>\n      {props.transactions.map((t) => {\n        return (\n          <TransactionRow\n            user_id={1}\n            selectableCategories={props.categories}\n            expanded={expanded === t.id}\n            key={t.id}\n            transaction={t}\n            onToggleExpansion={handleChange(t.id)}\n          />\n        )\n      })}\n    </>\n  )\n}\n","import * as React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport {\n  ListItemSecondaryAction,\n  ButtonGroup,\n  Button,\n  Tooltip,\n  Icon,\n  ListItemIcon,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@material-ui/core'\nimport { getEventButtonIcon, getEventIcon, getEventDescription } from './utils'\nimport { IEvent, ICheckPoint } from './types'\nimport {\n  QUERY as SIGN_CHECKPOINT_MUTATION,\n  SignCheckpoint,\n  SignCheckpointVariables,\n} from '@src/queries/__generated__/SignCheckpoint.hooks'\nimport { BASE_URL } from '@src/actions'\nimport { UrlStateContext } from '@src/Root/contexts'\nimport { EventType, UrlPathEnum } from '@src/types'\nimport { pushHistory } from '@src/history'\n\nexport const EventRow = (props: {\n  onFilterEvent: (string) => void\n  authToken: string\n  event: IEvent\n}) => {\n  const urlState = React.useContext(UrlStateContext)\n\n  const { event } = props\n  const disabled = urlState.event_id === `${event.eventType}-${event.id}`\n  if (event.eventType === EventType.CHECKPOINT) {\n    return (\n      <CheckpointListItem\n        onFilterEvent={props.onFilterEvent}\n        authToken={props.authToken}\n        disabled={disabled}\n        checkpoint={event as ICheckPoint}\n      />\n    )\n  }\n  const eventIcon = getEventIcon(event)\n  const onFilter = (e) => {\n    props.onFilterEvent(`${event.eventType}-${event.id}`)\n    pushHistory(UrlPathEnum.TransactionList, {\n      event_id: `${event.eventType}-${event.id}`,\n    })\n  }\n  const eventButtonIcon = getEventButtonIcon(event)\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilter}>\n      <ListItemIcon>\n        <Tooltip title={event.eventType || ''}>\n          <Icon color=\"primary\">{eventIcon}</Icon>\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(event.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{getEventDescription(event)}</Typography>\n      </ListItemText>\n      {eventButtonIcon ? (\n        <ListItemSecondaryAction>\n          <Button>\n            <Icon>{eventButtonIcon}</Icon>\n          </Button>\n        </ListItemSecondaryAction>\n      ) : null}\n    </ListItem>\n  )\n}\n\nexport const CheckpointListItem: React.FC<{\n  authToken: string\n  onFilterEvent: (string) => void\n  disabled: boolean\n  checkpoint: ICheckPoint\n}> = ({ onFilterEvent, authToken, checkpoint, disabled }) => {\n  const [signCheckpoint, { loading }] = useMutation<SignCheckpoint, SignCheckpointVariables>(\n    SIGN_CHECKPOINT_MUTATION,\n  )\n  const onFilter = (e) => {\n    onFilterEvent(`${checkpoint.eventType}-${checkpoint.id}`)\n    pushHistory(UrlPathEnum.TransactionList, {\n      event_id: `${checkpoint.eventType}-${checkpoint.id}`,\n    })\n  }\n  const description = checkpoint.signedTs\n    ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n        checkpoint.signedTs,\n      ).toLocaleDateString()}`\n    : 'Not Signed'\n\n  if (loading) {\n    return <div>Signing ...</div>\n  }\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilter}>\n      <ListItemIcon>\n        <Tooltip title={checkpoint.eventType || ''}>\n          {checkpoint.signedTs ? (\n            <Icon color=\"primary\">toll</Icon>\n          ) : (\n            <Icon style={{ color: 'green' }}>fiber_new</Icon>\n          )}\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(checkpoint.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{description}</Typography>\n      </ListItemText>\n      <ListItemSecondaryAction>\n        <ButtonGroup\n          color=\"secondary\"\n          variant=\"contained\"\n          size=\"small\"\n          aria-label=\"Small outlined button group\"\n        >\n          {checkpoint.signedTs ? null : (\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              onClick={() =>\n                signCheckpoint({\n                  variables: {\n                    id: checkpoint.id,\n                  },\n                })\n              }\n            >\n              <Icon>plus_one</Icon>\n            </Button>\n          )}\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            disabled={!sessionStorage.getItem('authToken')}\n            onClick={() => {\n              window.open(\n                `${BASE_URL}/RAHoliCy/checkpoint/${checkpoint.id}?token=${sessionStorage.getItem(\n                  'authToken',\n                )}`,\n                '_blank',\n              )\n            }}\n          >\n            <Icon>cloud_download</Icon>\n          </Button>\n        </ButtonGroup>\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n}\n","import { IStatement, IImportBatch, ICheckPoint, IEvent } from './types'\nimport { EventType } from '@src/types'\n\nexport const getEventDescription = (e: IEvent) => {\n  if (e.eventType === EventType.CHECKPOINT) {\n    const checkpoint = e as ICheckPoint\n    return checkpoint.signedTs\n      ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n          checkpoint.signedTs,\n        ).toLocaleDateString()}`\n      : 'Not Signed'\n  }\n  if (e.eventType === EventType.BATCH_IMPORT) {\n    const batch_import = e as IImportBatch\n    return `${batch_import.origin}: ${batch_import.startDate.slice(\n      0,\n      10,\n    )} TO ${batch_import.endDate.slice(0, 10)}`\n  }\n  if (e.eventType === EventType.STATEMENT_UPLOAD) {\n    const upload = e as IStatement\n    return `${upload.source}: ${upload.firstDate} TO ${upload.lastDate}`\n  }\n  throw new Error('not possible')\n}\nexport const getEventIcon = (event: IEvent) => {\n  if (event.eventType === EventType.CHECKPOINT) {\n    return 'toll'\n  }\n  if (event.eventType === EventType.BATCH_IMPORT) {\n    const batch_import = event as IImportBatch\n    return { plaid: 'grid_on', wave: 'waves' }[batch_import.origin]\n  }\n  if (event.eventType === EventType.STATEMENT_UPLOAD) {\n    // const upload = memory as IStatement\n    return 'cloud_upload'\n  }\n  throw new Error('not possible')\n}\n\nexport const getEventButtonIcon = (event: IEvent) => {\n  if (event.eventType === EventType.CHECKPOINT) {\n    return 'plus_one'\n  }\n  return null\n}\n","import { LinearProgress, List } from '@material-ui/core'\nimport * as React from 'react'\nimport { EventRow } from './EventRow'\nimport { useApolloQuery } from '@src/queries/__generated__/GetEvents.hooks'\n\ninterface Prop {\n  onFilterEvent: (string) => void\n}\nexport const Timeline: React.FC<Prop> = (props) => {\n  const { loading, error, data } = useApolloQuery()\n  if (loading) return <LinearProgress />\n  if (error) return <p>Error :(</p>\n  if (!data) throw new Error('bad')\n  return (\n    <div>\n      <List>\n        {data.eventList.events.map((e, index) => {\n          return e ? (\n            <EventRow onFilterEvent={props.onFilterEvent} authToken={''} event={e} key={index} />\n          ) : null\n        })}\n      </List>\n    </div>\n  )\n}\n","import { LinearProgress, Button, Grid } from '@material-ui/core'\nimport * as React from 'react'\nimport { ImportForm } from './ImportForm'\nimport { NewStatementForm } from './NewStatementForm'\n\nimport { NewTransactionForm } from './NewTransactionForm'\nimport { TransactionListAppBar } from './TransactionListAppBar'\nimport { TransactionRows } from './TransactionRow'\nimport { useApolloQuery } from '@src/queries/__generated__/GetTransactions.hooks'\nimport { Timeline } from '@src/Root/Timeline'\n\ntype FormType = 'transaction' | 'plaid' | 'statement' | 'wave'\n\nconst limit = 40\n\nexport const TransactionList = (props: {}) => {\n  console.log('rerender entire list page')\n  const [showTimeline, setShowTimeline] = React.useState(true)\n  const [formType, setFormType] = React.useState<FormType | null>(null)\n\n  const { loading: isTransactionLoading, error, data, fetchMore, refetch } = useApolloQuery({\n    variables: {\n      filters: {\n        offset: 0,\n        limit,\n      },\n    },\n  })\n  if (error) {\n    return <div>error ...</div>\n  }\n\n  const transactions = data?.transactions || []\n  const categories = data?.categories || []\n\n  const loadMoreTransactions = () => {\n    fetchMore({\n      variables: { filters: { offset: transactions.length || -1, limit } },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev\n        return Object.assign({}, prev, {\n          transactions: [...prev.transactions, ...fetchMoreResult.transactions],\n        })\n      },\n    })\n  }\n\n  const showForm = (formType: FormType) => {\n    setFormType(formType)\n  }\n  return (\n    <div style={{ maxWidth: '100%' }}>\n      <TransactionListAppBar\n        onSearch={(filters) => {\n          refetch({\n            filters: {\n              offset: transactions.length,\n              limit,\n              isShared: filters.isShared,\n              categoryId: filters.categoryId,\n              searchText: filters.searchText,\n            },\n          })\n        }}\n        toggleTimeline={() => setShowTimeline(true)}\n        showForm={showForm}\n        balance={data?.balance || '?'}\n      />\n      <div\n        style={{\n          height: window.innerHeight - 70,\n          overflow: 'scroll',\n        }}\n      >\n        <Grid container>\n          {showTimeline ? (\n            <Grid item sm={3}>\n              <Timeline\n                onFilterEvent={(eventId: string) =>\n                  refetch({\n                    filters: { offset: transactions.length, limit, eventId },\n                  })\n                }\n              />\n            </Grid>\n          ) : null}\n          <Grid item sm={showTimeline ? 9 : 12}>\n            <div style={{ marginBottom: '20px' }}>\n              {formType === 'transaction' ? (\n                <NewTransactionForm\n                  selectableCategories={categories || []}\n                  onClose={() => setFormType(null)}\n                />\n              ) : null}\n              {formType === 'statement' ? (\n                <NewStatementForm onClose={() => setFormType(null)} />\n              ) : null}\n              {formType === 'wave' ? <ImportForm onClose={() => setFormType(null)} /> : null}\n            </div>\n            {isTransactionLoading ? (\n              <LinearProgress />\n            ) : (\n              <TransactionRows categories={categories || []} transactions={transactions || []} />\n            )}\n            <Button fullWidth size=\"large\" color=\"secondary\" onClick={loadMoreTransactions}>\n              ({transactions.length}) Click to Load More ...\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  )\n}\n","import { Typography, Icon, ListItemIcon, Select, MenuItem } from '@material-ui/core'\nimport * as React from 'react'\n\ninterface IIconSelect {\n  initialValue: string | null\n  onChange: (event, child) => void\n  /*\n  options: Array<{\n    value: number | string\n    label: string\n  }>\n   */\n}\nconst ICON_IDS = [\n  'attach_money',\n  'beach_access',\n  'cake',\n  'compare_arrows',\n  'free_breakfast',\n  'gavel',\n  'home',\n  'local_activity',\n  'local_bar',\n  'local_car_wash',\n  'local_gas_station',\n  'local_grocery_store',\n  'local_hospital',\n  'local_parking',\n  'local_taxi',\n  'motorcycle',\n  'movie',\n  'not_interested',\n  'perm_scan_wifi',\n  'phone_iphone',\n  'power',\n  'help',\n  'restaurant',\n  'rowing',\n  'school',\n  'settings_input_component',\n  'settings_input_hdmi',\n  'shopping_basket',\n  'subway',\n  'theaters',\n  'pets',\n]\nexport const IconSelect: React.FC<IIconSelect> = ({ initialValue, onChange }) => {\n  return (\n    <Select onChange={onChange} value={initialValue}>\n      {ICON_IDS.map((iconId) => (\n        <MenuItem key={iconId} value={iconId}>\n          <ListItemIcon>\n            <Icon color=\"primary\">{iconId}</Icon>\n          </ListItemIcon>\n          <Typography style={{ float: 'right' }}>{iconId}</Typography>\n        </MenuItem>\n      ))}\n    </Select>\n  )\n}\n","import * as React from 'react'\n\nimport {\n  makeStyles,\n  TextField,\n  ListItemSecondaryAction,\n  IconButton,\n  Theme,\n  createStyles,\n  Icon,\n  ListItemIcon,\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core'\nimport { ExpandMore, ExpandLess } from '@material-ui/icons'\nimport { IconSelect } from '@src/components/IconSelect'\n\nimport { ITreeNode } from '@src/types'\n\ninterface ITreeProps {\n  node: ITreeNode\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n  level?: number\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    node: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n)\n\nexport const Tree: React.FC<ITreeProps> = (props) => {\n  const { node, level = 0, onSelectIcon, onSaveNode } = props\n  const classes = useStyles()\n\n  const [open, setOpen] = React.useState(true)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n  return (\n    <List component=\"nav\" className={classes.node}>\n      <ListItem button onClick={handleClick} style={{ paddingLeft: `${32 * level}px` }}>\n        <ListItemIcon>\n          <Icon color=\"secondary\">{node.mui_icon_id}</Icon>\n        </ListItemIcon>\n        <ListItemText primary={node.name}></ListItemText>\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {node.children.map((child) =>\n            child.children.length ? (\n              <Tree\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ) : (\n              <NodeListItem\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ),\n          )}\n        </List>\n      </Collapse>\n    </List>\n  )\n}\n\nconst NodeListItem: React.FC<{\n  node: ITreeNode\n  level: number\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n}> = ({ node, level, onSaveNode, onSelectIcon }) => {\n  const [editable, setEditable] = React.useState(false)\n  const [pickingIcon, setPickingIcon] = React.useState(false)\n  const [nodeName, setNodeName] = React.useState(node.name)\n  const [iconId, setIconId] = React.useState(node.mui_icon_id)\n  return (\n    <>\n      <ListItem\n        key={node.id}\n        dense\n        button\n        role={undefined}\n        style={{ paddingLeft: `${32 * (level + 1)}px` }}\n      >\n        {editable ? (\n          <TextField\n            autoFocus={true}\n            value={nodeName}\n            onChange={(event) => setNodeName(event.target.value)}\n            onBlur={() => {\n              setEditable(false)\n              onSaveNode(node.id, nodeName)\n            }}\n          />\n        ) : (\n          <>\n            {pickingIcon ? (\n              <IconSelect\n                onChange={(e, child) => {\n                  onSelectIcon(node.id, e.target.value)\n                  setIconId(e.target.value)\n                  setPickingIcon(false)\n                }}\n                initialValue={iconId}\n              ></IconSelect>\n            ) : (\n              <ListItemText onClick={() => setEditable(true)} primary={nodeName}></ListItemText>\n            )}\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => setPickingIcon(true)} edge=\"end\">\n                <Icon color=\"primary\">{iconId}</Icon>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </>\n        )}\n      </ListItem>\n    </>\n  )\n}\n","import { GetCategories_categories } from 'src/queries/__generated__/GetCategories.hooks'\n\ninterface Node extends GetCategories_categories {\n  children: Array<Node>\n}\n\n/*\n * Recursive: add a node to a tree. If node has no parent, add to root.\n * Otherwise, add to its parent\n */\nconst addNode = (node: Node, tree, visited: Array<Node>, remaining: Array<Node>) => {\n  // Add to root\n  visited.push(node)\n  const p = visited.find((x) => x.id === node.parent_id)\n\n  if (!node.parent_id) {\n    tree[node.id] = node\n    return\n  } else if (p) {\n    // Find parent who is in visited attach\n    const parentNode = p\n    if (!parentNode.children.find((x) => x.id === node.id)) {\n      parentNode.children.push(node)\n    }\n    return\n  } else {\n    //parent is not visited either\n    const parentNode = remaining.find((v) => v.id === node.parent_id)\n    if (!parentNode) {\n      throw new Error('no parent cat')\n    }\n    if (!parentNode.children.find((x) => x.id === node.id)) {\n      parentNode.children.push(node)\n    }\n    // const parentNode = { ...parentCat, children: [node] }\n    return addNode(parentNode, tree, visited, remaining)\n  }\n}\n\nexport const getCategoryTree = (categories: Array<GetCategories_categories>) => {\n  const tree = {}\n  const visited: Array<Node> = []\n  const remaining = categories.map((c) => {\n    return { ...c, children: [] }\n  })\n\n  while (remaining.length > 0) {\n    // Take node out of remaining\n    const node = remaining.pop()\n    if (!node) throw new Error()\n\n    addNode(node, tree, visited, remaining)\n  }\n\n  return tree\n}\n\n/*\n\nconst testData = [\n  {\n    id: 1,\n    description: 'Retail',\n    name: 'RETAIL',\n    parent_id: 42,\n    mui_icon_id: 'shopping_basket',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 2,\n    description: 'Clothing Cosmetic',\n    name: 'CLOTHING_COSMETIC',\n    parent_id: 1,\n    mui_icon_id: 'shopping_basket',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 3,\n    description: 'Electronic',\n    name: 'ELECTRONIC',\n    parent_id: 1,\n    mui_icon_id: 'settings_input_hdmi',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 4,\n    description: 'Sport',\n    name: 'SPORT',\n    parent_id: 1,\n    mui_icon_id: 'rowing',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 5,\n    description: 'Gift',\n    name: 'GIFT',\n    parent_id: 1,\n    mui_icon_id: 'cake',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 6,\n    description: 'Home',\n    name: 'HOME',\n    parent_id: 1,\n    mui_icon_id: 'home',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 8,\n    description: 'Restaurant',\n    name: 'RESTAURANT',\n    parent_id: 42,\n    mui_icon_id: 'restaurant',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 9,\n    description: 'Grocery',\n    name: 'GROCERY',\n    parent_id: 42,\n    mui_icon_id: 'local_grocery_store',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 10,\n    description: 'Liquor',\n    name: 'LIQUOR',\n    parent_id: 42,\n    mui_icon_id: 'local_bar',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 11,\n    description: 'Lunch',\n    name: 'LUNCH',\n    parent_id: 8,\n    mui_icon_id: 'restaurant',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 12,\n    description: 'Dinner',\n    name: 'DINNER',\n    parent_id: 8,\n    mui_icon_id: 'restaurant',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 13,\n    description: 'Breakfast',\n    name: 'BREAKFAST',\n    parent_id: 8,\n    mui_icon_id: 'free_breakfast',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 14,\n    description: 'Tranportaion',\n    name: 'TRANPORTAION',\n    parent_id: 42,\n    mui_icon_id: 'local_taxi',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 15,\n    description: 'Gas',\n    name: 'GAS',\n    parent_id: 14,\n    mui_icon_id: 'local_gas_station',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 16,\n    description: 'Parking',\n    name: 'PARKING',\n    parent_id: 14,\n    mui_icon_id: 'local_parking',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 17,\n    description: 'Public Transit',\n    name: 'PUBLIC_TRANSIT',\n    parent_id: 14,\n    mui_icon_id: 'subway',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 18,\n    description: 'Health',\n    name: 'HEALTH',\n    parent_id: 42,\n    mui_icon_id: 'local_hospital',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 19,\n    description: 'Medical',\n    name: 'MEDICAL',\n    parent_id: 18,\n    mui_icon_id: 'local_hospital',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 21,\n    description: 'Shelter',\n    name: 'SHELTER',\n    parent_id: 42,\n    mui_icon_id: 'home',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 22,\n    description: 'Mortgage',\n    name: 'MORTGAGE',\n    parent_id: 21,\n    mui_icon_id: 'home',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 24,\n    description: 'Down Payment',\n    name: 'DOWN_PAYMENT',\n    parent_id: 21,\n    mui_icon_id: 'home',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 26,\n    description: 'Automobile',\n    name: 'AUTOMOBILE',\n    parent_id: 42,\n    mui_icon_id: 'motorcycle',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 27,\n    description: 'Car Insurance',\n    name: 'CAR_INSURANCE',\n    parent_id: 26,\n    mui_icon_id: 'local_car_wash',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 30,\n    description: 'Maintanence',\n    name: 'MAINTANENCE',\n    parent_id: 26,\n    mui_icon_id: 'local_car_wash',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 31,\n    description: 'Utility',\n    name: 'UTILITY',\n    parent_id: 42,\n    mui_icon_id: 'settings_input_component',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 32,\n    description: 'Hydro',\n    name: 'HYDRO',\n    parent_id: 31,\n    mui_icon_id: 'power',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 33,\n    description: 'Mobile',\n    name: 'MOBILE',\n    parent_id: 31,\n    mui_icon_id: 'phone_iphone',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 34,\n    description: 'Internet',\n    name: 'INTERNET',\n    parent_id: 31,\n    mui_icon_id: 'perm_scan_wifi',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 35,\n    description: 'Entertainment',\n    name: 'ENTERTAINMENT',\n    parent_id: 42,\n    mui_icon_id: 'theaters',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 36,\n    description: 'Movie',\n    name: 'MOVIE',\n    parent_id: 35,\n    mui_icon_id: 'movie',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 37,\n    description: 'Miscellaneous',\n    name: 'MISCELLANEOUS',\n    parent_id: 42,\n    mui_icon_id: '',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 38,\n    description: 'Education',\n    name: 'EDUCATION',\n    parent_id: 42,\n    mui_icon_id: 'school',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 39,\n    description: 'Covernment Fees',\n    name: 'FEES_CHARGES',\n    parent_id: 42,\n    mui_icon_id: 'gavel',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 40,\n    description: 'Income',\n    name: 'INCOME',\n    parent_id: null,\n    mui_icon_id: 'attach_money',\n    is_selectable: true,\n    is_active: true,\n  },\n  {\n    id: 41,\n    description: 'Transfer',\n    name: 'TRANSFER',\n    parent_id: 18,\n    mui_icon_id: 'compare_arrows',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 42,\n    description: 'Expense',\n    name: 'EXPENSE',\n    parent_id: null,\n    mui_icon_id: '',\n    is_selectable: true,\n    is_active: true,\n  },\n  {\n    id: 46,\n    description: 'Vacation',\n    name: 'VACATION',\n    parent_id: 35,\n    mui_icon_id: 'beach_access',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 48,\n    description: 'Activity',\n    name: 'ACTIVITY',\n    parent_id: 35,\n    mui_icon_id: 'local_activity',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 49,\n    description: 'Ignore',\n    name: 'IGNORE',\n    parent_id: null,\n    mui_icon_id: 'not_interested',\n    is_selectable: true,\n    is_active: true,\n  },\n  {\n    id: 50,\n    description: 'Massage & Spa',\n    name: 'MASSAGE_SPA',\n    parent_id: 18,\n    mui_icon_id: 'spa',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 51,\n    description: 'Donation',\n    name: 'DONATION',\n    parent_id: 42,\n    mui_icon_id: 'pets',\n    is_selectable: false,\n    is_active: true,\n  },\n]\n*/\n","import * as React from 'react'\nimport { Tree } from './Tree'\nimport { getCategoryTree } from './selectors'\nimport { useApolloQuery } from '@src/queries/__generated__/GetCategories.hooks'\n\nexport const CategoryPage: React.FC<{}> = (props) => {\n  const { data } = useApolloQuery()\n\n  if (!data) {\n    return <div>loading...</div>\n  }\n  const tree = getCategoryTree(data.categories)\n  const root = {\n    id: 0,\n    name: 'root',\n    mui_icon_id: null,\n    children: Object.keys(tree).map((k) => tree[k]),\n  }\n\n  return (\n    <Tree\n      onSaveNode={(id: number, name: string) => console.log(id, name)}\n      onSelectIcon={(id: number, iconId: string) => console.log(id, iconId)}\n      node={root}\n    />\n  )\n}\n","import { createBrowserHistory } from 'history'\nimport { UrlPathEnum } from '@src/types'\n\nexport const history = createBrowserHistory()\nexport const pushHistory = (\n  pathname: UrlPathEnum,\n  urlState?: {} | null,\n  state: {} | null = null,\n) => {\n  const searchString =\n    urlState && urlState && Object.keys(urlState).length\n      ? '?urlState=' + JSON.stringify(urlState)\n      : ''\n  return history.push({\n    pathname,\n    search: searchString,\n    state,\n  })\n}\n\nexport const getPathName = () => {\n  const path = history.location.pathname\n  return path.endsWith('/') ? path.slice(0, path.length - 1) || '/' : path\n}\n","import { List, ListItem, ListItemText } from '@material-ui/core'\nimport { Route, Switch } from 'react-router'\nimport * as React from 'react'\nimport { hot } from 'react-hot-loader'\nimport { ApolloProvider } from '@apollo/react-hooks'\n\nimport { connect } from 'react-redux'\nimport { UrlStateContext } from './contexts'\nimport { CategoryPage } from '@src/CategoryPage'\nimport { UrlPathEnum } from '@src/types'\nimport { getPathName, pushHistory } from '@src/history'\nimport { LoginPage } from '@src/LoginPage'\nimport { TransactionChart } from '@src/TransactionChart'\nimport { PnlChart } from '@src/Report/PnlChart'\nimport { parseUrlState } from '@src/selectors'\nimport { TransactionList } from '@src/TransactionList'\nimport { client } from '@src/gqlClient'\n\ninterface StateProps {\n  isAuthenticated: boolean\n  urlState: any\n}\n\ntype Prop = StateProps\n\nconst RootComponent: React.FC<Prop> = (props) => {\n  return (\n    <div style={{ maxWidth: '100%', flex: 8 }}>\n      <UrlStateContext.Provider value={props.urlState}>\n        <Body isAuthenticated={props.isAuthenticated} />\n      </UrlStateContext.Provider>\n    </div>\n  )\n}\n\nexport const Root = connect<StateProps, null>((state, ownProps) => {\n  return {\n    isAuthenticated: !!sessionStorage.getItem('authToken'),\n    urlState: parseUrlState(),\n    state,\n  }\n}, null)(RootComponent)\n\nconst PageList: React.FC = () => {\n  const UrlPathsMap = {\n    TransactionList,\n    TransactionChart,\n    CategoryPage,\n    PnlChart,\n  }\n  return (\n    <List>\n      {Object.keys(UrlPathsMap).map((c, index) => {\n        return (\n          <ListItem key={index} button onClick={() => pushHistory(c as UrlPathEnum)}>\n            <ListItemText primary={c} />\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n\nclass Body extends React.Component<{ isAuthenticated: boolean }> {\n  render() {\n    if (getPathName() === UrlPathEnum.LoginPage) {\n      return <LoginPage />\n    }\n    if (!this.props.isAuthenticated) {\n      console.warn('not authenticated!!!')\n      pushHistory(UrlPathEnum.LoginPage)\n      return <div />\n    }\n    if (getPathName() === '/goTIOnaTErYeRsUraYhOMEO' || getPathName() === UrlPathEnum.Root) {\n      return <PageList />\n    }\n    if (getPathName() === UrlPathEnum.TransactionList) {\n      return <TransactionList />\n    }\n    if (getPathName() === UrlPathEnum.TransactionChart) {\n      return <TransactionChart />\n    }\n    if (getPathName() === UrlPathEnum.CategoryPage) {\n      return <CategoryPage />\n    }\n    if (getPathName() === UrlPathEnum.PnlChart) {\n      return <PnlChart />\n    }\n\n    throw new Error(`Invalid paths: ${getPathName()}`)\n  }\n}\nexport const App = hot(module)(() => (\n  <ApolloProvider client={client}>\n    <Switch>\n      <Route path=\"/\" component={Root} />\n    </Switch>\n  </ApolloProvider>\n))\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport { GetCategories } from '@src/queries/__generated__/GetCategories'\nimport GetCategories__QUERY from '@src/queries/GetCategories.graphql'\n\nexport * from '@src/queries/__generated__/GetCategories'\n\nexport const QUERY = GetCategories__QUERY\nexport type GetCategoriesVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(options?: QueryHookOptions<GetCategories, GetCategoriesVariables>) {\n  return useQuery<GetCategories, GetCategoriesVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetCategories\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"parent_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"mui_icon_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_selectable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":137}};\n    doc.loc.source = {\"body\":\"query GetCategories {\\n  categories {\\n    id\\n    description\\n    name\\n    parent_id\\n    mui_icon_id\\n    is_selectable\\n    is_active\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetCategories\"] = oneQuery(doc, \"GetCategories\");\n        \n","import { Button } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport * as React from 'react'\n\nimport { pushHistory } from '@src/history'\nimport { UrlPathEnum } from '@src/types'\nimport { BASE_URL } from '@src/actions'\n\nexport const LoginPage = (props) => {\n  const [username, setUsername] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const [errorMessage, setErrorMessage] = React.useState(null)\n  const submitLogin = () => {\n    fetch(`${BASE_URL}/goTIOnaTErYeRsUraYhOMEO/login`, {\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.code === 200) {\n          sessionStorage.setItem('authToken', data.token)\n          // Redirect to root\n          pushHistory(UrlPathEnum.Root)\n        } else {\n          console.error(data)\n          setErrorMessage(data.message)\n        }\n      })\n  }\n  return (\n    <div\n      style={{\n        height: `${window.innerHeight}px`,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <TextField label=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n      <br />\n      <TextField\n        error={!!errorMessage}\n        helperText={errorMessage || ''}\n        onChange={(e) => setPassword(e.target.value)}\n        type=\"password\"\n        label=\"Password\"\n        onKeyPress={(e) => {\n          if (e.charCode == 13) {\n            submitLogin()\n          }\n        }}\n      />\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={() => submitLogin()}>\n        Login\n      </Button>\n    </div>\n  )\n}\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport {\n  GetProfitAndLossChart,\n  GetProfitAndLossChartVariables,\n} from '@src/queries/__generated__/GetProfitAndLossChart'\nimport GetProfitAndLossChart__QUERY from '@src/queries/GetProfitAndLossChart.graphql'\n\nexport * from '@src/queries/__generated__/GetProfitAndLossChart'\n\nexport const QUERY = GetProfitAndLossChart__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetProfitAndLossChart, GetProfitAndLossChartVariables>,\n) {\n  return useQuery<GetProfitAndLossChart, GetProfitAndLossChartVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetProfitAndLossChart\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"profitAndLossChart\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"series\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"y\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":215}};\n    doc.loc.source = {\"body\":\"query GetProfitAndLossChart($startDate: String!, $endDate: String!) {\\n  profitAndLossChart(startDate: $startDate, endDate: $endDate) {\\n    series {\\n      name\\n      data {\\n        name\\n        y\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetProfitAndLossChart\"] = oneQuery(doc, \"GetProfitAndLossChart\");\n        \n","import querystring from 'querystring'\nimport { history } from '@src/history'\n\nexport function parseUrlState() {\n  const params = parseSearch()\n  if (params && params.urlState) {\n    return JSON.parse(params.urlState as string)\n  }\n  return {}\n}\nexport function parseSearch() {\n  return querystring.parse(history.location.search.split('?')[1])\n}\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  ImportWaveTransactions,\n  ImportWaveTransactionsVariables,\n} from '@src/queries/__generated__/ImportWaveTransactions'\nimport ImportWaveTransactions__QUERY from '@src/queries/ImportWaveTransactions.graphql'\n\nexport * from '@src/queries/__generated__/ImportWaveTransactions'\n\nexport const QUERY = ImportWaveTransactions__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ImportWaveTransactions, ImportWaveTransactionsVariables>,\n) {\n  return useMutation<ImportWaveTransactions, ImportWaveTransactionsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ImportWaveTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"importFromWave\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalAmount\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issuedDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpointId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"statementId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"plaidCategory\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"editable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"originPayload\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"accountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"prediction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"split\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":555}};\n    doc.loc.source = {\"body\":\"mutation ImportWaveTransactions($startDate: String!, $endDate: String!) {\\n  importFromWave(startDate: $startDate, endDate: $endDate) {\\n    isOk\\n    transactions {\\n      id\\n      lenderId\\n      totalAmount\\n      issuedDate\\n      notes\\n      categoryId\\n      checkpointId\\n      statementId\\n      merchantName\\n      balanceAdjust\\n      createdById\\n      lenderId\\n      plaidCategory\\n      editable\\n      originPayload {\\n        __typename\\n      }\\n      accountName\\n      prediction {\\n        categoryId\\n        categoryName\\n        split\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"ImportWaveTransactions\"] = oneQuery(doc, \"ImportWaveTransactions\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"TransactionFilters\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalAmount\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issuedDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpointId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"statementId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"plaidCategory\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"editable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"originPayload\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IWaveTransaction\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"anchorAccountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"dateCreated\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"direction\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionDescription\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionAmount\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"accountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"prediction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"split\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"parent_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"mui_icon_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_selectable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":761}};\n    doc.loc.source = {\"body\":\"query GetTransactions($filters: TransactionFilters!) {\\n  balance\\n  transactions(filters: $filters) {\\n    id\\n    lenderId\\n    totalAmount\\n    issuedDate\\n    notes\\n    categoryId\\n    checkpointId\\n    statementId\\n    merchantName\\n    balanceAdjust\\n    createdById\\n    lenderId\\n    plaidCategory\\n    editable\\n    originPayload {\\n      __typename\\n      ... on IWaveTransaction {\\n        anchorAccountName\\n        dateCreated\\n        direction\\n        transactionDescription\\n        transactionDate\\n        transactionId\\n        transactionAmount\\n      }\\n    }\\n    accountName\\n    prediction {\\n      categoryId\\n      categoryName\\n      split\\n    }\\n  }\\n  categories {\\n    id\\n    description\\n    name\\n    parent_id\\n    mui_icon_id\\n    is_selectable\\n    is_active\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetTransactions\"] = oneQuery(doc, \"GetTransactions\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  CreateTransaction,\n  CreateTransactionVariables,\n} from '@src/queries/__generated__/CreateTransaction'\nimport CreateTransaction__QUERY from '@src/queries/CreateTransaction.graphql'\n\nexport * from '@src/queries/__generated__/CreateTransaction'\n\nexport const QUERY = CreateTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<CreateTransaction, CreateTransactionVariables>,\n) {\n  return useMutation<CreateTransaction, CreateTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransactionInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalAmount\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issuedDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpointId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"statementId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"plaidCategory\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"editable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"originPayload\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"accountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"prediction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"split\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":518}};\n    doc.loc.source = {\"body\":\"mutation CreateTransaction($input: CreateTransactionInput!) {\\n  createTransaction(input: $input) {\\n    isOk\\n    transaction {\\n      id\\n      lenderId\\n      totalAmount\\n      issuedDate\\n      notes\\n      categoryId\\n      checkpointId\\n      statementId\\n      merchantName\\n      balanceAdjust\\n      createdById\\n      lenderId\\n      plaidCategory\\n      editable\\n      originPayload {\\n        __typename\\n      }\\n      accountName\\n      prediction {\\n        categoryId\\n        categoryName\\n        split\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"CreateTransaction\"] = oneQuery(doc, \"CreateTransaction\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalAmount\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issuedDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpointId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"statementId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"plaidCategory\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"editable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"originPayload\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"accountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"prediction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"split\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":699}};\n    doc.loc.source = {\"body\":\"mutation UpdateTransaction(\\n  $id: Int!\\n  $categoryId: Int\\n  $notes: String\\n  $merchantName: String\\n  $balanceAdjust: String\\n) {\\n  updateTransaction(\\n    id: $id\\n    categoryId: $categoryId\\n    notes: $notes\\n    balanceAdjust: $balanceAdjust\\n    merchantName: $merchantName\\n  ) {\\n    isOk\\n    transaction {\\n      id\\n      lenderId\\n      totalAmount\\n      issuedDate\\n      notes\\n      categoryId\\n      checkpointId\\n      statementId\\n      merchantName\\n      balanceAdjust\\n      createdById\\n      lenderId\\n      plaidCategory\\n      editable\\n      originPayload {\\n        __typename\\n      }\\n      accountName\\n      prediction {\\n        categoryId\\n        categoryName\\n        split\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"UpdateTransaction\"] = oneQuery(doc, \"UpdateTransaction\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  ArchiveTransaction,\n  ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction'\nimport ArchiveTransaction__QUERY from '@src/queries/ArchiveTransaction.graphql'\n\nexport * from '@src/queries/__generated__/ArchiveTransaction'\n\nexport const QUERY = ArchiveTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ArchiveTransaction, ArchiveTransactionVariables>,\n) {\n  return useMutation<ArchiveTransaction, ArchiveTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ArchiveTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"archiveTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":88}};\n    doc.loc.source = {\"body\":\"mutation ArchiveTransaction($id: Int!) {\\n  archiveTransaction(id: $id) {\\n    isOk\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"ArchiveTransaction\"] = oneQuery(doc, \"ArchiveTransaction\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport { SignCheckpoint, SignCheckpointVariables } from '@src/queries/__generated__/SignCheckpoint'\nimport SignCheckpoint__QUERY from '@src/queries/SignCheckpoint.graphql'\n\nexport * from '@src/queries/__generated__/SignCheckpoint'\n\nexport const QUERY = SignCheckpoint__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<SignCheckpoint, SignCheckpointVariables>,\n) {\n  return useMutation<SignCheckpoint, SignCheckpointVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"SignCheckpoint\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signCheckpoint\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpoint\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBy\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"groupId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":176}};\n    doc.loc.source = {\"body\":\"mutation SignCheckpoint($id: Int!) {\\n  signCheckpoint(id: $id) {\\n    isOk\\n    checkpoint {\\n      id\\n      signedTs\\n      signedBy\\n      groupId\\n      signedBalance\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"SignCheckpoint\"] = oneQuery(doc, \"SignCheckpoint\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport { GetEvents } from '@src/queries/__generated__/GetEvents'\nimport GetEvents__QUERY from '@src/queries/GetEvents.graphql'\n\nexport * from '@src/queries/__generated__/GetEvents'\n\nexport const QUERY = GetEvents__QUERY\nexport type GetEventsVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(options?: QueryHookOptions<GetEvents, GetEventsVariables>) {\n  return useQuery<GetEvents, GetEventsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetEvents\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventList\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"events\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ICheckPoint\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IImportBatch\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"origin\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IStatement\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"firstDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lastDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"source\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":441}};\n    doc.loc.source = {\"body\":\"query GetEvents {\\n  eventList {\\n    events {\\n      ... on ICheckPoint {\\n        id\\n        eventType\\n        createdTs\\n        signedTs\\n        signedBalance\\n      }\\n      ... on IImportBatch {\\n        id\\n        eventType\\n        createdTs\\n        origin\\n        startDate\\n        endDate\\n      }\\n      ... on IStatement {\\n        id\\n        eventType\\n        createdTs\\n        firstDate\\n        lastDate\\n        source\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetEvents\"] = oneQuery(doc, \"GetEvents\");\n        \n","import { InMemoryCache, IntrospectionFragmentMatcher } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n\nimport { ApolloClient as AC } from 'apollo-client'\nimport { concat } from 'apollo-link'\nimport { onError } from 'apollo-link-error'\nimport { HttpLink } from 'apollo-link-http'\nimport { BASE_URL } from '@src/actions'\n\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\n  introspectionQueryResultData: {\n    __schema: {\n      types: [],\n    },\n  },\n})\n\nexport const errorLink = onError(({ graphQLErrors, networkError }) => {\n  // NO-op for now\n  if (graphQLErrors)\n    graphQLErrors.forEach((gqlError) => {\n      if (gqlError.extensions && gqlError.extensions.code == '401') {\n        window.location.href = '/LoginPage'\n        console.error('Authenticated')\n      }\n    })\n\n  if (networkError) console.error(`[Network error]: ${networkError}`)\n})\n\nconst getLink = () => {\n  return concat(authLink, errorLink).concat(\n    new HttpLink({\n      uri: `${BASE_URL}/RAHoliCy/graphql`,\n      headers: {\n        authorization: `Bearer ${sessionStorage.getItem('authToken')}`,\n      },\n    }),\n  )\n}\nconst authLink = setContext((_, { headers }) => {\n  const token = sessionStorage.getItem('authToken')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  }\n})\n\nexport const client = new AC({\n  link: getLink(),\n  cache: new InMemoryCache({\n    fragmentMatcher,\n  }),\n})\n","export function stringToDate(dateString: string): Date {\n  const [year, month, day] = dateString.split('-').map((v) => parseInt(v))\n  const ret = new Date(year, month - 1, day)\n  return ret\n}\nexport function formatDate(d: string): string {\n  const date = new Date(d)\n  return date.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    timeZone: 'UTC',\n  })\n}\n\nexport const getIsoDateString = (d: Date) => {\n  const year = d.getFullYear()\n  const month = d.getMonth() < 9 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1\n  const day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport function getToday(): string {\n  const today = new Date()\n  const year = today.getFullYear()\n  const month = today.getMonth() < 9 ? '0' + (today.getMonth() + 1) : today.getMonth() + 1\n  const day = today.getDate() < 10 ? '0' + today.getDate() : today.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport interface Identifiable {\n  id: string | number\n}\nexport const mergeArrays = <T extends Identifiable>(\n  existing: Array<T>,\n  incoming: Array<T>,\n  prependOrAppend: 'prepend' | 'append',\n): Array<T> => {\n  return incoming.reduce(\n    function (accumulator: Array<T>, value: T) {\n      const index = existing.findIndex((x) => x.id === value.id)\n      if (index >= 0) {\n        const ret = [\n          ...accumulator.slice(0, index),\n          value,\n          ...accumulator.slice(index + 1, accumulator.length),\n        ]\n        return ret\n      } else {\n        return prependOrAppend === 'append' ? [...accumulator, value] : [value, ...accumulator]\n      }\n    },\n    [...existing],\n  )\n}\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport {\n  GetTransactions,\n  GetTransactionsVariables,\n} from '@src/queries/__generated__/GetTransactions'\nimport GetTransactions__QUERY from '@src/queries/GetTransactions.graphql'\n\nexport * from '@src/queries/__generated__/GetTransactions'\n\nexport const QUERY = GetTransactions__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetTransactions, GetTransactionsVariables>,\n) {\n  return useQuery<GetTransactions, GetTransactionsVariables>(QUERY, options)\n}\n","import * as _ from 'lodash'\nimport { combineReducers } from 'redux'\n\nexport const initialState = {}\n\nfunction createReducer(initialState, handlers) {\n  return function reducer(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action)\n    } else {\n      return state\n    }\n  }\n}\n\nconst snacks = createReducer([], {\n  EAT_SNACK: (snacks) => [...snacks.slice(1)],\n  ADD_SNACK: (snacks, action) => [...snacks, action.snack],\n})\n\nconst reducers = combineReducers({\n  snacks,\n})\n\nexport default reducers\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport { Router } from 'react-router'\nimport { history } from './history'\n\nimport { configureStore } from './configureStore'\nimport { App } from '@src/Root'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n)\n","import { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nexport const configureStore = (initialState?) => {\n  let middleware = applyMiddleware(thunk, logger())\n  if (process.env.NODE_ENV !== 'production') {\n    middleware = composeWithDevTools(middleware)\n  }\n  const store = createStore(reducers, initialState, middleware)\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers')\n      store.replaceReducer(nextReducer)\n    })\n  }\n  return store\n}\n","export function addSnack(message: string) {\n  return {\n    type: 'ADD_SNACK',\n    snack: message,\n  }\n}\n\nexport function eatSnack() {\n  return {\n    type: 'EAT_SNACK',\n  }\n}\n\nconst isLocal = !!window.location.port\nexport const BASE_URL = `${window.location.protocol}//${window.location.hostname}:${\n  isLocal ? '8888' : ''\n}`\n"],"sourceRoot":""}