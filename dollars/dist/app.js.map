{"version":3,"sources":["webpack:///./queries/__generated__/UpdateTransaction.hooks.ts","webpack:///./queries/GetEvents.graphql","webpack:///./Report/PnlChart.tsx","webpack:///./styles.tsx","webpack:///./TransactionList/ImportForm.tsx","webpack:///./components/DialogSelect.tsx","webpack:///./TransactionList/NewTransactionForm.tsx","webpack:///./TransactionList/FilterDialog.tsx","webpack:///./TransactionList/TransactionListAppBar.tsx","webpack:///./TransactionList/SmartCatField.tsx","webpack:///./components/ResponsiveLabel.tsx","webpack:///./TransactionList/CategoryField.tsx","webpack:///./components/DebouncedTextField.tsx","webpack:///./TransactionList/BalanceAdjustField.tsx","webpack:///./TransactionList/EventLog.tsx","webpack:///./TransactionList/TransactionRow.tsx","webpack:///./Root/Timeline/EventRow.tsx","webpack:///./Root/Timeline/utils.ts","webpack:///./Root/Timeline/index.tsx","webpack:///./TransactionList/index.tsx","webpack:///./types/index.ts","webpack:///./components/IconSelect.tsx","webpack:///./CategoryPage/Tree.tsx","webpack:///./CategoryPage/selectors.tsx","webpack:///./CategoryPage/index.tsx","webpack:///./TablesPage/Table.tsx","webpack:///./TablesPage/index.tsx","webpack:///./history.ts","webpack:///./Root/index.tsx","webpack:///./queries/__generated__/GetCategories.hooks.ts","webpack:///./queries/GetCategories.graphql","webpack:///./LoginPage.tsx","webpack:///./queries/__generated__/GetRecords.hooks.ts","webpack:///./queries/GetRecords.graphql","webpack:///./queries/__generated__/GetTableNames.hooks.ts","webpack:///./queries/GetTableNames.graphql","webpack:///./queries/__generated__/GetProfitAndLossChart.hooks.ts","webpack:///./queries/GetProfitAndLossChart.graphql","webpack:///./selectors.ts","webpack:///./queries/__generated__/ImportWaveTransactions.hooks.ts","webpack:///./queries/ImportWaveTransactions.graphql","webpack:///./queries/__generated__/GetLatestImportDate.hooks.ts","webpack:///./queries/GetLatestImportDate.graphql","webpack:///./queries/GetTransactions.graphql","webpack:///./queries/__generated__/CreateTransaction.hooks.ts","webpack:///./queries/CreateTransaction.graphql","webpack:///./queries/__generated__/AcceptPrediction.hooks.ts","webpack:///./queries/AcceptPrediction.graphql","webpack:///./queries/__generated__/CategorizeTransaction.hooks.ts","webpack:///./queries/CategorizeTransaction.graphql","webpack:///./queries/UpdateTransaction.graphql","webpack:///./queries/__generated__/ArchiveTransaction.hooks.ts","webpack:///./queries/ArchiveTransaction.graphql","webpack:///./queries/__generated__/GetEventLogs.hooks.ts","webpack:///./queries/GetEventLogs.graphql","webpack:///./queries/__generated__/SignCheckpoint.hooks.ts","webpack:///./queries/SignCheckpoint.graphql","webpack:///./queries/__generated__/GetEvents.hooks.ts","webpack:///./gqlClient.ts","webpack:///./reducers.ts","webpack:///./main.tsx","webpack:///./configureStore.tsx","webpack:///./Root/contexts.ts","webpack:///./queries/__generated__/GetTransactions.hooks.ts","webpack:///./utils.ts","webpack:///./queries/FragmentTransaction.graphql","webpack:///./theme.tsx"],"names":["QUERY","UpdateTransaction__QUERY","useApolloQuery","options","useMutation","doc","loc","source","definitionRefs","findOperation","name","i","definitions","length","element","value","forEach","def","refs","Set","collectFragmentReferences","node","kind","add","type","selectionSet","selections","selection","variableDefinitions","module","exports","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","size","prevRefs","has","childRef","op","push","oneQuery","HighchartsData","Highchart","Highcharts","HighchartsDrilldown","today","Date","sixMonthsAgo","setDate","getDate","PnlChart","props","variables","startDate","getIsoDateString","endDate","loading","error","data","initial","chart","title","text","xAxis","yAxis","min","align","labels","overflow","tooltip","valueSuffix","plotOptions","bar","dataLabels","enabled","column","allowPointSelect","events","click","onClickColumn","e","console","log","legend","layout","verticalAlign","x","y","floating","borderWidth","shadow","credits","titled","u","config","Object","assign","profitAndLossChart","isWide","window","innerWidth","useStyles","makeStyles","theme","createStyles","appBar","position","header","backgroundColor","palette","info","light","disabled","opacity","cursor","marginLeft","spacing","flex","formControl","margin","minWidth","toISOString","slice","ImportButton","onClose","importWaveTransactions","Button","fullWidth","onClick","then","res","location","reload","style","marginTop","color","variant","ImportForm","GetLatestImportDate","initialStartDate","latestImportDate","ImportFormComponent","React","setStartDate","setEndDate","Grid","container","item","xs","sm","TextField","label","onChange","target","defaultValue","DialogSelect","choices","onSelectOption","isOpen","setIsOpen","initialOption","option","find","Error","getInitialOption","Icon","marginRight","iconId","Dialog","open","DialogTitle","DialogContent","opt","undefined","placeholder","fieldConfig","issuedDate","required","merchantName","notes","categoryId","balanceAdjust","totalAmount","FieldInput","fieldName","updateField","instance","initialForm","getToday","NewTransactionForm","selectableCategories","formData","setFormData","update","cache","filters","offset","limit","createTransaction","isOk","cached","readQuery","query","GET_TRANSACTIONS_QUERY","writeQuery","transactions","transaction","message","t","old","event","newState","paddingTop","ExpansionPanel","expanded","ExpansionPanelSummary","map","cat","id","description","Divider","ExpansionPanelActions","input","every","Boolean","FilterDialog","categoryChoices","urlFilters","UrlStateContext","setOpen","eventId","setEventId","sharedOnly","setSharedOnly","uncategorizedOnly","setUncategorizedOnly","searchText","setSearchText","setCategoryId","handleClickOpen","handleClose","IconButton","aria-labelledby","DialogContentText","FormControl","InputLabel","Select","parseInt","MenuItem","choice","key","FormControlLabel","control","Checkbox","checked","DialogActions","pushHistory","UrlPathEnum","TransactionList","TransactionListAppBar","AppBar","Toolbar","Tooltip","toggleTimeline","History","balance","Typography","icon","Add","showForm","ListItemIcon","AttachMoney","ListItemText","Waves","sessionStorage","removeItem","href","className","SmartCatField","predicatedSplit","predicatedCategory","transactionId","openCategoryDialog","category","acceptPrediction","split","ButtonGroup","aria-label","ResponsiveLabel","ResponsiveLink","children","rest","Link","CategoryField","showDialog","setShowDialog","categoryName","editable","selected","CategoryDialogSelect","initialTextValue","c","classes","categorizeTransaction","textValue","setTextValue","filter","includes","toUpperCase","fullScreen","edge","Close","autoFocus","List","ListItem","button","ListItemSecondaryAction","DebouncedTextField","helperText","setter","onBounce","debounced","_","PrettoSlider","withStyles","root","height","thumb","width","border","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","BalanceAdjustField","total","setBalanceAdjust","Number","toFixed","percentage","setPercentage","updateTransaction","gutterBottom","alignItems","newPercentage","newBalanceAdjust","toString","max","step","valueLabelDisplay","marks","valueLabelFormat","paddingBottom","newValue","EventLog","entityId","eventLogs","eventName","createdTs","changes","change","index","TransactionRowComponent","showDate","onToggleExpansion","setNotes","MUTATION","archiveTransaction","ARCHIVE_TRANSACTION_MUTATION","removed","Card","CardHeader","formatDate","CardContent","float","Collapse","in","unmountOnExit","parseFloat","textAlign","Fab","Delete","areEqual","last","next","TransactionRow","TransactionRows","setExpanded","categories","is_selectable","EventRow","urlState","eventType","checkpoint","eventIcon","batch","origin","plaid","wave","getEventIcon","eventButtonIcon","getEventButtonIcon","batchId","toLocaleDateString","signedTs","signedBalance","batch_import","getEventDescription","CheckpointListItem","SIGN_CHECKPOINT_MUTATION","refetchQueries","GET_EVENTS","signCheckpoint","checkpointId","success","main","getItem","BASE_URL","Timeline","LinearProgress","__typename","checkpoints","batches","sort","a","b","parse","showTimeline","setShowTimeline","formType","setFormType","isTransactionLoading","fetchMore","Paper","maxWidth","amount","innerHeight","marginBottom","updateQuery","prev","fetchMoreResult","ICON_IDS","IconSelect","initialValue","background","paper","Tree","level","onSelectIcon","onSaveNode","component","paddingLeft","primary","ExpandLess","ExpandMore","timeout","disablePadding","child","NodeListItem","setEditable","pickingIcon","setPickingIcon","nodeName","setNodeName","setIconId","dense","role","onBlur","addNode","tree","visited","remaining","p","parent_id","parentNode","v","CategoryPage","pop","getCategoryTree","is_active","keys","k","Cell","content","TableCell","substring","Table","fields","recordType","TablesPage","fontSize","TableContainer","TableHead","TableRow","TableBody","records","r","nameValuePairs","pair","paths","getPathName","tables","pathMap","Root","LoginPage","history","createBrowserHistory","pathname","path","subpath","state","searchString","JSON","stringify","pathValue","join","search","stripped","isLocal","port","protocol","hostname","connect","ownProps","isAuthenticated","parseUrlState","Provider","Body","PageList","UrlPathsMap","isDarkMode","setItem","pageMap","pathName","this","warn","App","hot","client","GetCategories__QUERY","useQuery","username","setUsername","password","setPassword","errorMessage","setErrorMessage","submitLogin","fetch","method","body","headers","response","json","code","token","display","justifyContent","flexDirection","onKeyPress","charCode","GetRecords__QUERY","GetTableNames__QUERY","GetProfitAndLossChart__QUERY","params","querystring","ImportWaveTransactions__QUERY","names","concat","GetLatestImportDate__QUERY","CreateTransaction__QUERY","AcceptPrediction__QUERY","CategorizeTransaction__QUERY","ArchiveTransaction__QUERY","GetEventLogs__QUERY","SignCheckpoint__QUERY","GetEvents__QUERY","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","__schema","types","errorLink","onError","graphQLErrors","networkError","gqlError","extensions","authLink","setContext","authorization","AC","link","HttpLink","uri","InMemoryCache","initialState","handlers","snacks","EAT_SNACK","ADD_SNACK","action","snack","reducers","combineReducers","store","middleware","applyMiddleware","thunk","logger","createStore","configureStore","ReactDOM","document","getElementById","GetTransactions__QUERY","d","month","day","timeZone","year","getFullYear","getMonth","createMuiTheme"],"mappings":"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","file":"app.js","sourcesContent":["\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  UpdateTransaction, UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction'\nimport UpdateTransaction__QUERY from '@src/queries/UpdateTransaction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/UpdateTransaction'\n\nexport const QUERY = UpdateTransaction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<UpdateTransaction, UpdateTransactionVariables>,\n) {\n  return useMutation<UpdateTransaction, UpdateTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetEvents\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpoints\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"batches\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"origin\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"userId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":205}};\n    doc.loc.source = {\"body\":\"query GetEvents {\\n  checkpoints {\\n    id\\n    eventType\\n    createdTs\\n    signedTs\\n    signedBalance\\n  }\\n  batches {\\n    id\\n    eventType\\n    createdTs\\n    origin\\n    userId\\n    startDate\\n    endDate\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetEvents\"] = oneQuery(doc, \"GetEvents\");\n        \n","import HighchartsData from 'highcharts-data'\nimport HighchartsDrilldown from 'highcharts-drilldown'\nimport * as React from 'react'\nimport Highchart from 'react-highcharts'\nimport u from 'updeep'\nimport { useApolloQuery } from '@src/queries/__generated__/GetProfitAndLossChart.hooks'\nimport { getIsoDateString } from '@src/utils'\n\nHighchartsData(Highchart.Highcharts)\nHighchartsDrilldown(Highchart.Highcharts)\n\nconst getChartConfig = ({ onClickColumn }) => {\n  return {\n    chart: {\n      type: 'column',\n      //height: 800,\n      //width: 800\n    },\n    title: {\n      text: 'Income/Expense Report',\n    },\n    xAxis: {\n      type: 'category',\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Spend',\n        align: 'high',\n      },\n      labels: {\n        overflow: 'justify',\n      },\n    },\n    tooltip: {\n      valueSuffix: ' dollars',\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: true,\n        },\n      },\n      column: {\n        dataLabels: {\n          enabled: true,\n        },\n        allowPointSelect: false,\n        events: {\n          click: onClickColumn,\n        },\n      },\n    },\n    legend: {\n      enabled: true,\n      layout: 'vertical',\n      align: 'right',\n      verticalAlign: 'top',\n      x: -40,\n      y: 80,\n      floating: true,\n      borderWidth: 1,\n      shadow: true,\n    },\n    credits: {\n      enabled: false,\n    },\n  }\n}\nconst today = new Date()\nconst sixMonthsAgo = new Date()\nsixMonthsAgo.setDate(sixMonthsAgo.getDate() - 180)\n// Set to start of the month\nsixMonthsAgo.setDate(1)\n\nexport const PnlChart: React.FC<{}> = (props) => {\n  const { loading, error, data } = useApolloQuery({\n    variables: {\n      startDate: getIsoDateString(sixMonthsAgo),\n      endDate: getIsoDateString(today),\n    },\n  })\n  if (loading) {\n    return <div>loading ...</div>\n  }\n  if (error) return <div>error ...</div>\n\n  const initial = getChartConfig({\n    onClickColumn: (e) => console.log(e),\n  })\n  const titled = u(\n    {\n      title: {\n        text: 'Profit & Loss Report',\n      },\n    },\n    initial,\n  )\n  const config = Object.assign({}, titled, data!.profitAndLossChart)\n  return (\n    <div>\n      <Highchart config={config} />\n    </div>\n  )\n}\n","import { Theme, makeStyles, createStyles } from '@material-ui/core'\n\nexport const isWide = window.innerWidth > 600\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      position: 'relative',\n    },\n    header: {\n      backgroundColor: theme.palette.info.light,\n    },\n    disabled: {\n      opacity: '0.5',\n      backgroundColor: 'rgba(0, 0, 0, 0.12)',\n      cursor: 'not-allowed',\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: '100%',\n    },\n  }),\n)\n","import { Button, Grid, TextField } from '@material-ui/core'\nimport * as React from 'react'\nimport { isWide } from '@src/styles'\nimport { useApolloQuery } from '@src/queries/__generated__/ImportWaveTransactions.hooks'\nimport { useApolloQuery as GetLatestImportDate } from '@src/queries/__generated__/GetLatestImportDate.hooks'\n\nconst today = new Date().toISOString().slice(0, 10)\n\nconst ImportButton: React.FC<{ onClose: () => void; startDate: string; endDate: string }> = ({\n  onClose,\n  startDate,\n  endDate,\n}) => {\n  const [importWaveTransactions, { loading }] = useApolloQuery({})\n\n  return (\n    <Button\n      fullWidth={!isWide}\n      onClick={() =>\n        importWaveTransactions({\n          variables: {\n            startDate,\n            endDate,\n          },\n        }).then((res) => {\n          onClose()\n          window.location.reload()\n        })\n      }\n      style={{ marginTop: '10px' }}\n      color=\"primary\"\n      variant=\"contained\"\n    >\n      {loading ? 'importing ...' : 'Import'}\n    </Button>\n  )\n}\n\nexport const ImportForm = (props: { onClose: () => void }) => {\n  const { data } = GetLatestImportDate({})\n  if (!data) return <div></div>\n\n  return <ImportFormComponent onClose={props.onClose} initialStartDate={data.latestImportDate} />\n}\n\nconst ImportFormComponent = (props: { onClose: () => void; initialStartDate: string }) => {\n  const [startDate, setStartDate] = React.useState(props.initialStartDate)\n  const [endDate, setEndDate] = React.useState(today)\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={4}>\n        <TextField\n          fullWidth={!isWide}\n          type=\"date\"\n          label=\"from\"\n          value={startDate}\n          onChange={(e) => setStartDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <TextField\n          fullWidth={!isWide}\n          type=\"date\"\n          label=\"to\"\n          defaultValue={today}\n          onChange={(e) => setEndDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <ImportButton onClose={props.onClose} startDate={startDate} endDate={endDate} />\n      </Grid>\n    </Grid>\n  )\n}\n","import { Button, Dialog, DialogContent, DialogTitle, Icon } from '@material-ui/core'\n\nimport * as React from 'react'\n\nimport { Autocomplete } from 'rice-instructor'\n\ninterface DialogSelectProps {\n  choices: Array<{\n    value: string | number\n    iconId?: string\n    label: string\n  }>\n  onSelectOption: (option) => void\n  value: string | null | number\n}\nconst getInitialOption = (\n  value: string | number | null,\n  choices: Array<{\n    value: string | number\n    iconId?: string\n    label: string\n  }>,\n) => {\n  if (!value) return null\n  const option = choices.find((x) => x.value === value)\n  if (!option) {\n    throw new Error(`${value} not found `)\n  }\n\n  return option\n}\nconst isWide = window.innerWidth > 600\nexport const DialogSelect = (props: DialogSelectProps) => {\n  const { choices, value, onSelectOption } = props\n  const [isOpen, setIsOpen] = React.useState(false)\n  const initialOption = getInitialOption(value, choices)\n  return (\n    <div>\n      <Button\n        size={isWide ? 'large' : 'small'}\n        onClick={() => setIsOpen(true)}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        {initialOption ? initialOption.label : 'Select a Category'}\n        {initialOption ? <Icon style={{ marginRight: '5px' }}>{initialOption.iconId}</Icon> : null}\n      </Button>\n      <Dialog open={isOpen} fullWidth onClose={() => setIsOpen(false)}>\n        <DialogTitle>Select a Category</DialogTitle>\n        <DialogContent>\n          <Autocomplete\n            onSelectOption={(opt) => {\n              onSelectOption(opt)\n              setIsOpen(false)\n            }}\n            defaultValue={initialOption ? initialOption.value : undefined}\n            placeholder=\"Select a category\"\n            options={choices}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import {\n  Button,\n  Divider,\n  ExpansionPanel,\n  ExpansionPanelActions,\n  ExpansionPanelSummary,\n  Grid,\n  TextField,\n} from '@material-ui/core'\nimport * as React from 'react'\nimport {\n  QUERY as GET_TRANSACTIONS_QUERY,\n  GetTransactions,\n  GetTransactions_categories as ICategory,\n} from '@src/queries/__generated__/GetTransactions.hooks'\nimport { DialogSelect } from '@src/components/DialogSelect'\nimport { useApolloQuery } from '@src/queries/__generated__/CreateTransaction.hooks'\nimport { CreateTransactionInput } from '@src/types/__generated__/globalTypes'\n\nimport { getToday } from '@src/utils'\n\ninterface NewTransactionFormProps {\n  onClose: () => void\n  selectableCategories: Array<ICategory>\n}\n\ntype FieldName =\n  | 'issuedDate'\n  | 'merchantName'\n  | 'notes'\n  | 'categoryId'\n  | 'totalAmount'\n  | 'balanceAdjust'\n\nconst fieldConfig = {\n  issuedDate: { type: 'date', required: true },\n  merchantName: { type: 'text', required: true },\n  notes: { type: 'text', required: false },\n  categoryId: { type: 'number', required: false },\n  balanceAdjust: { type: 'number', required: false },\n  totalAmount: { type: 'number', required: true },\n}\n\nconst FieldInput = (props: {\n  fieldName: FieldName\n  updateField: (fieldName) => (event) => void\n  instance: CreateTransactionInput\n}) => {\n  const { fieldName, updateField, instance } = props\n  const config = fieldConfig[fieldName]\n  let error = false\n  if (config.required && !instance[fieldName]) {\n    error = true\n  } else if (config.required && config.type === 'number' && !instance[fieldName]) {\n    error = true\n  }\n\n  return (\n    <TextField\n      type={config.type}\n      required={config.required}\n      error={error}\n      label={fieldName}\n      value={instance[fieldName]}\n      onChange={updateField(fieldName)}\n    />\n  )\n}\nconst initialForm: CreateTransactionInput = {\n  issuedDate: getToday(),\n  merchantName: '',\n  notes: '',\n  categoryId: null,\n  totalAmount: '0',\n  balanceAdjust: '0',\n}\n\nexport const NewTransactionForm: React.FC<NewTransactionFormProps> = (props) => {\n  const { selectableCategories, onClose } = props\n  const [formData, setFormData] = React.useState<CreateTransactionInput>(initialForm)\n  const [createTransaction, { error, loading }] = useApolloQuery({\n    update(cache, { data }) {\n      const variables = {\n        // TODO: send real offset and limit\n        filters: { offset: 0, limit: 40 },\n      }\n      if (data?.createTransaction?.isOk) {\n        const cached = cache.readQuery<GetTransactions>({\n          query: GET_TRANSACTIONS_QUERY,\n          variables,\n        })\n        cache.writeQuery({\n          query: GET_TRANSACTIONS_QUERY,\n          data: Object.assign({}, cached, {\n            transactions: [data.createTransaction.transaction, ...cached!.transactions],\n          }),\n          variables,\n        })\n      }\n    },\n  })\n\n  if (error) {\n    return <div>{error.message}</div>\n  }\n\n  const createNewTransaction = () => {\n    createTransaction({\n      variables: {\n        input: {\n          issuedDate: formData.issuedDate,\n          totalAmount: formData.totalAmount,\n          merchantName: formData.merchantName,\n          balanceAdjust: formData.balanceAdjust || '0',\n          categoryId: formData.categoryId,\n          notes: formData.notes,\n        },\n      },\n    })\n    onClose()\n  }\n  const updateField = (fieldName: FieldName) => {\n    const old = formData\n    return (event) => {\n      const newState = Object.assign({}, old, {\n        [fieldName]: event.target.value,\n      })\n      setFormData(newState)\n    }\n  }\n  const isValid = () => {\n    const t = formData\n    return [t.issuedDate, t.merchantName, +t.totalAmount].every(Boolean)\n  }\n  const transaction = formData\n  return (\n    <div style={{ paddingTop: '10px' }}>\n      <ExpansionPanel expanded={true}>\n        <ExpansionPanelSummary>\n          <Grid container spacing={10}>\n            <Grid item xs={6} sm={4}>\n              <FieldInput instance={transaction} fieldName=\"issuedDate\" updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"merchantName\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"totalAmount\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <DialogSelect\n                value={transaction.categoryId || ''}\n                onSelectOption={(option) => {\n                  const newState = Object.assign({}, formData, {\n                    categoryId: option.value,\n                  })\n                  setFormData(newState)\n                }}\n                choices={selectableCategories.map((cat) => {\n                  return {\n                    value: cat.id,\n                    label: cat.description,\n                    iconId: cat.iconId || '',\n                  }\n                })}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput fieldName=\"notes\" instance={transaction} updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"balanceAdjust\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <Divider />\n        <ExpansionPanelActions>\n          <Button\n            size=\"small\"\n            onClick={() => {\n              setFormData(initialForm)\n              onClose()\n            }}\n          >\n            Cancel\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={createNewTransaction} disabled={!isValid()}>\n            {loading ? `saving ...` : `Save`}\n          </Button>\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport {\n  DialogContentText,\n  DialogTitle,\n  Icon,\n  InputLabel,\n  IconButton,\n  FormControl,\n  MenuItem,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  TextField,\n  Select,\n  Dialog,\n  DialogActions,\n  DialogContent,\n} from '@material-ui/core'\nimport { UrlStateContext } from '@src/Root/contexts'\nimport { UrlPathEnum } from '@src/types'\nimport { pushHistory } from '@src/history'\n\ninterface Prop {\n  categoryChoices: Array<{ id: number; label: string }>\n}\n\nexport const FilterDialog: React.FC<Prop> = ({ categoryChoices }) => {\n  const urlFilters = React.useContext(UrlStateContext)\n  const [open, setOpen] = React.useState(false)\n  const [eventId, setEventId] = React.useState(urlFilters.eventId || '')\n  const [sharedOnly, setSharedOnly] = React.useState(urlFilters.sharedOnly || false)\n  const [uncategorizedOnly, setUncategorizedOnly] = React.useState(\n    urlFilters.uncategorizedOnly || false,\n  )\n  const [searchText, setSearchText] = React.useState<string>(urlFilters.searchText || '')\n  const [categoryId, setCategoryId] = React.useState<number | null>(urlFilters.categoryId || null)\n\n  const clearFilters = () => {\n    setEventId('')\n    setSharedOnly(false)\n    setUncategorizedOnly(false)\n    setSearchText('')\n    setCategoryId(null)\n  }\n  const resetFilters = () => {\n    console.log('reset filters')\n    setEventId(urlFilters.eventId || '')\n    setSharedOnly(urlFilters.sharedOnly || false)\n    setSearchText(urlFilters.searchText || '')\n    setCategoryId(urlFilters.categoryId || null)\n    setUncategorizedOnly(urlFilters.uncategorizedOnly || false)\n  }\n\n  const handleClickOpen = () => {\n    resetFilters()\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  if (!open) {\n    return (\n      <IconButton onClick={handleClickOpen}>\n        <Icon color=\"primary\">filter_alt</Icon>\n      </IconButton>\n    )\n  }\n  return (\n    <div>\n      <IconButton onClick={handleClickOpen}>\n        <Icon color=\"primary\">filter_alt</Icon>\n      </IconButton>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Filter Transactions</DialogTitle>\n        {open ? (\n          <DialogContent>\n            <DialogContentText>\n              Search transactions by category, text (merchant name and notes). By checking \"Shared\",\n              you can limit the results to be shared transactions only.\n            </DialogContentText>\n            <FormControl style={{ minWidth: 120 }}>\n              <InputLabel>Category</InputLabel>\n              <Select\n                id=\"categoryId\"\n                value={categoryId || ''}\n                onChange={(e) => setCategoryId(parseInt(e.target.value as string))}\n              >\n                <MenuItem value={''}>None</MenuItem>\n                {categoryChoices.map((choice) => (\n                  <MenuItem key={choice.id} value={choice.id}>\n                    {choice.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <TextField\n              margin=\"dense\"\n              id=\"eventId\"\n              label=\"Event\"\n              type=\"string\"\n              fullWidth\n              value={eventId || ''}\n              onChange={(e) => setEventId(e.target.value)}\n            />\n            <TextField\n              onChange={(e) => setSearchText(e.target.value)}\n              value={searchText || ''}\n              margin=\"dense\"\n              id=\"searchText\"\n              label=\"Text Search\"\n              type=\"text\"\n              fullWidth\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={sharedOnly}\n                  onChange={(e) => setSharedOnly(e.target.checked)}\n                  name=\"sharedOnly\"\n                />\n              }\n              label=\"Shared\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={uncategorizedOnly}\n                  onChange={(e) => setUncategorizedOnly(e.target.checked)}\n                  name=\"uncategorizedOnly\"\n                />\n              }\n              label=\"Uncategorized\"\n            />\n          </DialogContent>\n        ) : null}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={clearFilters} color=\"primary\">\n            Reset\n          </Button>\n          <Button\n            onClick={() => {\n              pushHistory(UrlPathEnum.TransactionList, '', {\n                eventId,\n                searchText,\n                sharedOnly,\n                categoryId,\n                uncategorizedOnly,\n              })\n              handleClose()\n            }}\n            color=\"primary\"\n          >\n            Apply\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import {\n  AppBar,\n  Icon,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@material-ui/core'\nimport { Add, AttachMoney, History, Waves } from '@material-ui/icons'\nimport * as React from 'react'\nimport { IconMenu } from 'rice-instructor'\nimport { FilterDialog } from '@src/TransactionList/FilterDialog'\n\ninterface Prop {\n  balance: string\n  showForm: (formType: string) => void\n  toggleTimeline: () => void\n  categoryChoices: Array<{ id: number; label: string }>\n}\n\nexport const TransactionListAppBar = (props: Prop) => {\n  const { categoryChoices } = props\n  const showNewTransactionForm = () => {\n    props.showForm('transaction')\n  }\n\n  const showWaveImportForm = () => {\n    props.showForm('wave')\n  }\n\n  const toggleTimeline = () => {\n    props.toggleTimeline()\n  }\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\">\n      <Toolbar>\n        <Tooltip title=\"Timeline\">\n          <IconButton onClick={toggleTimeline}>\n            <History />\n          </IconButton>\n        </Tooltip>\n        {props.balance ? (\n          <Typography variant=\"body1\" key=\"balance\">{`Balance: $${props.balance}`}</Typography>\n        ) : null}\n        <div style={{ flex: 1 }} />\n        <FilterDialog categoryChoices={categoryChoices} />\n        <IconMenu icon={<Add />}>\n          <MenuItem key=\"new-transaction-menu\" onClick={showNewTransactionForm}>\n            <ListItemIcon>\n              <AttachMoney />\n            </ListItemIcon>\n            <ListItemText>Transaction</ListItemText>\n          </MenuItem>\n          <MenuItem key=\"new-wave-menu\" onClick={showWaveImportForm}>\n            <ListItemIcon>\n              <Waves color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText>Wave Import</ListItemText>\n          </MenuItem>\n        </IconMenu>\n        <IconButton\n          onClick={() => {\n            sessionStorage.removeItem('authToken')\n            window.location.href = '/'\n          }}\n        >\n          <Icon className=\"material-icons\">exit_to_app</Icon>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import * as React from 'react'\n\nimport { ButtonGroup, Button, Typography } from '@material-ui/core'\nimport { useApolloQuery } from '@src/queries/__generated__/AcceptPrediction.hooks'\nimport { GetTransactions_categories as ICategory } from '@src/queries/__generated__/GetTransactions.hooks'\n\ninterface SmartCatProp {\n  predicatedSplit: boolean | null\n  predicatedCategory: number | null\n  transactionId: number\n  openCategoryDialog: () => void\n\n  selectableCategories: Array<ICategory>\n}\nconst isWide = window.innerWidth > 600\nexport const SmartCatField: React.FC<SmartCatProp> = (props) => {\n  const {\n    predicatedSplit,\n    selectableCategories,\n    predicatedCategory,\n    transactionId,\n    openCategoryDialog,\n  } = props\n\n  const category = selectableCategories.find((x) => x.id === predicatedCategory)\n  if (!category) {\n    throw new Error('cannot find predicated category')\n  }\n\n  const [acceptPrediction, { loading, error }] = useApolloQuery({\n    variables: { id: transactionId },\n  })\n  const split = predicatedSplit ? 'Split ' : ''\n  if (error) return <div>{error.message}</div>\n  if (loading) return <div>saving...</div>\n  return (\n    <div>\n      <Typography variant={isWide ? 'body1' : 'caption'}>{`${split}${category.name}?`}</Typography>\n      <ButtonGroup aria-label=\"outlined primary button group\">\n        <Button size=\"small\" onClick={(e) => acceptPrediction()} variant=\"contained\">\n          YES\n        </Button>\n        <Button\n          size=\"small\"\n          onClick={(e) => openCategoryDialog()}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          NO\n        </Button>\n      </ButtonGroup>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Link, TypographyProps, Typography } from '@material-ui/core'\n\nconst isWide = window.innerWidth > 600\n\nexport const ResponsiveLabel = (props: TypographyProps) => {\n  return <Typography variant={isWide ? 'body1' : 'caption'} {...props} />\n}\ninterface ResponsiveLinkProps extends TypographyProps {\n  disabled?: boolean\n}\n\nexport const ResponsiveLink = (props: ResponsiveLinkProps) => {\n  const { onClick, children, disabled, ...rest } = props\n  return (\n    <ResponsiveLabel {...rest}>\n      {disabled === true ? (\n        children\n      ) : (\n        <Link color={rest.color} onClick={onClick}>\n          {children}\n        </Link>\n      )}\n    </ResponsiveLabel>\n  )\n}\n","import * as React from 'react'\nimport {\n  AppBar,\n  ListItemSecondaryAction,\n  Icon,\n  TextField,\n  ListItemText,\n  List,\n  ListItem,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  Dialog,\n  DialogContent,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\n\nimport { SmartCatField } from './SmartCatField'\nimport { useStyles } from '@src/styles'\nimport { ResponsiveLink } from '@src/components/ResponsiveLabel'\nimport {\n  GetTransactions_categories as ICategory,\n  GetTransactions_transactions as IUserTransaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\n\nimport { useApolloQuery } from '@src/queries/__generated__/CategorizeTransaction.hooks'\n\ninterface CategoryFieldProp {\n  transaction: IUserTransaction\n  selectableCategories: Array<ICategory>\n}\n\nexport const CategoryField: React.FC<CategoryFieldProp> = ({\n  selectableCategories,\n  transaction,\n}) => {\n  const [showDialog, setShowDialog] = React.useState(false)\n\n  const category = selectableCategories.find((x) => x.id === transaction.categoryId)\n  const categoryName = category ? category.name : '????'\n\n  return (\n    <div>\n      {!transaction.categoryId && transaction.predicatedCategory ? (\n        <SmartCatField\n          openCategoryDialog={() => setShowDialog(true)}\n          predicatedSplit={transaction.predicatedSplit}\n          predicatedCategory={transaction.predicatedCategory}\n          selectableCategories={selectableCategories}\n          transactionId={transaction.id}\n        />\n      ) : (\n        <ResponsiveLink\n          color=\"textPrimary\"\n          disabled={!transaction.editable}\n          onClick={() => setShowDialog(true)}\n        >\n          {categoryName}\n        </ResponsiveLink>\n      )}\n      {showDialog ? (\n        <CategoryDialogSelect\n          transactionId={transaction.id}\n          selectableCategories={selectableCategories}\n          selected={transaction.categoryId}\n          showDialog={showDialog}\n          setShowDialog={setShowDialog}\n        />\n      ) : null}\n    </div>\n  )\n}\n\ninterface CategoryDialogSelectProps {\n  setShowDialog: (boolean) => void\n  showDialog: boolean\n  selected: number | null\n  transactionId: number\n  selectableCategories: Array<ICategory>\n}\nconst CategoryDialogSelect: React.FC<CategoryDialogSelectProps> = ({\n  showDialog,\n  setShowDialog,\n  selected,\n  transactionId,\n  selectableCategories,\n}) => {\n  const initialTextValue = selectableCategories.find((c) => c.id === selected)?.name || ''\n  const classes = useStyles()\n  const [categorizeTransaction, { loading }] = useApolloQuery({})\n  const [textValue, setTextValue] = React.useState<string>(initialTextValue)\n\n  const choices =\n    !textValue.length || textValue === initialTextValue\n      ? selectableCategories\n      : selectableCategories.filter((c) => c.name.includes(textValue.toUpperCase()))\n  return (\n    <Dialog fullScreen={true} onClose={() => setShowDialog(false)} open={showDialog}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => setShowDialog(false)}\n            aria-label=\"close\"\n          >\n            <Close />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Select a Category\n          </Typography>\n          <Button autoFocus color=\"inherit\" onClick={() => setShowDialog(false)}>\n            Cancel\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <DialogContent>\n        {loading ? (\n          <div>loading...</div>\n        ) : (\n          <TextField\n            value={textValue}\n            onChange={(e) => {\n              setTextValue(e.target.value)\n            }}\n            variant=\"outlined\"\n          />\n        )}\n        <List>\n          {choices.map((c) => (\n            <ListItem\n              key={c.id}\n              button\n              selected={c.id === selected}\n              onClick={(e) =>\n                categorizeTransaction({\n                  variables: {\n                    id: transactionId,\n                    categoryId: c.id,\n                  },\n                }).then(() => setShowDialog(false))\n              }\n            >\n              <ListItemText>{c.name}</ListItemText>\n              <ListItemSecondaryAction>\n                <Icon color=\"action\">{c.iconId}</Icon>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import * as React from 'react'\nimport * as _ from 'lodash'\nimport { TextField } from '@material-ui/core'\n\ninterface IDebouncedTextField {\n  helperText?: string\n  onBounce: (newValue) => void\n  setter: (newValue) => void\n  type?: string\n  value?: any\n  loading?: boolean\n  fullWidth?: boolean\n  label?: string\n}\n\nexport const DebouncedTextField: React.FunctionComponent<IDebouncedTextField> = ({\n  helperText,\n  setter,\n  onBounce,\n  label,\n  type,\n  value,\n  loading,\n  fullWidth,\n}) => {\n  const debounced = React.useCallback(_.debounce(onBounce, 1000), [])\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      error={!!loading}\n      fullWidth={fullWidth}\n      label={label}\n      helperText={loading ? 'saving ...' : helperText}\n      type={type}\n      onChange={(event) => {\n        setter(event.target.value)\n        debounced(event.target.value)\n      }}\n      value={value}\n    />\n  )\n}\n","import * as React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Slider from '@material-ui/core/Slider'\nimport { useApolloQuery } from '@src/queries/__generated__/UpdateTransaction.hooks'\nimport { DebouncedTextField } from '@src/components/DebouncedTextField'\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#3f51b5',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider)\n\nconst getPercentage = (balance: number, total: number) => {\n  return Number(((balance / total) * 100).toFixed(2))\n}\n\nexport const BalanceAdjustField = (props: {\n  transactionId\n  total: number\n  balanceAdjust: number\n}) => {\n  const [balanceAdjust, setBalanceAdjust] = React.useState<number>(props.balanceAdjust)\n  const [percentage, setPercentage] = React.useState<number>(\n    getPercentage(balanceAdjust, props.total),\n  )\n  const [updateTransaction, { loading, error }] = useApolloQuery({})\n\n  const handleSliderChange = (event: any, newPercentage: number) => {\n    const newBalanceAdjust = (newPercentage * props.total) / 100\n    setPercentage(newPercentage)\n    setBalanceAdjust(newBalanceAdjust)\n    updateTransaction({\n      variables: {\n        input: {\n          id: props.transactionId,\n          balanceAdjust: newBalanceAdjust.toString(),\n        },\n      },\n    })\n  }\n  if (error) return <div>{error.message}</div>\n\n  return (\n    <div>\n      <Typography color=\"textSecondary\" id=\"input-slider\" gutterBottom>\n        Balance Adjust\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs={9}>\n          <PrettoSlider\n            style={{ marginTop: '1.5rem' }}\n            value={typeof percentage === 'number' ? percentage : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n            defaultValue={0}\n            min={-100}\n            max={100}\n            step={null}\n            valueLabelDisplay=\"on\"\n            marks={[\n              { value: -100, label: '-100%' },\n              { value: -50, label: '-50%' },\n              { value: 0, label: '0%' },\n              { value: 50, label: '50%' },\n              { value: 100, label: '100%' },\n            ]}\n            valueLabelFormat={(value: number) => `${value}%`}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <div style={{ paddingBottom: '2rem' }}>\n            <DebouncedTextField\n              type=\"number\"\n              loading={loading}\n              value={balanceAdjust}\n              setter={(newValue) => {\n                setBalanceAdjust(newValue)\n                setPercentage((Number(newValue) / props.total) * 100)\n              }}\n              onBounce={(newValue) => {\n                updateTransaction({\n                  variables: {\n                    input: { id: props.transactionId, balanceAdjust: newValue as string },\n                  },\n                })\n              }}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Grid } from '@material-ui/core'\nimport { useApolloQuery } from '@src/queries/__generated__/GetEventLogs.hooks'\n\ninterface IEventLogProps {\n  transactionId: number\n}\nexport const EventLog = (props: IEventLogProps) => {\n  const { data } = useApolloQuery({\n    variables: {\n      filters: {\n        offset: 0,\n        limit: 10,\n        entityId: props.transactionId.toString(),\n      },\n    },\n  })\n  if (data) {\n    return (\n      <div>\n        {data.eventLogs.map((log) => (\n          <div key={log.id}>\n            <Grid container spacing={10}>\n              <Grid item xs={3} sm={3}>\n                <div>{log.eventName}</div>\n              </Grid>\n              <Grid item xs={3} sm={3}>\n                <div>{log.createdTs}</div>\n              </Grid>\n              <Grid item xs={6} sm={6}>\n                <div>\n                  {log.changes.map((change, index) => (\n                    <div key={index}>{change}</div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        ))}\n      </div>\n    )\n  }\n  return <div />\n}\n","import { Card, Collapse, CardHeader, CardContent, Fab, Grid, Typography } from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\nimport { useMutation } from '@apollo/react-hooks'\nimport * as _ from 'lodash'\nimport * as React from 'react'\nimport { CategoryField } from './CategoryField'\nimport { BalanceAdjustField } from './BalanceAdjustField'\nimport { useStyles } from '@src/styles'\nimport { ResponsiveLink, ResponsiveLabel } from '@src/components/ResponsiveLabel'\nimport {\n  QUERY as MUTATION,\n  UpdateTransaction,\n  UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction.hooks'\nimport {\n  QUERY as GET_TRANSACTIONS_QUERY,\n  GetTransactions,\n  GetTransactions_categories,\n  GetTransactions_transactions as GetTransactions_transaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\nimport { DebouncedTextField } from '@src/components/DebouncedTextField'\nimport { formatDate } from '@src/utils'\n\nimport {\n  QUERY as ARCHIVE_TRANSACTION_MUTATION,\n  ArchiveTransaction,\n  ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction.hooks'\nimport { EventLog } from './EventLog'\n\ninterface ITransactionRowProps {\n  transaction: GetTransactions_transaction\n  expanded: boolean\n  selectableCategories: Array<GetTransactions_categories>\n  onToggleExpansion: (event) => void\n  showDate: boolean\n}\n\nexport const TransactionRowComponent = (props: ITransactionRowProps) => {\n  const classes = useStyles()\n\n  const { showDate, selectableCategories, transaction, expanded, onToggleExpansion } = props\n  const [notes, setNotes] = React.useState(transaction.notes)\n\n  const [updateTransaction, { loading }] = useMutation<\n    UpdateTransaction,\n    UpdateTransactionVariables\n  >(MUTATION)\n  const [archiveTransaction] = useMutation<ArchiveTransaction, ArchiveTransactionVariables>(\n    ARCHIVE_TRANSACTION_MUTATION,\n    {\n      update(cache, { data }) {\n        const variables = {\n          // TODO: send real offset and limit\n          filters: { offset: 0, limit: 40 },\n        }\n        if (data?.archiveTransaction?.isOk) {\n          const cached = cache.readQuery<GetTransactions>({\n            query: GET_TRANSACTIONS_QUERY,\n            variables,\n          })\n          const removed = [...cached!.transactions]\n          _.remove(removed, (t) => t.id === transaction.id)\n          cache.writeQuery({\n            query: GET_TRANSACTIONS_QUERY,\n            data: Object.assign({}, cached, { transactions: removed }),\n            variables,\n          })\n        }\n      },\n    },\n  )\n\n  return (\n    <div>\n      <Card style={showDate ? { marginTop: '1rem' } : undefined}>\n        {showDate ? (\n          <CardHeader className={classes.header} title={formatDate(transaction.issuedDate)} />\n        ) : null}\n        <CardContent className={!transaction.editable ? classes.disabled : undefined}>\n          <Grid container spacing={10}>\n            <Grid item xs={4} sm={4}>\n              <CategoryField\n                transaction={transaction}\n                selectableCategories={selectableCategories}\n              />\n            </Grid>\n            <Grid item xs={5} sm={4}>\n              <ResponsiveLink\n                color=\"textPrimary\"\n                disabled={!transaction.editable}\n                onClick={onToggleExpansion}\n              >\n                {transaction.merchantName}\n              </ResponsiveLink>\n              <div>\n                <ResponsiveLabel color=\"textSecondary\">{transaction.notes}</ResponsiveLabel>\n              </div>\n            </Grid>\n            <Grid item xs={3} sm={4}>\n              <div style={{ float: 'right' }}>\n                <ResponsiveLabel>{`${transaction.totalAmount}`}</ResponsiveLabel>\n                <Typography\n                  variant=\"subtitle2\"\n                  style={{\n                    color: +transaction.balanceAdjust > 0 ? 'green' : 'red',\n                  }}\n                >\n                  {`${transaction.balanceAdjust}`}\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Collapse style={{ margin: '1rem' }} in={expanded} unmountOnExit>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={12}>\n              <BalanceAdjustField\n                transactionId={transaction.id}\n                balanceAdjust={Number(transaction.balanceAdjust)}\n                total={parseFloat(transaction.totalAmount)}\n              />\n            </Grid>\n            <Grid item xs={10} sm={11}>\n              <DebouncedTextField\n                fullWidth={true}\n                loading={loading}\n                label=\"Notes\"\n                value={notes}\n                setter={(newValue) => {\n                  setNotes(newValue)\n                }}\n                onBounce={(newValue) =>\n                  updateTransaction({\n                    variables: { input: { id: transaction.id, notes: newValue as string } },\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={2} sm={1} style={{ textAlign: 'right' }}>\n              <Fab\n                size=\"medium\"\n                color=\"secondary\"\n                aria-label=\"Delete\"\n                onClick={() =>\n                  archiveTransaction({\n                    variables: {\n                      id: transaction.id,\n                    },\n                  })\n                }\n              >\n                <Delete />\n              </Fab>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <EventLog transactionId={transaction.id}></EventLog>\n            </Grid>\n          </Grid>\n        </Collapse>\n      </Card>\n    </div>\n  )\n}\nconst areEqual = (last: ITransactionRowProps, next: ITransactionRowProps) => {\n  if (\n    _.isEqual(last.transaction, next.transaction) &&\n    last.expanded === next.expanded &&\n    last.selectableCategories.length === next.selectableCategories.length\n  ) {\n    return true\n  }\n  return false\n}\nconst TransactionRow = React.memo(TransactionRowComponent, areEqual)\n\n/*\n * This is a wrapper component that is used to control the expansion states of\n * the rows. We do not want a compolicated component to manage the expansion\n * state becaue the rerending will be too expensive.\n */\nexport const TransactionRows: React.FC<{\n  categories: Array<GetTransactions_categories>\n  transactions: Array<GetTransactions_transaction>\n}> = (props) => {\n  const [expanded, setExpanded] = React.useState<number | null>(null)\n  const handleChange = (eventId: number) => (event: React.ChangeEvent<{}>) => {\n    if (eventId === expanded) {\n      return setExpanded(null)\n    }\n    setExpanded(eventId)\n  }\n  return (\n    <>\n      {props.transactions.map((t, index) => {\n        let showDate = false\n        if (index > 0) {\n          const prev = props.transactions[index - 1]\n          showDate = prev.issuedDate !== t.issuedDate\n        } else {\n          // First transaction always show date\n          showDate = true\n        }\n        return (\n          <TransactionRow\n            showDate={showDate}\n            selectableCategories={props.categories.filter((c) => c.is_selectable)}\n            expanded={expanded === t.id}\n            key={t.id}\n            transaction={t}\n            onToggleExpansion={handleChange(t.id)}\n          />\n        )\n      })}\n    </>\n  )\n}\n","import * as React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport {\n  ListItemSecondaryAction,\n  ButtonGroup,\n  Button,\n  Tooltip,\n  Icon,\n  ListItemIcon,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@material-ui/core'\nimport { getEventButtonIcon, getEventIcon, getEventDescription } from './utils'\nimport GET_EVENTS from '@src/queries/GetEvents.graphql'\nimport { IEvent, ICheckPoint } from './types'\nimport { theme } from '@src/theme'\nimport {\n  QUERY as SIGN_CHECKPOINT_MUTATION,\n  SignCheckpoint,\n  SignCheckpointVariables,\n} from '@src/queries/__generated__/SignCheckpoint.hooks'\nimport { BASE_URL, pushHistory } from '@src/history'\nimport { UrlStateContext } from '@src/Root/contexts'\nimport { UrlPathEnum } from '@src/types'\n\nexport const EventRow = (props: { event: IEvent }) => {\n  const urlState = React.useContext(UrlStateContext)\n\n  const { event } = props\n  const disabled = urlState.eventId === `${event.eventType}-${event.id}`\n  if (event.eventType === 'CHECKPOINT') {\n    return <CheckpointListItem disabled={disabled} checkpoint={event as ICheckPoint} />\n  }\n  const eventIcon = getEventIcon(event)\n  const onFilterBatch = () => {\n    pushHistory(UrlPathEnum.TransactionList, '', {\n      batchId: event.id,\n    })\n  }\n  const eventButtonIcon = getEventButtonIcon(event)\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilterBatch}>\n      <ListItemIcon>\n        <Tooltip title={event.eventType || ''}>\n          <Icon>{eventIcon}</Icon>\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(event.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{getEventDescription(event)}</Typography>\n      </ListItemText>\n      {eventButtonIcon ? (\n        <ListItemSecondaryAction>\n          <Button>\n            <Icon>{eventButtonIcon}</Icon>\n          </Button>\n        </ListItemSecondaryAction>\n      ) : null}\n    </ListItem>\n  )\n}\n\nexport const CheckpointListItem: React.FC<{\n  disabled: boolean\n  checkpoint: ICheckPoint\n}> = ({ checkpoint, disabled }) => {\n  const [signCheckpoint, { loading }] = useMutation<SignCheckpoint, SignCheckpointVariables>(\n    SIGN_CHECKPOINT_MUTATION,\n    {\n      refetchQueries: [{ query: GET_EVENTS }],\n    },\n  )\n  const onFilter = (e) => {\n    pushHistory(UrlPathEnum.TransactionList, '', {\n      checkpointId: checkpoint.id,\n    })\n  }\n  const description = checkpoint.signedTs\n    ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n        checkpoint.signedTs,\n      ).toLocaleDateString()}`\n    : 'Not Signed'\n\n  if (loading) {\n    return <div>Signing ...</div>\n  }\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilter}>\n      <ListItemIcon>\n        <Tooltip title={checkpoint.eventType || ''}>\n          {checkpoint.signedTs ? (\n            <Icon>toll</Icon>\n          ) : (\n            <Icon style={{ color: theme.palette.success.main }}>fiber_new</Icon>\n          )}\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(checkpoint.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{description}</Typography>\n      </ListItemText>\n      <ListItemSecondaryAction>\n        <ButtonGroup\n          color=\"secondary\"\n          variant=\"contained\"\n          size=\"small\"\n          aria-label=\"Small outlined button group\"\n        >\n          {checkpoint.signedTs ? null : (\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              onClick={() =>\n                signCheckpoint({\n                  variables: {\n                    id: checkpoint.id,\n                  },\n                })\n              }\n            >\n              <Icon>plus_one</Icon>\n            </Button>\n          )}\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            disabled={!sessionStorage.getItem('authToken')}\n            onClick={() => {\n              window.open(\n                `${BASE_URL}/checkpoint/${checkpoint.id}?token=${sessionStorage.getItem(\n                  'authToken',\n                )}`,\n                '_blank',\n              )\n            }}\n          >\n            <Icon>cloud_download</Icon>\n          </Button>\n        </ButtonGroup>\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n}\n","import { IBatch, ICheckPoint, IEvent } from './types'\n\nexport const getEventDescription = (e: IEvent) => {\n  if (e.eventType === 'CHECKPOINT') {\n    const checkpoint = e as ICheckPoint\n    return checkpoint.signedTs\n      ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n          checkpoint.signedTs,\n        ).toLocaleDateString()}`\n      : 'Not Signed'\n  }\n  const batch: IBatch = e as IBatch\n  // bank uploads\n  if (batch.origin != 'wave') {\n    return `${batch.origin}: ${batch.startDate} TO ${batch.endDate}`\n  }\n  // Imported from wave or plaid\n  if (e.eventType === 'BATCH_IMPORT') {\n    const batch_import = e as IBatch\n    return `${batch_import.origin}: ${batch_import.startDate.slice(\n      0,\n      10,\n    )} TO ${batch_import.endDate.slice(0, 10)}`\n  }\n\n  throw new Error('not possible')\n}\nexport const getEventIcon = (event: IEvent) => {\n  if (event.eventType === 'CHECKPOINT') {\n    return 'toll'\n  }\n  const batch: IBatch = event as IBatch\n  // bank uploads\n  if (batch.origin != 'wave') {\n    return 'cloud_upload'\n  }\n  if (batch.eventType === 'BATCH_IMPORT') {\n    const batch_import = batch\n    return { plaid: 'grid_on', wave: 'waves' }[batch_import.origin]\n  }\n  throw new Error('not possible')\n}\n\nexport const getEventButtonIcon = (event: IEvent) => {\n  if (event.eventType === 'CHECKPOINT') {\n    return 'plus_one'\n  }\n  return null\n}\n","import { LinearProgress, List } from '@material-ui/core'\nimport * as React from 'react'\nimport { EventRow } from './EventRow'\nimport { useApolloQuery } from '@src/queries/__generated__/GetEvents.hooks'\n\ninterface Prop {}\nexport const Timeline: React.FC<Prop> = () => {\n  const { loading, error, data } = useApolloQuery()\n  if (loading) return <LinearProgress />\n  if (error) return <p>Error :(</p>\n  if (!data) throw new Error('bad')\n  const events = [\n    // Virtual checkpoint\n    {\n      __typename: 'ICheckPoint' as 'ICheckPoint',\n      id: 0,\n      eventType: 'CHECKPOINT',\n      createdTs: new Date(),\n      signedTs: null,\n      signedBalance: null,\n    },\n    ...data.checkpoints,\n    ...data.batches,\n  ]\n  events.sort((a, b) => {\n    // Latest first\n    return Date.parse(b.createdTs) - Date.parse(a.createdTs)\n  })\n  return (\n    <div>\n      <List>\n        {events.map((e, index) => {\n          return e ? <EventRow event={e} key={index} /> : null\n        })}\n      </List>\n    </div>\n  )\n}\n","import { Paper, LinearProgress, Button, Grid } from '@material-ui/core'\nimport * as React from 'react'\nimport { ImportForm } from './ImportForm'\n\nimport { NewTransactionForm } from './NewTransactionForm'\nimport { TransactionListAppBar } from './TransactionListAppBar'\nimport { TransactionRows } from './TransactionRow'\nimport { UrlStateContext } from '@src/Root/contexts'\nimport { useApolloQuery } from '@src/queries/__generated__/GetTransactions.hooks'\nimport { Timeline } from '@src/Root/Timeline'\n\ntype FormType = 'transaction' | 'wave'\n\nconst limit = 40\nconst isWide = window.innerWidth > 600\n\nexport const TransactionList = (props: {}) => {\n  console.log('rerender entire list page')\n  const urlFilters = React.useContext(UrlStateContext)\n  const [showTimeline, setShowTimeline] = React.useState(isWide)\n  const [formType, setFormType] = React.useState<FormType | null>(null)\n\n  const { loading: isTransactionLoading, error, data, fetchMore } = useApolloQuery({\n    variables: {\n      filters: {\n        offset: 0,\n        limit,\n        ...urlFilters,\n      },\n    },\n  })\n  if (error) {\n    return <div>{error.message}</div>\n  }\n\n  const transactions = data?.transactions || []\n  const categories = data?.categories || []\n  // TODO: implement selectable\n  const selectableCategories = categories.filter((c) => c)\n\n  const loadMoreTransactions = () => {\n    fetchMore({\n      variables: { filters: { offset: transactions.length || -1, limit, ...urlFilters } },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev\n        return Object.assign({}, prev, {\n          transactions: [...prev.transactions, ...fetchMoreResult.transactions],\n        })\n      },\n    })\n  }\n\n  const showForm = (formType: FormType) => {\n    setFormType(formType)\n  }\n  return (\n    <Paper variant=\"outlined\">\n      <div style={{ maxWidth: '100%' }}>\n        <TransactionListAppBar\n          toggleTimeline={() => setShowTimeline(!showTimeline)}\n          showForm={showForm}\n          balance={data?.balance.amount || '?'}\n          categoryChoices={selectableCategories.map((c) => {\n            return { id: c.id, label: c.description }\n          })}\n        />\n        <div\n          style={{\n            height: window.innerHeight - 70,\n            overflow: 'scroll',\n          }}\n        >\n          <Grid container>\n            {showTimeline ? (\n              <Grid item sm={3}>\n                <Timeline />\n              </Grid>\n            ) : null}\n            <Grid item sm={showTimeline ? 9 : 12}>\n              <div style={{ marginBottom: '20px' }}>\n                {formType === 'transaction' ? (\n                  <NewTransactionForm\n                    selectableCategories={selectableCategories || []}\n                    onClose={() => setFormType(null)}\n                  />\n                ) : null}\n                {formType === 'wave' ? <ImportForm onClose={() => setFormType(null)} /> : null}\n              </div>\n              {isTransactionLoading ? (\n                <LinearProgress />\n              ) : (\n                <TransactionRows categories={categories || []} transactions={transactions || []} />\n              )}\n              <Button fullWidth size=\"large\" color=\"secondary\" onClick={loadMoreTransactions}>\n                ({transactions.length}) Click to Load More ...\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","/*\nexport enum UrlPathEnum {\n  Root = '',\n  LoginPage = 'LoginPage',\n  TablesPage = 'TablesPage',\n  TransactionList = 'TransactionList',\n  CategoryPage = 'CategoryPage',\n  PnlChart = 'PnlChart',\n}\n*/\nexport enum UrlPathEnum {\n  Root,\n  LoginPage,\n  TablesPage,\n  TransactionList,\n  CategoryPage,\n  PnlChart,\n}\n","import { Typography, Icon, ListItemIcon, Select, MenuItem } from '@material-ui/core'\nimport * as React from 'react'\n\ninterface IIconSelect {\n  initialValue: string | null\n  onChange: (event, child) => void\n  /*\n  options: Array<{\n    value: number | string\n    label: string\n  }>\n   */\n}\nconst ICON_IDS = [\n  'attach_money',\n  'beach_access',\n  'cake',\n  'compare_arrows',\n  'free_breakfast',\n  'gavel',\n  'home',\n  'local_activity',\n  'local_bar',\n  'local_car_wash',\n  'local_gas_station',\n  'local_grocery_store',\n  'local_hospital',\n  'local_parking',\n  'local_taxi',\n  'motorcycle',\n  'movie',\n  'not_interested',\n  'perm_scan_wifi',\n  'phone_iphone',\n  'power',\n  'help',\n  'restaurant',\n  'rowing',\n  'school',\n  'settings_input_component',\n  'settings_input_hdmi',\n  'shopping_basket',\n  'subway',\n  'theaters',\n  'pets',\n]\nexport const IconSelect: React.FC<IIconSelect> = ({ initialValue, onChange }) => {\n  return (\n    <Select onChange={onChange} value={initialValue}>\n      {ICON_IDS.map((iconId) => (\n        <MenuItem key={iconId} value={iconId}>\n          <ListItemIcon>\n            <Icon color=\"primary\">{iconId}</Icon>\n          </ListItemIcon>\n          <Typography style={{ float: 'right' }}>{iconId}</Typography>\n        </MenuItem>\n      ))}\n    </Select>\n  )\n}\n","import * as React from 'react'\n\nimport {\n  makeStyles,\n  TextField,\n  ListItemSecondaryAction,\n  IconButton,\n  Theme,\n  createStyles,\n  Icon,\n  ListItemIcon,\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core'\nimport { ExpandMore, ExpandLess } from '@material-ui/icons'\nimport { Node } from './selectors'\nimport { IconSelect } from '@src/components/IconSelect'\n\ninterface ITreeProps {\n  node: Node\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n  level?: number\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    node: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n)\n\nexport const Tree: React.FC<ITreeProps> = (props) => {\n  const { node, level = 0, onSelectIcon, onSaveNode } = props\n  const classes = useStyles()\n\n  const [open, setOpen] = React.useState(true)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n  return (\n    <List component=\"nav\" className={classes.node}>\n      <ListItem button onClick={handleClick} style={{ paddingLeft: `${32 * level}px` }}>\n        <ListItemIcon>\n          <Icon color=\"secondary\">{node.iconId}</Icon>\n        </ListItemIcon>\n        <ListItemText primary={node.name}></ListItemText>\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {node.children.map((child) =>\n            child.children.length ? (\n              <Tree\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ) : (\n              <NodeListItem\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ),\n          )}\n        </List>\n      </Collapse>\n    </List>\n  )\n}\n\nconst NodeListItem: React.FC<{\n  node: Node\n  level: number\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n}> = ({ node, level, onSaveNode, onSelectIcon }) => {\n  const [editable, setEditable] = React.useState(false)\n  const [pickingIcon, setPickingIcon] = React.useState(false)\n  const [nodeName, setNodeName] = React.useState(node.name)\n  const [iconId, setIconId] = React.useState(node.iconId)\n  return (\n    <>\n      <ListItem\n        key={node.id}\n        dense\n        button\n        role={undefined}\n        style={{ paddingLeft: `${32 * (level + 1)}px` }}\n      >\n        {editable ? (\n          <TextField\n            autoFocus={true}\n            value={nodeName}\n            onChange={(event) => setNodeName(event.target.value)}\n            onBlur={() => {\n              setEditable(false)\n              onSaveNode(node.id, nodeName)\n            }}\n          />\n        ) : (\n          <>\n            {pickingIcon ? (\n              <IconSelect\n                onChange={(e, child) => {\n                  onSelectIcon(node.id, e.target.value)\n                  setIconId(e.target.value)\n                  setPickingIcon(false)\n                }}\n                initialValue={iconId}\n              ></IconSelect>\n            ) : (\n              <ListItemText onClick={() => setEditable(true)} primary={nodeName}></ListItemText>\n            )}\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => setPickingIcon(true)} edge=\"end\">\n                <Icon color=\"primary\">{iconId}</Icon>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </>\n        )}\n      </ListItem>\n    </>\n  )\n}\n","import { GetCategories_categories } from 'src/queries/__generated__/GetCategories.hooks'\n\nexport interface Node extends GetCategories_categories {\n  children: Array<Node>\n}\n\n/*\n * Recursive: add a node to a tree. If node has no parent, add to root.\n * Otherwise, add to its parent\n */\nconst addNode = (node: Node, tree, visited: Array<Node>, remaining: Array<Node>) => {\n  // Add to root\n  visited.push(node)\n  const p = visited.find((x) => x.id === node.parent_id)\n\n  if (!node.parent_id) {\n    tree[node.id] = node\n    return\n  } else if (p) {\n    // Find parent who is in visited attach\n    const parentNode = p\n    if (!parentNode.children.find((x) => x.id === node.id)) {\n      parentNode.children.push(node)\n    }\n    return\n  } else {\n    //parent is not visited either\n    const parentNode = remaining.find((v) => v.id === node.parent_id)\n    if (!parentNode) {\n      throw new Error('no parent cat')\n    }\n    if (!parentNode.children.find((x) => x.id === node.id)) {\n      parentNode.children.push(node)\n    }\n    // const parentNode = { ...parentCat, children: [node] }\n    return addNode(parentNode, tree, visited, remaining)\n  }\n}\n\nexport const getCategoryTree = (categories: Array<GetCategories_categories>) => {\n  const tree = {}\n  const visited: Array<Node> = []\n  const remaining = categories.map((c) => {\n    return { ...c, children: [] }\n  })\n\n  while (remaining.length > 0) {\n    // Take node out of remaining\n    const node = remaining.pop()\n    if (!node) throw new Error()\n\n    addNode(node, tree, visited, remaining)\n  }\n\n  return tree\n}\n","import * as React from 'react'\nimport { Tree } from './Tree'\nimport { getCategoryTree } from './selectors'\nimport { useApolloQuery } from '@src/queries/__generated__/GetCategories.hooks'\n\nexport const CategoryPage: React.FC<{}> = (props) => {\n  const { data } = useApolloQuery()\n\n  if (!data) {\n    return <div>loading...</div>\n  }\n  const tree = getCategoryTree(data.categories)\n  const root = {\n    id: 0,\n    name: 'root',\n    iconId: null,\n    parent_id: null,\n    is_selectable: false,\n    is_active: true,\n    __typename: 'Category',\n    description: 'root',\n    children: Object.keys(tree).map((k) => tree[k]),\n  }\n\n  return (\n    <Tree\n      onSaveNode={(id: number, name: string) => console.log(id, name)}\n      onSelectIcon={(id: number, iconId: string) => console.log(id, iconId)}\n      node={root as any}\n    />\n  )\n}\n","import * as React from 'react'\nimport {\n  TableBody,\n  TableHead,\n  Icon,\n  IconButton,\n  Tooltip,\n  TableRow,\n  TableContainer,\n  Table as T,\n  TableCell,\n} from '@material-ui/core'\nimport { useApolloQuery } from '@src/queries/__generated__/GetRecords.hooks.ts'\nimport { pushHistory } from '@src/history'\nimport { UrlPathEnum } from '@src/types'\n\ninterface ITableProps {\n  name: string\n  fields: Array<string>\n}\n\nconst Cell: React.FunctionComponent<{ value: string }> = ({ value }) => {\n  const content = <TableCell>{value ? value.substring(0, 100) : ''}</TableCell>\n  if (value.length > 100) {\n    return <Tooltip title={value}>{content}</Tooltip>\n  }\n  return content\n}\n\nexport const Table: React.FunctionComponent<ITableProps> = ({ fields, name }) => {\n  const { loading, data } = useApolloQuery({\n    variables: {\n      filters: {\n        recordType: name,\n        offset: 0,\n        limit: 100,\n      },\n    },\n  })\n  if (loading || !data) return <div>loading...</div>\n\n  return (\n    <div>\n      <IconButton onClick={(e) => pushHistory(UrlPathEnum.TablesPage)}>\n        <Icon fontSize=\"large\" color=\"primary\">\n          arrow_back\n        </Icon>\n      </IconButton>\n      <TableContainer>\n        <T>\n          <TableHead>\n            <TableRow>\n              {fields.map((c) => (\n                <TableCell key={c}>{c}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.records.map((r, index) => (\n              <TableRow key={index}>\n                {r.nameValuePairs.map((pair, i) => (\n                  <Cell key={pair.name} value={pair.value}>\n                    {' '}\n                  </Cell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </T>\n      </TableContainer>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { List, ListItem, ListItemText } from '@material-ui/core'\nimport { Table } from './Table'\nimport { getPathName, pushHistory } from '@src/history'\nimport { UrlPathEnum } from '@src/types'\nimport { useApolloQuery } from '@src/queries/__generated__/GetTableNames.hooks'\n\nexport const TablesPage = () => {\n  const { loading, data } = useApolloQuery()\n  if (loading || !data) return <div>loading ...</div>\n\n  const paths = getPathName()\n\n  console.log('Tables page paths', paths)\n\n  if (paths[2]) {\n    const t = data.tables.find((t) => t.name === paths[2])\n    if (!t) {\n      throw new Error(paths[2])\n    }\n    return <Table name={t.name} fields={t.fields.map((c) => c.name)} />\n  }\n\n  return (\n    <List>\n      {data.tables.map((t) => {\n        return (\n          <ListItem\n            key={t.name}\n            button\n            onClick={() => pushHistory(UrlPathEnum.TablesPage, `${t.name}`)}\n          >\n            <ListItemText primary={t.name} />\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n","import { createBrowserHistory } from 'history'\nimport * as _ from 'lodash'\nimport { UrlPathEnum } from '@src/types'\n\nconst pathMap: { [v: string]: UrlPathEnum } = {\n  '': UrlPathEnum.Root,\n  LoginPage: UrlPathEnum.LoginPage,\n  TablesPage: UrlPathEnum.TablesPage,\n  TransactionList: UrlPathEnum.TransactionList,\n  CategoryPage: UrlPathEnum.CategoryPage,\n  PnlChart: UrlPathEnum.PnlChart,\n}\n\nexport const history = createBrowserHistory()\nexport const pushHistory = (\n  pathname: UrlPathEnum,\n  subpath = '',\n  urlState?: {} | null,\n  state: {} | null = null,\n) => {\n  const searchString =\n    urlState && urlState && Object.keys(urlState).length\n      ? '?urlState=' + JSON.stringify(_.pickBy(urlState, _.identity))\n      : ''\n\n  const pathValue = Object.keys(pathMap).find((k) => pathMap[k] === pathname)\n  if (pathValue === undefined) {\n    throw new Error(`cannot find ${pathname}`)\n  }\n\n  let path: string\n  if (pathValue) {\n    path = ['/' + pathValue, subpath].join('/')\n  } else {\n    path = [pathValue, subpath].join('/')\n  }\n  console.log(`pathname: ${pathname} pathValue: ${pathValue} subpath: ${subpath} path: ${path}`)\n\n  return history.push({\n    pathname: path,\n    search: searchString,\n    state,\n  })\n}\n\nexport const getPathName = (): UrlPathEnum => {\n  const splitPaths = history.location.pathname.split('/').filter((p) => !!p)\n\n  const stripped = splitPaths\n\n  if (stripped.length === 0) {\n    return UrlPathEnum.Root\n  }\n  /*\n  else if (stripped.length !== 1) {\n    throw new Error(`${stripped}: Expected exactly 1 path`)\n  }\n  */\n\n  if (!pathMap[stripped[0]]) {\n    throw new Error(`cannot find ${stripped}`)\n  }\n\n  return pathMap[stripped[0]]\n}\n\nconst isLocal = !!window.location.port\n\nexport const BASE_URL = `${window.location.protocol}//${window.location.hostname}:${\n  isLocal ? '8888' : ''\n}`\n","import { FormControlLabel, List, ListItem, ListItemText, Checkbox } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/core/styles'\n\nimport { Route, Switch } from 'react-router'\nimport * as React from 'react'\nimport { hot } from 'react-hot-loader'\nimport { ApolloProvider } from '@apollo/react-hooks'\n\nimport { connect } from 'react-redux'\nimport { UrlStateContext } from './contexts'\nimport { isDarkMode, theme } from '@src/theme'\nimport { CategoryPage } from '@src/CategoryPage'\nimport { UrlPathEnum } from '@src/types'\nimport { getPathName, pushHistory } from '@src/history'\nimport { LoginPage } from '@src/LoginPage'\nimport { TablesPage } from '@src/TablesPage'\nimport { PnlChart } from '@src/Report/PnlChart'\nimport { parseUrlState } from '@src/selectors'\nimport { TransactionList } from '@src/TransactionList'\nimport { client } from '@src/gqlClient'\n\ninterface StateProps {\n  isAuthenticated: boolean\n  urlState: any\n}\n\ntype Prop = StateProps\n\nconst RootComponent: React.FC<Prop> = (props) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <div style={{ maxWidth: '100%', flex: 8 }}>\n        <UrlStateContext.Provider value={props.urlState}>\n          <Body isAuthenticated={props.isAuthenticated} />\n        </UrlStateContext.Provider>\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport const Root = connect<StateProps, null>((state, ownProps) => {\n  return {\n    isAuthenticated: !!sessionStorage.getItem('authToken'),\n    urlState: parseUrlState(),\n    state,\n  }\n}, null)(RootComponent)\n\nconst PageList: React.FC = () => {\n  const UrlPathsMap = {\n    TransactionList,\n    CategoryPage,\n    PnlChart,\n    TablesPage,\n  }\n  return (\n    <div>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={isDarkMode}\n            onChange={(e) => {\n              sessionStorage.setItem('colorTheme', e.target.checked ? 'dark' : 'light')\n              location.reload()\n            }}\n            name=\"sharedOnly\"\n          />\n        }\n        label=\"Dark Mode\"\n      />\n      <List>\n        {Object.keys(UrlPathsMap).map((c, index) => {\n          return (\n            <ListItem key={index} button onClick={() => pushHistory(UrlPathEnum[c])}>\n              <ListItemText primary={c} />\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  )\n}\n\nclass Body extends React.Component<{ isAuthenticated: boolean }> {\n  render() {\n    const pageMap = {\n      [UrlPathEnum.TablesPage]: <TablesPage />,\n      [UrlPathEnum.LoginPage]: <LoginPage />,\n      [UrlPathEnum.Root]: <PageList />,\n      [UrlPathEnum.TransactionList]: <TransactionList />,\n      [UrlPathEnum.CategoryPage]: <CategoryPage />,\n      [UrlPathEnum.PnlChart]: <PnlChart />,\n    }\n    const pathName = getPathName()\n    // If not on LoginPage and not authenticated, redirect to login page\n    if (!this.props.isAuthenticated && pathName !== UrlPathEnum.LoginPage) {\n      console.warn('not authenticated!!!')\n      pushHistory(UrlPathEnum.LoginPage)\n      return <div />\n    } else {\n      return pageMap[pathName]\n    }\n\n    throw new Error(`Invalid paths: ${getPathName()}`)\n  }\n}\nexport const App = hot(module)(() => (\n  <ApolloProvider client={client}>\n    <Switch>\n      <Route path=\"/\" component={Root} />\n    </Switch>\n  </ApolloProvider>\n))\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetCategories, \n} from '@src/queries/__generated__/GetCategories'\nimport GetCategories__QUERY from '@src/queries/GetCategories.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/GetCategories'\n\nexport const QUERY = GetCategories__QUERY\nexport type GetCategoriesVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options?: QueryHookOptions<GetCategories, GetCategoriesVariables>,\n) {\n  return useQuery<GetCategories, GetCategoriesVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetCategories\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"parent_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"iconId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_selectable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":132}};\n    doc.loc.source = {\"body\":\"query GetCategories {\\n  categories {\\n    id\\n    description\\n    name\\n    parent_id\\n    iconId\\n    is_selectable\\n    is_active\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetCategories\"] = oneQuery(doc, \"GetCategories\");\n        \n","import { Button } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport * as React from 'react'\n\nimport { BASE_URL, pushHistory } from '@src/history'\nimport { UrlPathEnum } from '@src/types'\n\nexport const LoginPage = (props) => {\n  const [username, setUsername] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const [errorMessage, setErrorMessage] = React.useState(null)\n  const submitLogin = () => {\n    fetch(`${BASE_URL}/login`, {\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.code === 200) {\n          sessionStorage.setItem('authToken', data.token)\n          // Redirect to root\n          pushHistory(UrlPathEnum.Root)\n        } else {\n          console.error(data)\n          setErrorMessage(data.message)\n        }\n      })\n  }\n  return (\n    <div\n      style={{\n        height: `${window.innerHeight}px`,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <TextField label=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n      <br />\n      <TextField\n        error={!!errorMessage}\n        helperText={errorMessage || ''}\n        onChange={(e) => setPassword(e.target.value)}\n        type=\"password\"\n        label=\"Password\"\n        onKeyPress={(e) => {\n          if (e.charCode == 13) {\n            submitLogin()\n          }\n        }}\n      />\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={() => submitLogin()}>\n        Login\n      </Button>\n    </div>\n  )\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetRecords, GetRecordsVariables,\n} from '@src/queries/__generated__/GetRecords'\nimport GetRecords__QUERY from '@src/queries/GetRecords.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/GetRecords'\n\nexport const QUERY = GetRecords__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetRecords, GetRecordsVariables>,\n) {\n  return useQuery<GetRecords, GetRecordsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetRecords\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"RecordsFilter\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"records\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"nameValuePairs\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"value\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":132}};\n    doc.loc.source = {\"body\":\"query GetRecords($filters: RecordsFilter!) {\\n  records(filters: $filters) {\\n    nameValuePairs {\\n      name\\n      value\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetRecords\"] = oneQuery(doc, \"GetRecords\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetTableNames, \n} from '@src/queries/__generated__/GetTableNames'\nimport GetTableNames__QUERY from '@src/queries/GetTableNames.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/GetTableNames'\n\nexport const QUERY = GetTableNames__QUERY\nexport type GetTableNamesVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options?: QueryHookOptions<GetTableNames, GetTableNamesVariables>,\n) {\n  return useQuery<GetTableNames, GetTableNamesVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetTableNames\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"tables\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"fields\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":89}};\n    doc.loc.source = {\"body\":\"query GetTableNames {\\n  tables {\\n    name\\n    fields {\\n      name\\n      type\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetTableNames\"] = oneQuery(doc, \"GetTableNames\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetProfitAndLossChart, GetProfitAndLossChartVariables,\n} from '@src/queries/__generated__/GetProfitAndLossChart'\nimport GetProfitAndLossChart__QUERY from '@src/queries/GetProfitAndLossChart.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/GetProfitAndLossChart'\n\nexport const QUERY = GetProfitAndLossChart__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetProfitAndLossChart, GetProfitAndLossChartVariables>,\n) {\n  return useQuery<GetProfitAndLossChart, GetProfitAndLossChartVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetProfitAndLossChart\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"profitAndLossChart\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"series\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"y\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":215}};\n    doc.loc.source = {\"body\":\"query GetProfitAndLossChart($startDate: String!, $endDate: String!) {\\n  profitAndLossChart(startDate: $startDate, endDate: $endDate) {\\n    series {\\n      name\\n      data {\\n        name\\n        y\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetProfitAndLossChart\"] = oneQuery(doc, \"GetProfitAndLossChart\");\n        \n","import querystring from 'querystring'\nimport { history } from '@src/history'\n\nexport function parseUrlState() {\n  const params = parseSearch()\n  if (params && params.urlState) {\n    return JSON.parse(params.urlState as string)\n  }\n  return {}\n}\nexport function parseSearch() {\n  return querystring.parse(history.location.search.split('?')[1])\n}\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  ImportWaveTransactions, ImportWaveTransactionsVariables,\n} from '@src/queries/__generated__/ImportWaveTransactions'\nimport ImportWaveTransactions__QUERY from '@src/queries/ImportWaveTransactions.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/ImportWaveTransactions'\n\nexport const QUERY = ImportWaveTransactions__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ImportWaveTransactions, ImportWaveTransactionsVariables>,\n) {\n  return useMutation<ImportWaveTransactions, ImportWaveTransactionsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ImportWaveTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"importFromWave\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":244}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation ImportWaveTransactions($startDate: String!, $endDate: String!) {\\n  importFromWave(startDate: $startDate, endDate: $endDate) {\\n    isOk\\n    transactions {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"ImportWaveTransactions\"] = oneQuery(doc, \"ImportWaveTransactions\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetLatestImportDate, \n} from '@src/queries/__generated__/GetLatestImportDate'\nimport GetLatestImportDate__QUERY from '@src/queries/GetLatestImportDate.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/GetLatestImportDate'\n\nexport const QUERY = GetLatestImportDate__QUERY\nexport type GetLatestImportDateVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options?: QueryHookOptions<GetLatestImportDate, GetLatestImportDateVariables>,\n) {\n  return useQuery<GetLatestImportDate, GetLatestImportDateVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetLatestImportDate\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"latestImportDate\"},\"arguments\":[],\"directives\":[]}]}}],\"loc\":{\"start\":0,\"end\":49}};\n    doc.loc.source = {\"body\":\"query GetLatestImportDate {\\n  latestImportDate\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetLatestImportDate\"] = oneQuery(doc, \"GetLatestImportDate\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"TransactionFilters\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"parent_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"iconId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_selectable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":306}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nquery GetTransactions($filters: TransactionFilters!) {\\n  balance {\\n    id\\n    amount\\n  }\\n  transactions(filters: $filters) {\\n    ...FragmentTransaction\\n  }\\n  categories {\\n    id\\n    description\\n    name\\n    parent_id\\n    iconId\\n    is_selectable\\n    is_active\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetTransactions\"] = oneQuery(doc, \"GetTransactions\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  CreateTransaction, CreateTransactionVariables,\n} from '@src/queries/__generated__/CreateTransaction'\nimport CreateTransaction__QUERY from '@src/queries/CreateTransaction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/CreateTransaction'\n\nexport const QUERY = CreateTransaction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<CreateTransaction, CreateTransactionVariables>,\n) {\n  return useMutation<CreateTransaction, CreateTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransactionInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":207}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation CreateTransaction($input: CreateTransactionInput!) {\\n  createTransaction(input: $input) {\\n    isOk\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"CreateTransaction\"] = oneQuery(doc, \"CreateTransaction\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  AcceptPrediction, AcceptPredictionVariables,\n} from '@src/queries/__generated__/AcceptPrediction'\nimport AcceptPrediction__QUERY from '@src/queries/AcceptPrediction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/AcceptPrediction'\n\nexport const QUERY = AcceptPrediction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<AcceptPrediction, AcceptPredictionVariables>,\n) {\n  return useMutation<AcceptPrediction, AcceptPredictionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"AcceptPrediction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"acceptPrediction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":219}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation AcceptPrediction($id: Int!) {\\n  acceptPrediction(id: $id) {\\n    isOk\\n    balance {\\n      id\\n      amount\\n    }\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"AcceptPrediction\"] = oneQuery(doc, \"AcceptPrediction\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  CategorizeTransaction, CategorizeTransactionVariables,\n} from '@src/queries/__generated__/CategorizeTransaction'\nimport CategorizeTransaction__QUERY from '@src/queries/CategorizeTransaction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/CategorizeTransaction'\n\nexport const QUERY = CategorizeTransaction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<CategorizeTransaction, CategorizeTransactionVariables>,\n) {\n  return useMutation<CategorizeTransaction, CategorizeTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"CategorizeTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categorizeTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":231}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation CategorizeTransaction($id: Int!, $categoryId: Int!) {\\n  categorizeTransaction(id: $id, categoryId: $categoryId) {\\n    isOk\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"CategorizeTransaction\"] = oneQuery(doc, \"CategorizeTransaction\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateTransactionInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":249}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation UpdateTransaction($input: UpdateTransactionInput!) {\\n  updateTransaction(input: $input) {\\n    isOk\\n    balance {\\n      id\\n      amount\\n    }\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"UpdateTransaction\"] = oneQuery(doc, \"UpdateTransaction\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  ArchiveTransaction, ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction'\nimport ArchiveTransaction__QUERY from '@src/queries/ArchiveTransaction.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/ArchiveTransaction'\n\nexport const QUERY = ArchiveTransaction__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ArchiveTransaction, ArchiveTransactionVariables>,\n) {\n  return useMutation<ArchiveTransaction, ArchiveTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ArchiveTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"archiveTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":88}};\n    doc.loc.source = {\"body\":\"mutation ArchiveTransaction($id: Int!) {\\n  archiveTransaction(id: $id) {\\n    isOk\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"ArchiveTransaction\"] = oneQuery(doc, \"ArchiveTransaction\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetEventLogs, GetEventLogsVariables,\n} from '@src/queries/__generated__/GetEventLogs'\nimport GetEventLogs__QUERY from '@src/queries/GetEventLogs.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/GetEventLogs'\n\nexport const QUERY = GetEventLogs__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetEventLogs, GetEventLogsVariables>,\n) {\n  return useQuery<GetEventLogs, GetEventLogsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetEventLogs\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"EventLogFilters\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventLogs\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"actorId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"entityId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"changes\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":160}};\n    doc.loc.source = {\"body\":\"query GetEventLogs($filters: EventLogFilters!) {\\n  eventLogs(filters: $filters) {\\n    id\\n    actorId\\n    eventName\\n    entityId\\n    createdTs\\n    changes\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetEventLogs\"] = oneQuery(doc, \"GetEventLogs\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  SignCheckpoint, SignCheckpointVariables,\n} from '@src/queries/__generated__/SignCheckpoint'\nimport SignCheckpoint__QUERY from '@src/queries/SignCheckpoint.graphql'\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/SignCheckpoint'\n\nexport const QUERY = SignCheckpoint__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<SignCheckpoint, SignCheckpointVariables>,\n) {\n  return useMutation<SignCheckpoint, SignCheckpointVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"SignCheckpoint\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signCheckpoint\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpoint\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"groupId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":178}};\n    doc.loc.source = {\"body\":\"mutation SignCheckpoint($id: Int!) {\\n  signCheckpoint(id: $id) {\\n    isOk\\n    checkpoint {\\n      id\\n      signedTs\\n      signedById\\n      groupId\\n      signedBalance\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"SignCheckpoint\"] = oneQuery(doc, \"SignCheckpoint\");\n        \n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetEvents, \n} from '@src/queries/__generated__/GetEvents'\nimport GetEvents__QUERY from '@src/queries/GetEvents.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/GetEvents'\n\nexport const QUERY = GetEvents__QUERY\nexport type GetEventsVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options?: QueryHookOptions<GetEvents, GetEventsVariables>,\n) {\n  return useQuery<GetEvents, GetEventsVariables>(QUERY, options)\n}\n","import { InMemoryCache, IntrospectionFragmentMatcher } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n\nimport { ApolloClient as AC } from 'apollo-client'\nimport { concat } from 'apollo-link'\nimport { onError } from 'apollo-link-error'\nimport { HttpLink } from 'apollo-link-http'\nimport { BASE_URL } from '@src/history'\n\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\n  introspectionQueryResultData: {\n    __schema: {\n      types: [],\n    },\n  },\n})\n\nexport const errorLink = onError((response) => {\n  const { graphQLErrors, networkError } = response\n  if (graphQLErrors) {\n    graphQLErrors.forEach((gqlError) => {\n      if (gqlError.extensions && gqlError.extensions.code == '401') {\n        console.error('Not Authenticated')\n        window.location.href = '/LoginPage'\n      }\n    })\n  }\n\n  if (networkError) {\n    if (networkError['statusCode'] === 401) {\n      sessionStorage.removeItem('authToken')\n      console.error('Not Authenticated')\n      window.location.href = '/LoginPage'\n    }\n    console.error(`[Network error]: ${networkError}`)\n  }\n})\n\nconst getLink = () => {\n  return concat(authLink, errorLink).concat(\n    new HttpLink({\n      uri: `${BASE_URL}/graphql`,\n      headers: {\n        authorization: `Bearer ${sessionStorage.getItem('authToken')}`,\n      },\n    }),\n  )\n}\nconst authLink = setContext((_, { headers }) => {\n  const token = sessionStorage.getItem('authToken')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  }\n})\n\nexport const client = new AC({\n  link: getLink(),\n  cache: new InMemoryCache({\n    fragmentMatcher,\n  }),\n})\n","import * as _ from 'lodash'\nimport { combineReducers } from 'redux'\n\nexport const initialState = {}\n\nfunction createReducer(initialState, handlers) {\n  return function reducer(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action)\n    } else {\n      return state\n    }\n  }\n}\n\nconst snacks = createReducer([], {\n  EAT_SNACK: (snacks) => [...snacks.slice(1)],\n  ADD_SNACK: (snacks, action) => [...snacks, action.snack],\n})\n\nconst reducers = combineReducers({\n  snacks,\n})\n\nexport default reducers\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport { Router } from 'react-router'\nimport { history } from './history'\n\nimport { configureStore } from './configureStore'\n\nimport { App } from '@src/Root'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n)\n","import { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nexport const configureStore = (initialState?) => {\n  let middleware = applyMiddleware(thunk, logger())\n  if (process.env.NODE_ENV !== 'production') {\n    middleware = composeWithDevTools(middleware)\n  }\n  const store = createStore(reducers, initialState, middleware)\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers')\n      store.replaceReducer(nextReducer)\n    })\n  }\n  return store\n}\n","import * as React from 'react'\n\ninterface IUrlState {\n  eventId?: string\n  sharedOnly?: boolean\n  searchText?: string\n  categoryId?: number\n  uncategorizedOnly?: boolean\n}\nexport const UrlStateContext = React.createContext<IUrlState>({})\n","\n/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport {\n  GetTransactions, GetTransactionsVariables,\n} from '@src/queries/__generated__/GetTransactions'\nimport GetTransactions__QUERY from '@src/queries/GetTransactions.graphql'\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\n\nexport * from '@src/queries/__generated__/GetTransactions'\n\nexport const QUERY = GetTransactions__QUERY\n\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetTransactions, GetTransactionsVariables>,\n) {\n  return useQuery<GetTransactions, GetTransactionsVariables>(QUERY, options)\n}\n","export function stringToDate(dateString: string): Date {\n  const [year, month, day] = dateString.split('-').map((v) => parseInt(v))\n  const ret = new Date(year, month - 1, day)\n  return ret\n}\nexport function formatDate(d: string): string {\n  const date = new Date(d)\n  return date.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    timeZone: 'UTC',\n  })\n}\n\nexport const getIsoDateString = (d: Date) => {\n  const year = d.getFullYear()\n  const month = d.getMonth() < 9 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1\n  const day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport function getToday(): string {\n  const today = new Date()\n  const year = today.getFullYear()\n  const month = today.getMonth() < 9 ? '0' + (today.getMonth() + 1) : today.getMonth() + 1\n  const day = today.getDate() < 10 ? '0' + today.getDate() : today.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport interface Identifiable {\n  id: string | number\n}\nexport const mergeArrays = <T extends Identifiable>(\n  existing: Array<T>,\n  incoming: Array<T>,\n  prependOrAppend: 'prepend' | 'append',\n): Array<T> => {\n  return incoming.reduce(\n    function (accumulator: Array<T>, value: T) {\n      const index = existing.findIndex((x) => x.id === value.id)\n      if (index >= 0) {\n        const ret = [\n          ...accumulator.slice(0, index),\n          value,\n          ...accumulator.slice(index + 1, accumulator.length),\n        ]\n        return ret\n      } else {\n        return prependOrAppend === 'append' ? [...accumulator, value] : [value, ...accumulator]\n      }\n    },\n    [...existing],\n  )\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IUserTransaction\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalAmount\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issuedDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpointId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"editable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"predicatedCategory\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"predicatedSplit\"},\"arguments\":[],\"directives\":[]}]}}],\"loc\":{\"start\":0,\"end\":216}};\n    doc.loc.source = {\"body\":\"fragment FragmentTransaction on IUserTransaction {\\n  id\\n  totalAmount\\n  issuedDate\\n  notes\\n  categoryId\\n  checkpointId\\n  merchantName\\n  balanceAdjust\\n  createdById\\n  editable\\n  predicatedCategory\\n  predicatedSplit\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","import { createMuiTheme } from '@material-ui/core/styles'\n\nexport const isDarkMode = sessionStorage.getItem('colorTheme') === 'dark'\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: isDarkMode ? 'dark' : 'light',\n  },\n})\n"],"sourceRoot":""}