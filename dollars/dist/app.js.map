{"version":3,"sources":["webpack:///./Root/contexts.ts","webpack:///./queries/__generated__/UpdateTransaction.hooks.ts","webpack:///./Report/PnlChart.tsx","webpack:///./TransactionList/ImportForm.tsx","webpack:///./components/DialogSelect.tsx","webpack:///./TransactionList/NewTransactionForm.tsx","webpack:///./TransactionList/FilterDialog.tsx","webpack:///./TransactionList/TransactionListAppBar.tsx","webpack:///./TransactionList/SmartCatField.tsx","webpack:///./components/ResponsiveLabel.tsx","webpack:///./TransactionList/CategoryField.tsx","webpack:///./components/DebouncedTextField.tsx","webpack:///./TransactionList/BalanceAdjustField.tsx","webpack:///./styles.tsx","webpack:///./TransactionList/TransactionRow.tsx","webpack:///./types/__generated__/globalTypes.ts","webpack:///./Root/Timeline/utils.ts","webpack:///./Root/Timeline/EventRow.tsx","webpack:///./Root/Timeline/index.tsx","webpack:///./TransactionList/index.tsx","webpack:///./components/IconSelect.tsx","webpack:///./CategoryPage/Tree.tsx","webpack:///./CategoryPage/selectors.tsx","webpack:///./CategoryPage/index.tsx","webpack:///./Root/index.tsx","webpack:///./queries/__generated__/GetCategories.hooks.ts","webpack:///./queries/GetCategories.graphql","webpack:///./LoginPage.tsx","webpack:///./queries/__generated__/GetProfitAndLossChart.hooks.ts","webpack:///./queries/GetProfitAndLossChart.graphql","webpack:///./selectors.ts","webpack:///./queries/__generated__/ImportWaveTransactions.hooks.ts","webpack:///./history.ts","webpack:///./queries/ImportWaveTransactions.graphql","webpack:///./queries/GetTransactions.graphql","webpack:///./queries/__generated__/CreateTransaction.hooks.ts","webpack:///./queries/CreateTransaction.graphql","webpack:///./queries/__generated__/AcceptPrediction.hooks.ts","webpack:///./queries/AcceptPrediction.graphql","webpack:///./queries/__generated__/CategorizeTransaction.hooks.ts","webpack:///./queries/CategorizeTransaction.graphql","webpack:///./queries/UpdateTransaction.graphql","webpack:///./queries/__generated__/ArchiveTransaction.hooks.ts","webpack:///./queries/ArchiveTransaction.graphql","webpack:///./queries/__generated__/SignCheckpoint.hooks.ts","webpack:///./queries/SignCheckpoint.graphql","webpack:///./queries/__generated__/GetEvents.hooks.ts","webpack:///./queries/GetEvents.graphql","webpack:///./gqlClient.ts","webpack:///./types/index.ts","webpack:///./queries/__generated__/GetTransactions.hooks.ts","webpack:///./reducers.ts","webpack:///./main.tsx","webpack:///./configureStore.tsx","webpack:///./utils.ts","webpack:///./queries/FragmentTransaction.graphql","webpack:///./actions.ts"],"names":["UrlStateContext","React","QUERY","UpdateTransaction__QUERY","useApolloQuery","options","useMutation","HighchartsData","Highchart","Highcharts","HighchartsDrilldown","today","Date","sixMonthsAgo","setDate","getDate","PnlChart","props","variables","startDate","getIsoDateString","endDate","loading","error","data","initial","chart","type","title","text","xAxis","yAxis","min","align","labels","overflow","tooltip","valueSuffix","plotOptions","bar","dataLabels","enabled","column","allowPointSelect","events","click","onClickColumn","e","console","log","legend","layout","verticalAlign","x","y","floating","borderWidth","shadow","credits","titled","u","config","Object","assign","profitAndLossChart","toISOString","slice","ImportForm","start_date","setStartDate","end_date","setEndDate","update","cache","importFromWave","isOk","cached","readQuery","query","GET_TRANSACTIONS_QUERY","writeQuery","transactions","onClose","importWaveTransactions","Grid","container","item","xs","TextField","label","value","onChange","target","defaultValue","Button","onClick","style","marginTop","color","variant","isWide","window","innerWidth","DialogSelect","choices","onSelectOption","isOpen","setIsOpen","initialOption","option","find","Error","getInitialOption","size","Icon","marginRight","mui_icon_id","Dialog","open","fullWidth","DialogTitle","DialogContent","opt","undefined","placeholder","fieldConfig","issuedDate","required","merchantName","notes","categoryId","balanceAdjust","totalAmount","FieldInput","fieldName","updateField","instance","initialForm","getToday","NewTransactionForm","selectableCategories","formData","setFormData","filters","offset","limit","createTransaction","transaction","message","t","old","event","newState","paddingTop","ExpansionPanel","expanded","ExpansionPanelSummary","spacing","sm","map","cat","id","description","Divider","ExpansionPanelActions","input","disabled","every","Boolean","FilterDialog","setOpen","isShared","setIsShared","searchText","setSearchText","setCategoryId","handleClose","IconButton","aria-labelledby","DialogContentText","margin","parseInt","FormControlLabel","control","Checkbox","checked","name","DialogActions","onSearch","TransactionListAppBar","AppBar","position","Toolbar","Tooltip","toggleTimeline","History","balance","Typography","key","flex","icon","Add","MenuItem","showForm","ListItemIcon","AttachMoney","ListItemText","CreditCard","Waves","sessionStorage","removeItem","location","href","className","SmartCatField","prediction","transactionId","acceptPrediction","split","stopPropagation","categoryName","ResponsiveLabel","ResponsiveLink","children","rest","Link","useStyles","makeStyles","theme","createStyles","appBar","marginLeft","formControl","minWidth","CategoryField","showDialog","setShowDialog","editable","selected","CategoryDialogSelect","initialTextValue","c","classes","categorizeTransaction","textValue","setTextValue","length","filter","includes","toUpperCase","fullScreen","edge","aria-label","Close","autoFocus","List","ListItem","button","then","ListItemSecondaryAction","DebouncedTextField","helperText","setter","onBounce","debounced","_","PrettoSlider","withStyles","root","height","thumb","width","backgroundColor","border","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","BalanceAdjustField","total","setBalanceAdjust","Number","toFixed","percentage","setPercentage","updateTransaction","gutterBottom","alignItems","newPercentage","newBalanceAdjust","toString","max","step","valueLabelDisplay","marks","valueLabelFormat","paddingBottom","newValue","header","opacity","cursor","EventType","TransactionRowComponent","showDate","onToggleExpansion","setNotes","MUTATION","archiveTransaction","ARCHIVE_TRANSACTION_MUTATION","removed","Card","CardHeader","formatDate","CardContent","accountName","plaidCategory","float","Collapse","in","unmountOnExit","parseFloat","textAlign","Fab","Delete","areEqual","last","next","TransactionRow","TransactionRows","setExpanded","index","eventId","categories","EventRow","urlState","event_id","eventType","CHECKPOINT","onFilterEvent","checkpoint","eventIcon","batch","isStatement","BATCH_IMPORT","plaid","wave","origin","getEventIcon","eventButtonIcon","getEventButtonIcon","pushHistory","UrlPathEnum","TransactionList","createdTs","toLocaleDateString","signedTs","signedBalance","batch_import","getEventDescription","CheckpointListItem","SIGN_CHECKPOINT_MUTATION","signCheckpoint","ButtonGroup","getItem","BASE_URL","Timeline","LinearProgress","eventList","showTimeline","setShowTimeline","formType","setFormType","isTransactionLoading","fetchMore","refetch","maxWidth","innerHeight","marginBottom","updateQuery","prev","fetchMoreResult","ICON_IDS","IconSelect","initialValue","Select","iconId","node","palette","background","paper","Tree","level","onSelectIcon","onSaveNode","component","paddingLeft","primary","ExpandLess","ExpandMore","timeout","disablePadding","child","NodeListItem","setEditable","pickingIcon","setPickingIcon","nodeName","setNodeName","setIconId","dense","role","onBlur","addNode","tree","visited","remaining","push","p","parent_id","parentNode","v","CategoryPage","pop","getCategoryTree","is_selectable","is_active","__typename","keys","k","Root","connect","state","ownProps","isAuthenticated","parseUrlState","Provider","Body","PageList","UrlPathsMap","getPathName","LoginPage","this","warn","App","hot","module","client","path","GetCategories__QUERY","useQuery","doc","loc","source","definitionRefs","findOperation","i","definitions","element","forEach","def","refs","Set","collectFragmentReferences","kind","add","selectionSet","selections","selection","variableDefinitions","exports","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","prevRefs","has","childRef","op","oneQuery","username","setUsername","password","setPassword","errorMessage","setErrorMessage","submitLogin","fetch","method","body","JSON","stringify","headers","response","json","code","setItem","token","display","justifyContent","flexDirection","onKeyPress","charCode","GetProfitAndLossChart__QUERY","params","querystring","parse","history","search","ImportWaveTransactions__QUERY","createBrowserHistory","pathname","searchString","endsWith","names","concat","CreateTransaction__QUERY","AcceptPrediction__QUERY","CategorizeTransaction__QUERY","ArchiveTransaction__QUERY","SignCheckpoint__QUERY","GetEvents__QUERY","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","__schema","types","errorLink","onError","graphQLErrors","networkError","gqlError","extensions","authLink","setContext","authorization","AC","link","HttpLink","uri","InMemoryCache","GetTransactions__QUERY","initialState","handlers","snacks","EAT_SNACK","ADD_SNACK","action","snack","reducers","combineReducers","store","middleware","applyMiddleware","thunk","logger","createStore","configureStore","ReactDOM","document","getElementById","d","month","day","timeZone","year","getFullYear","getMonth","isLocal","port","protocol","hostname"],"mappings":"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","file":"app.js","sourcesContent":["import * as React from 'react'\n\nexport const UrlStateContext = React.createContext<any>({})\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  UpdateTransaction,\n  UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction'\nimport UpdateTransaction__QUERY from '@src/queries/UpdateTransaction.graphql'\n\nexport * from '@src/queries/__generated__/UpdateTransaction'\n\nexport const QUERY = UpdateTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<UpdateTransaction, UpdateTransactionVariables>,\n) {\n  return useMutation<UpdateTransaction, UpdateTransactionVariables>(QUERY, options)\n}\n","import HighchartsData from 'highcharts-data'\nimport HighchartsDrilldown from 'highcharts-drilldown'\nimport * as React from 'react'\nimport Highchart from 'react-highcharts'\nimport u from 'updeep'\nimport { useApolloQuery } from '@src/queries/__generated__/GetProfitAndLossChart.hooks'\nimport { getIsoDateString } from '@src/utils'\n\nHighchartsData(Highchart.Highcharts)\nHighchartsDrilldown(Highchart.Highcharts)\n\nconst getChartConfig = ({ onClickColumn }) => {\n  return {\n    chart: {\n      type: 'column',\n      //height: 800,\n      //width: 800\n    },\n    title: {\n      text: 'Income/Expense Report',\n    },\n    xAxis: {\n      type: 'category',\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Spend',\n        align: 'high',\n      },\n      labels: {\n        overflow: 'justify',\n      },\n    },\n    tooltip: {\n      valueSuffix: ' dollars',\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: true,\n        },\n      },\n      column: {\n        dataLabels: {\n          enabled: true,\n        },\n        allowPointSelect: false,\n        events: {\n          click: onClickColumn,\n        },\n      },\n    },\n    legend: {\n      enabled: true,\n      layout: 'vertical',\n      align: 'right',\n      verticalAlign: 'top',\n      x: -40,\n      y: 80,\n      floating: true,\n      borderWidth: 1,\n      shadow: true,\n    },\n    credits: {\n      enabled: false,\n    },\n  }\n}\nconst today = new Date()\nconst sixMonthsAgo = new Date()\nsixMonthsAgo.setDate(sixMonthsAgo.getDate() - 180)\n// Set to start of the month\nsixMonthsAgo.setDate(1)\n\nexport const PnlChart: React.FC<{}> = (props) => {\n  const { loading, error, data } = useApolloQuery({\n    variables: {\n      startDate: getIsoDateString(sixMonthsAgo),\n      endDate: getIsoDateString(today),\n    },\n  })\n  if (loading) {\n    return <div>loading ...</div>\n  }\n  if (error) return <div>error ...</div>\n\n  const initial = getChartConfig({\n    onClickColumn: (e) => console.log(e),\n  })\n  const titled = u(\n    {\n      title: {\n        text: 'Profit & Loss Report',\n      },\n    },\n    initial,\n  )\n  const config = Object.assign({}, titled, data!.profitAndLossChart)\n  return (\n    <div>\n      <Highchart config={config} />\n    </div>\n  )\n}\n","import { Button, Grid, TextField } from '@material-ui/core'\nimport * as React from 'react'\nimport { useApolloQuery } from '@src/queries/__generated__/ImportWaveTransactions.hooks'\nimport {\n  GetTransactions,\n  QUERY as GET_TRANSACTIONS_QUERY,\n} from '@src/queries/__generated__/GetTransactions.hooks'\n\nconst today = new Date().toISOString().slice(0, 10)\n\nexport const ImportForm = (props: { onClose: () => void }) => {\n  const [start_date, setStartDate] = React.useState(today)\n  const [end_date, setEndDate] = React.useState(today)\n  const [importWaveTransactions, { loading }] = useApolloQuery({\n    update(cache, { data }) {\n      if (data?.importFromWave.isOk) {\n        const cached = cache.readQuery<GetTransactions>({ query: GET_TRANSACTIONS_QUERY })\n        cache.writeQuery({\n          query: GET_TRANSACTIONS_QUERY,\n          data: Object.assign({}, cached, {\n            transactions: [...data.importFromWave.transactions, ...cached!.transactions],\n          }),\n        })\n        props.onClose()\n      }\n    },\n  })\n\n  return (\n    <Grid container>\n      <Grid item xs={4}>\n        <TextField\n          type=\"date\"\n          label=\"from\"\n          value={start_date}\n          onChange={(e) => setStartDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField\n          type=\"date\"\n          label=\"to\"\n          defaultValue={today}\n          onChange={(e) => setEndDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <Button\n          onClick={() =>\n            importWaveTransactions({\n              variables: {\n                startDate: start_date,\n                endDate: end_date,\n              },\n            })\n          }\n          style={{ marginTop: '10px' }}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {loading ? 'importing ...' : 'Import'}\n        </Button>\n      </Grid>\n    </Grid>\n  )\n}\n","import { Button, Dialog, DialogContent, DialogTitle, Icon } from '@material-ui/core'\n\nimport * as React from 'react'\n\nimport { Autocomplete } from 'rice-instructor'\n\ninterface DialogSelectProps {\n  choices: Array<{\n    value: string | number\n    mui_icon_id?: string\n    label: string\n  }>\n  onSelectOption: (option) => void\n  value: string | null | number\n}\nconst getInitialOption = (\n  value: string | number | null,\n  choices: Array<{\n    value: string | number\n    mui_icon_id?: string\n    label: string\n  }>,\n) => {\n  if (!value) return null\n  const option = choices.find((x) => x.value === value)\n  if (!option) {\n    console.log(choices)\n    throw new Error(`${value} not found `)\n  }\n\n  return option\n}\nconst isWide = window.innerWidth > 600\nexport const DialogSelect = (props: DialogSelectProps) => {\n  const { choices, value, onSelectOption } = props\n  const [isOpen, setIsOpen] = React.useState(false)\n  const initialOption = getInitialOption(value, choices)\n  return (\n    <div>\n      <Button\n        size={isWide ? 'large' : 'small'}\n        onClick={() => setIsOpen(true)}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        {initialOption ? initialOption.label : 'Select a Category'}\n        {initialOption ? (\n          <Icon style={{ marginRight: '5px' }}>{initialOption.mui_icon_id}</Icon>\n        ) : null}\n      </Button>\n      <Dialog open={isOpen} fullWidth onClose={() => setIsOpen(false)}>\n        <DialogTitle>Select a Category</DialogTitle>\n        <DialogContent>\n          <Autocomplete\n            onSelectOption={(opt) => {\n              onSelectOption(opt)\n              setIsOpen(false)\n            }}\n            defaultValue={initialOption ? initialOption.value : undefined}\n            placeholder=\"Select a category\"\n            options={choices}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import {\n  Button,\n  Divider,\n  ExpansionPanel,\n  ExpansionPanelActions,\n  ExpansionPanelSummary,\n  Grid,\n  TextField,\n} from '@material-ui/core'\nimport * as React from 'react'\nimport {\n  QUERY as GET_TRANSACTIONS_QUERY,\n  GetTransactions,\n  GetTransactions_categories as ICategory,\n} from '@src/queries/__generated__/GetTransactions.hooks'\nimport { DialogSelect } from '@src/components/DialogSelect'\nimport { useApolloQuery } from '@src/queries/__generated__/CreateTransaction.hooks'\nimport { CreateTransactionInput } from '@src/types/__generated__/globalTypes'\n\nimport { getToday } from '@src/utils'\n\ninterface NewTransactionFormProps {\n  onClose: () => void\n  selectableCategories: Array<ICategory>\n}\n\ntype FieldName =\n  | 'issuedDate'\n  | 'merchantName'\n  | 'notes'\n  | 'categoryId'\n  | 'totalAmount'\n  | 'balanceAdjust'\n\nconst fieldConfig = {\n  issuedDate: { type: 'date', required: true },\n  merchantName: { type: 'text', required: true },\n  notes: { type: 'text', required: false },\n  categoryId: { type: 'number', required: false },\n  balanceAdjust: { type: 'number', required: false },\n  totalAmount: { type: 'number', required: true },\n}\n\nconst FieldInput = (props: {\n  fieldName: FieldName\n  updateField: (fieldName) => (event) => void\n  instance: CreateTransactionInput\n}) => {\n  const { fieldName, updateField, instance } = props\n  const config = fieldConfig[fieldName]\n  let error = false\n  if (config.required && !instance[fieldName]) {\n    error = true\n  } else if (config.required && config.type === 'number' && !instance[fieldName]) {\n    error = true\n  }\n\n  return (\n    <TextField\n      type={config.type}\n      required={config.required}\n      error={error}\n      label={fieldName}\n      value={instance[fieldName]}\n      onChange={updateField(fieldName)}\n    />\n  )\n}\nconst initialForm: CreateTransactionInput = {\n  issuedDate: getToday(),\n  merchantName: '',\n  notes: '',\n  categoryId: null,\n  totalAmount: '0',\n  balanceAdjust: '0',\n}\n\nexport const NewTransactionForm: React.FC<NewTransactionFormProps> = (props) => {\n  const { selectableCategories, onClose } = props\n  const [formData, setFormData] = React.useState<CreateTransactionInput>(initialForm)\n  const [createTransaction, { error, loading }] = useApolloQuery({\n    update(cache, { data }) {\n      const variables = {\n        // TODO: send real offset and limit\n        filters: { offset: 0, limit: 40 },\n      }\n      if (data?.createTransaction?.isOk) {\n        const cached = cache.readQuery<GetTransactions>({\n          query: GET_TRANSACTIONS_QUERY,\n          variables,\n        })\n        cache.writeQuery({\n          query: GET_TRANSACTIONS_QUERY,\n          data: Object.assign({}, cached, {\n            transactions: [data.createTransaction.transaction, ...cached!.transactions],\n          }),\n          variables,\n        })\n      }\n    },\n  })\n\n  if (error) {\n    return <div>{error.message}</div>\n  }\n\n  const createNewTransaction = () => {\n    createTransaction({\n      variables: {\n        input: {\n          issuedDate: formData.issuedDate,\n          totalAmount: formData.totalAmount,\n          merchantName: formData.merchantName,\n          balanceAdjust: formData.balanceAdjust || '0',\n          categoryId: formData.categoryId,\n          notes: formData.notes,\n        },\n      },\n    })\n    onClose()\n  }\n  const updateField = (fieldName: FieldName) => {\n    const old = formData\n    return (event) => {\n      const newState = Object.assign({}, old, {\n        [fieldName]: event.target.value,\n      })\n      setFormData(newState)\n    }\n  }\n  const isValid = () => {\n    const t = formData\n    return [t.issuedDate, t.merchantName, +t.totalAmount].every(Boolean)\n  }\n  const transaction = formData\n  return (\n    <div style={{ paddingTop: '10px' }}>\n      <ExpansionPanel expanded={true}>\n        <ExpansionPanelSummary>\n          <Grid container spacing={10}>\n            <Grid item xs={6} sm={4}>\n              <FieldInput instance={transaction} fieldName=\"issuedDate\" updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"merchantName\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"totalAmount\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <DialogSelect\n                value={transaction.categoryId || ''}\n                onSelectOption={(option) => {\n                  const newState = Object.assign({}, formData, {\n                    categoryId: option.value,\n                  })\n                  setFormData(newState)\n                }}\n                choices={selectableCategories.map((cat) => {\n                  return {\n                    value: cat.id,\n                    label: cat.description,\n                    mui_icon_id: cat.mui_icon_id || '',\n                  }\n                })}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput fieldName=\"notes\" instance={transaction} updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"balanceAdjust\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <Divider />\n        <ExpansionPanelActions>\n          <Button\n            size=\"small\"\n            onClick={() => {\n              setFormData(initialForm)\n              onClose()\n            }}\n          >\n            Cancel\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={createNewTransaction} disabled={!isValid()}>\n            {loading ? `saving ...` : `Save`}\n          </Button>\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport {\n  DialogContentText,\n  DialogTitle,\n  Icon,\n  IconButton,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n} from '@material-ui/core'\n\ninterface Prop {\n  onSearch: (filters: { isShared: boolean; categoryId: number | null; searchText: string }) => void\n}\n\nexport const FilterDialog: React.FC<Prop> = (props) => {\n  const [open, setOpen] = React.useState(false)\n  const [isShared, setIsShared] = React.useState(false)\n  const [searchText, setSearchText] = React.useState<string>('')\n  const [categoryId, setCategoryId] = React.useState<number | null>(null)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div>\n      <IconButton onClick={handleClickOpen}>\n        <Icon color=\"primary\">filter_alt</Icon>\n      </IconButton>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Filter Transactions</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Search transactions by category, text (merchant name and notes). By checking \"Shared\",\n            you can limit the results to be shared transactions only.\n          </DialogContentText>\n          <TextField\n            margin=\"dense\"\n            id=\"categoryId\"\n            label=\"Category\"\n            type=\"number\"\n            fullWidth\n            value={categoryId}\n            onChange={(e) => setCategoryId(parseInt(e.target.value))}\n          />\n          <TextField\n            onChange={(e) => setSearchText(e.target.value)}\n            value={searchText}\n            margin=\"dense\"\n            id=\"searchText\"\n            label=\"Text Search\"\n            type=\"text\"\n            fullWidth\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isShared}\n                onChange={(e) => setIsShared(e.target.checked)}\n                name=\"isShared\"\n              />\n            }\n            label=\"Shared\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={(e) => {\n              props.onSearch({\n                isShared,\n                searchText,\n                categoryId,\n              })\n              handleClose()\n            }}\n            color=\"primary\"\n          >\n            Search\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import {\n  AppBar,\n  Icon,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@material-ui/core'\nimport { Add, AttachMoney, CreditCard, History, Waves } from '@material-ui/icons'\nimport * as React from 'react'\nimport { IconMenu } from 'rice-instructor'\nimport { FilterDialog } from '@src/TransactionList/FilterDialog'\n\ninterface Prop {\n  balance: string\n  showForm: (formType: string) => void\n  toggleTimeline: () => void\n  onSearch: (filters: { isShared: boolean; categoryId: number | null; searchText: string }) => void\n}\n\nexport const TransactionListAppBar = (props: Prop) => {\n  const showNewTransactionForm = () => {\n    props.showForm('transaction')\n  }\n\n  const showNewStatementForm = () => {\n    props.showForm('statement')\n  }\n\n  const showWaveImportForm = () => {\n    props.showForm('wave')\n  }\n\n  const toggleTimeline = () => {\n    props.toggleTimeline()\n  }\n\n  return (\n    <AppBar position=\"static\" color=\"default\">\n      <Toolbar>\n        <Tooltip title=\"Timeline\">\n          <IconButton onClick={toggleTimeline}>\n            <History />\n          </IconButton>\n        </Tooltip>\n        {props.balance ? (\n          <Typography variant=\"body1\" key=\"balance\">{`Balance: $${props.balance}`}</Typography>\n        ) : null}\n        <div style={{ flex: 1 }} />\n        <FilterDialog onSearch={props.onSearch} />\n        <IconMenu icon={<Add />}>\n          <MenuItem key=\"new-transaction-menu\" onClick={showNewTransactionForm}>\n            <ListItemIcon>\n              <AttachMoney />\n            </ListItemIcon>\n            <ListItemText>Transaction</ListItemText>\n          </MenuItem>\n          <MenuItem key=\"new-statement-menu\" onClick={showNewStatementForm}>\n            <ListItemIcon>\n              <CreditCard />\n            </ListItemIcon>\n            <ListItemText>Statement</ListItemText>\n          </MenuItem>\n          <MenuItem key=\"new-wave-menu\" onClick={showWaveImportForm}>\n            <ListItemIcon>\n              <Waves color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText>Wave Import</ListItemText>\n          </MenuItem>\n        </IconMenu>\n        <IconButton\n          onClick={() => {\n            sessionStorage.removeItem('authToken')\n            window.location.href = '/'\n          }}\n        >\n          <Icon className=\"material-icons\">exit_to_app</Icon>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import * as React from 'react'\n\nimport { Checkbox, FormControlLabel, Typography } from '@material-ui/core'\nimport { useApolloQuery } from '@src/queries/__generated__/AcceptPrediction.hooks'\nimport { GetTransactions_transactions_prediction } from '@src/queries/__generated__/GetTransactions.hooks'\n\ninterface SmartCatProp {\n  prediction: GetTransactions_transactions_prediction\n  transactionId: number\n}\nconst isWide = window.innerWidth > 600\nexport const SmartCatField: React.FC<SmartCatProp> = (props) => {\n  const { prediction, transactionId } = props\n  const [acceptPrediction, { loading, error }] = useApolloQuery({\n    variables: { id: transactionId },\n  })\n  const split = prediction.split ? 'Split ' : ''\n  if (error) return <div>{error.message}</div>\n  if (loading) return <div>saving...</div>\n  return (\n    <>\n      <FormControlLabel\n        style={{ marginTop: '0px' }}\n        control={\n          <Checkbox\n            color=\"secondary\"\n            onClick={(e) => {\n              // This is to stop the TransactionRow from expanding\n              e.stopPropagation()\n            }}\n            onChange={(e) => {\n              acceptPrediction()\n            }}\n          />\n        }\n        label={\n          <Typography\n            variant={isWide ? 'body1' : 'caption'}\n          >{`${split}${prediction.categoryName}?`}</Typography>\n        }\n      />\n    </>\n  )\n}\n","import * as React from 'react'\nimport { Link, TypographyProps, Typography } from '@material-ui/core'\n\nconst isWide = window.innerWidth > 600\n\nexport const ResponsiveLabel = (props: TypographyProps) => {\n  return <Typography variant={isWide ? 'body1' : 'caption'} {...props} />\n}\ninterface ResponsiveLinkProps extends TypographyProps {\n  disabled?: boolean\n}\n\nexport const ResponsiveLink = (props: ResponsiveLinkProps) => {\n  const { onClick, children, disabled, ...rest } = props\n  return (\n    <ResponsiveLabel {...rest}>\n      {disabled === true ? children : <Link onClick={onClick}>{children}</Link>}\n    </ResponsiveLabel>\n  )\n}\n","import * as React from 'react'\nimport {\n  AppBar,\n  makeStyles,\n  ListItemSecondaryAction,\n  Icon,\n  TextField,\n  ListItemText,\n  List,\n  ListItem,\n  createStyles,\n  Theme,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\n\nimport { ResponsiveLink } from '@src/components/ResponsiveLabel'\nimport {\n  GetTransactions_categories as ICategory,\n  GetTransactions_transactions as IUserTransaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\n\nimport { useApolloQuery } from '@src/queries/__generated__/CategorizeTransaction.hooks'\n\ninterface CategoryFieldProp {\n  transaction: IUserTransaction\n  selectableCategories: Array<ICategory>\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      position: 'relative',\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: '100%',\n    },\n  }),\n)\nexport const CategoryField: React.FC<CategoryFieldProp> = ({\n  selectableCategories,\n  transaction,\n}) => {\n  const [showDialog, setShowDialog] = React.useState(false)\n\n  return (\n    <div>\n      <ResponsiveLink disabled={!transaction.editable} onClick={() => setShowDialog(true)}>\n        {selectableCategories.find((x) => x.id === transaction.categoryId)!.name}\n      </ResponsiveLink>\n      {showDialog ? (\n        <CategoryDialogSelect\n          transactionId={transaction.id}\n          selectableCategories={selectableCategories}\n          selected={transaction.categoryId}\n          showDialog={showDialog}\n          setShowDialog={setShowDialog}\n        />\n      ) : null}\n    </div>\n  )\n}\n\ninterface CategoryDialogSelectProps {\n  setShowDialog: (boolean) => void\n  showDialog: boolean\n  selected: number | null\n  transactionId: number\n  selectableCategories: Array<ICategory>\n}\nconst CategoryDialogSelect: React.FC<CategoryDialogSelectProps> = ({\n  showDialog,\n  setShowDialog,\n  selected,\n  transactionId,\n  selectableCategories,\n}) => {\n  const initialTextValue = selectableCategories.find((c) => c.id === selected)!.name\n  const classes = useStyles()\n  const [categorizeTransaction, { loading }] = useApolloQuery({})\n  const [textValue, setTextValue] = React.useState<string>(initialTextValue)\n\n  const choices =\n    !textValue.length || textValue === initialTextValue\n      ? selectableCategories\n      : selectableCategories.filter((c) => c.name.includes(textValue.toUpperCase()))\n  return (\n    <Dialog fullScreen={true} onClose={() => setShowDialog(false)} open={showDialog}>\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => setShowDialog(false)}\n            aria-label=\"close\"\n          >\n            <Close />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Sound\n          </Typography>\n          <Button autoFocus color=\"inherit\" onClick={() => setShowDialog(false)}>\n            save\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <DialogTitle>Select a Category</DialogTitle>\n      <DialogContent>\n        {loading ? (\n          <div>loading...</div>\n        ) : (\n          <TextField\n            value={textValue}\n            onChange={(e) => {\n              setTextValue(e.target.value)\n            }}\n            variant=\"outlined\"\n          />\n        )}\n        <List>\n          {choices.map((c) => (\n            <ListItem\n              key={c.id}\n              button\n              selected={c.id === selected}\n              onClick={(e) =>\n                categorizeTransaction({\n                  variables: {\n                    id: transactionId,\n                    categoryId: c.id,\n                  },\n                }).then(() => setShowDialog(false))\n              }\n            >\n              <ListItemText>{c.name}</ListItemText>\n              <ListItemSecondaryAction>\n                <Icon color=\"action\">{c.mui_icon_id}</Icon>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import * as React from 'react'\nimport * as _ from 'lodash'\nimport { TextField } from '@material-ui/core'\n\ninterface IDebouncedTextField {\n  helperText?: string\n  onBounce: (newValue) => void\n  setter: (newValue) => void\n  type?: string\n  value?: any\n  loading?: boolean\n  fullWidth?: boolean\n  label?: string\n}\n\nexport const DebouncedTextField: React.FunctionComponent<IDebouncedTextField> = ({\n  helperText,\n  setter,\n  onBounce,\n  label,\n  type,\n  value,\n  loading,\n  fullWidth,\n}) => {\n  const debounced = React.useCallback(_.debounce(onBounce, 1000), [])\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      error={!!loading}\n      fullWidth={fullWidth}\n      label={label}\n      helperText={loading ? 'saving ...' : helperText}\n      type={type}\n      onChange={(event) => {\n        setter(event.target.value)\n        debounced(event.target.value)\n      }}\n      value={value}\n    />\n  )\n}\n","import * as React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Slider from '@material-ui/core/Slider'\nimport { useApolloQuery } from '@src/queries/__generated__/UpdateTransaction.hooks'\nimport { DebouncedTextField } from '@src/components/DebouncedTextField'\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#3f51b5',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider)\n\nconst getPercentage = (balance: number, total: number) => {\n  return Number(((balance / total) * 100).toFixed(2))\n}\n\nexport const BalanceAdjustField = (props: {\n  transactionId\n  total: number\n  balanceAdjust: number\n}) => {\n  const [balanceAdjust, setBalanceAdjust] = React.useState<number>(props.balanceAdjust)\n  const [percentage, setPercentage] = React.useState<number>(\n    getPercentage(balanceAdjust, props.total),\n  )\n  const [updateTransaction, { loading, error }] = useApolloQuery({})\n\n  const handleSliderChange = (event: any, newPercentage: number) => {\n    const newBalanceAdjust = (newPercentage * props.total) / 100\n    setPercentage(newPercentage)\n    setBalanceAdjust(newBalanceAdjust)\n    updateTransaction({\n      variables: {\n        id: props.transactionId,\n        balanceAdjust: newBalanceAdjust.toString(),\n      },\n    })\n  }\n  if (error) return <div>{error.message}</div>\n\n  return (\n    <div>\n      <Typography color=\"primary\" id=\"input-slider\" gutterBottom>\n        Balance Adjust\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs={9}>\n          <PrettoSlider\n            style={{ marginTop: '1.5rem' }}\n            value={typeof percentage === 'number' ? percentage : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n            defaultValue={0}\n            min={-100}\n            max={100}\n            step={null}\n            valueLabelDisplay=\"on\"\n            marks={[\n              { value: -100, label: '-100%' },\n              { value: -50, label: '-50%' },\n              { value: 0, label: '0%' },\n              { value: 50, label: '50%' },\n              { value: 100, label: '100%' },\n            ]}\n            valueLabelFormat={(value: number) => `${value}%`}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <div style={{ paddingBottom: '2rem' }}>\n            <DebouncedTextField\n              type=\"number\"\n              loading={loading}\n              value={balanceAdjust}\n              setter={(newValue) => {\n                setBalanceAdjust(newValue)\n                setPercentage((Number(newValue) / props.total) * 100)\n              }}\n              onBounce={(newValue) => {\n                updateTransaction({\n                  variables: { id: props.transactionId, balanceAdjust: newValue },\n                })\n              }}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport const useStyles = makeStyles({\n  header: {\n    backgroundColor: '#f5f5f5',\n  },\n  disabled: {\n    opacity: '0.5',\n    backgroundColor: 'rgba(0, 0, 0, 0.12)',\n    cursor: 'not-allowed',\n  },\n})\n","import {\n  Card,\n  Collapse,\n  CardHeader,\n  CardContent,\n  Fab,\n  Grid,\n  Icon,\n  Typography,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\nimport { useMutation } from '@apollo/react-hooks'\nimport * as _ from 'lodash'\nimport * as React from 'react'\nimport { SmartCatField } from './SmartCatField'\nimport { CategoryField } from './CategoryField'\nimport { BalanceAdjustField } from './BalanceAdjustField'\nimport { useStyles } from '@src/styles'\nimport { ResponsiveLink, ResponsiveLabel } from '@src/components/ResponsiveLabel'\nimport {\n  QUERY as MUTATION,\n  UpdateTransaction,\n  UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction.hooks'\nimport {\n  QUERY as GET_TRANSACTIONS_QUERY,\n  GetTransactions,\n  GetTransactions_categories,\n  GetTransactions_transactions as GetTransactions_transaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\nimport { DebouncedTextField } from '@src/components/DebouncedTextField'\nimport { formatDate } from '@src/utils'\n\nimport {\n  QUERY as ARCHIVE_TRANSACTION_MUTATION,\n  ArchiveTransaction,\n  ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction.hooks'\n\nconst isWide = window.innerWidth > 600\n\ninterface ITransactionRowProps {\n  transaction: GetTransactions_transaction\n  expanded: boolean\n  selectableCategories: Array<GetTransactions_categories>\n  onToggleExpansion: (event) => void\n  showDate: boolean\n}\n\nexport const CategoryInfoField = (props: {\n  transaction: GetTransactions_transaction\n  category: GetTransactions_categories | null\n}) => {\n  const { transaction, category } = props\n  const prediction = transaction.prediction\n  if (!transaction.categoryId && prediction) {\n    return <SmartCatField prediction={prediction} transactionId={transaction.id} />\n  }\n  return (\n    <Grid container spacing={10}>\n      {isWide ? (\n        <Grid item xs={1}>\n          <Icon className=\"material-icons\">{category ? category.mui_icon_id : null}</Icon>\n        </Grid>\n      ) : null}\n      <Grid item xs>\n        {category ? (\n          <ResponsiveLabel color=\"textSecondary\">{category.description}</ResponsiveLabel>\n        ) : null}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport const TransactionRowComponent = (props: ITransactionRowProps) => {\n  const classes = useStyles()\n\n  const { showDate, selectableCategories, transaction, expanded, onToggleExpansion } = props\n  const [notes, setNotes] = React.useState(transaction.notes)\n  console.log('render row')\n\n  const [updateTransaction, { loading }] = useMutation<\n    UpdateTransaction,\n    UpdateTransactionVariables\n  >(MUTATION)\n  const [archiveTransaction] = useMutation<ArchiveTransaction, ArchiveTransactionVariables>(\n    ARCHIVE_TRANSACTION_MUTATION,\n    {\n      update(cache, { data }) {\n        const variables = {\n          // TODO: send real offset and limit\n          filters: { offset: 0, limit: 40 },\n        }\n        if (data?.archiveTransaction?.isOk) {\n          const cached = cache.readQuery<GetTransactions>({\n            query: GET_TRANSACTIONS_QUERY,\n            variables,\n          })\n          const removed = [...cached!.transactions]\n          _.remove(removed, (t) => t.id === transaction.id)\n          cache.writeQuery({\n            query: GET_TRANSACTIONS_QUERY,\n            data: Object.assign({}, cached, { transactions: removed }),\n            variables,\n          })\n        }\n      },\n    },\n  )\n\n  return (\n    <div>\n      <Card style={showDate ? { marginTop: '1rem' } : undefined}>\n        {showDate ? (\n          <CardHeader className={classes.header} title={formatDate(transaction.issuedDate)} />\n        ) : null}\n        <CardContent className={!transaction.editable ? classes.disabled : undefined}>\n          <Grid container spacing={10}>\n            <Grid item xs={4} sm={4}>\n              {!transaction.categoryId && transaction.prediction ? (\n                <SmartCatField prediction={transaction.prediction} transactionId={transaction.id} />\n              ) : (\n                <CategoryField\n                  transaction={transaction}\n                  selectableCategories={selectableCategories}\n                />\n              )}\n            </Grid>\n            <Grid item xs={5} sm={4}>\n              <ResponsiveLink disabled={!transaction.editable} onClick={onToggleExpansion}>\n                {transaction.merchantName}\n              </ResponsiveLink>\n              <div>\n                <ResponsiveLabel color=\"textSecondary\">{transaction.accountName}</ResponsiveLabel>\n                <ResponsiveLabel color=\"textSecondary\">{transaction.plaidCategory}</ResponsiveLabel>\n                <ResponsiveLabel color=\"textSecondary\">{transaction.notes}</ResponsiveLabel>\n              </div>\n            </Grid>\n            <Grid item xs={3} sm={4}>\n              <div style={{ float: 'right' }}>\n                <ResponsiveLabel>{`${transaction.totalAmount}`}</ResponsiveLabel>\n                <Typography\n                  variant=\"subtitle2\"\n                  style={{\n                    color: +transaction.balanceAdjust > 0 ? 'green' : 'red',\n                  }}\n                >\n                  {`${transaction.balanceAdjust}`}\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Collapse style={{ margin: '1rem' }} in={expanded} unmountOnExit>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={12}>\n              <BalanceAdjustField\n                transactionId={transaction.id}\n                balanceAdjust={Number(transaction.balanceAdjust)}\n                total={parseFloat(transaction.totalAmount)}\n              />\n            </Grid>\n            <Grid item xs={10} sm={11}>\n              <DebouncedTextField\n                fullWidth={true}\n                loading={loading}\n                label=\"Notes\"\n                value={notes}\n                setter={(newValue) => {\n                  setNotes(newValue)\n                }}\n                onBounce={(newValue) =>\n                  updateTransaction({\n                    variables: { id: transaction.id, notes: newValue },\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={2} sm={1} style={{ textAlign: 'right' }}>\n              <Fab\n                size=\"medium\"\n                color=\"secondary\"\n                aria-label=\"Delete\"\n                onClick={() =>\n                  archiveTransaction({\n                    variables: {\n                      id: transaction.id,\n                    },\n                  })\n                }\n              >\n                <Delete />\n              </Fab>\n            </Grid>\n          </Grid>\n        </Collapse>\n      </Card>\n    </div>\n  )\n}\nconst areEqual = (last: ITransactionRowProps, next: ITransactionRowProps) => {\n  if (\n    _.isEqual(last.transaction, next.transaction) &&\n    last.expanded === next.expanded &&\n    last.selectableCategories.length === next.selectableCategories.length\n  ) {\n    return true\n  }\n  return false\n}\nconst TransactionRow = React.memo(TransactionRowComponent, areEqual)\n\n/*\n * This is a wrapper component that is used to control the expansion states of\n * the rows. We do not want a compolicated component to manage the expansion\n * state becaue the rerending will be too expensive.\n */\nexport const TransactionRows: React.FC<{\n  categories: Array<GetTransactions_categories>\n  transactions: Array<GetTransactions_transaction>\n}> = (props) => {\n  const [expanded, setExpanded] = React.useState<number | null>(null)\n  const handleChange = (eventId: number) => (event: React.ChangeEvent<{}>) => {\n    if (eventId === expanded) {\n      return setExpanded(null)\n    }\n    setExpanded(eventId)\n  }\n  return (\n    <>\n      {props.transactions.map((t, index) => {\n        let showDate = false\n        if (index) {\n          const prev = props.transactions[index - 1]\n          showDate = prev.issuedDate !== t.issuedDate\n        } else {\n          showDate = true\n        }\n        return (\n          <TransactionRow\n            showDate={showDate}\n            selectableCategories={props.categories}\n            expanded={expanded === t.id}\n            key={t.id}\n            transaction={t}\n            onToggleExpansion={handleChange(t.id)}\n          />\n        )\n      })}\n    </>\n  )\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\nexport enum EventType {\n  BATCH_IMPORT = 'BATCH_IMPORT',\n  CHECKPOINT = 'CHECKPOINT',\n}\n\nexport interface CreateTransactionInput {\n  issuedDate: string\n  merchantName: string\n  totalAmount: string\n  balanceAdjust: string\n  notes: string\n  categoryId?: number | null\n}\n\nexport interface TransactionFilters {\n  offset: number\n  limit: number\n  eventId?: string | null\n  categoryId?: number | null\n  isShared?: boolean | null\n  searchText?: string | null\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n","import { IImportBatch, ICheckPoint, IEvent } from './types'\nimport { EventType } from '@src/types/__generated__/globalTypes'\n\nexport const getEventDescription = (e: IEvent) => {\n  if (e.eventType === EventType.CHECKPOINT) {\n    const checkpoint = e as ICheckPoint\n    return checkpoint.signedTs\n      ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n          checkpoint.signedTs,\n        ).toLocaleDateString()}`\n      : 'Not Signed'\n  }\n  const batch: IImportBatch = e as IImportBatch\n  if (batch.isStatement) {\n    return `${batch.origin}: ${batch.startDate} TO ${batch.endDate}`\n  }\n  // Imported from wave or plaid\n  if (e.eventType === EventType.BATCH_IMPORT) {\n    const batch_import = e as IImportBatch\n    return `${batch_import.origin}: ${batch_import.startDate.slice(\n      0,\n      10,\n    )} TO ${batch_import.endDate.slice(0, 10)}`\n  }\n\n  throw new Error('not possible')\n}\nexport const getEventIcon = (event: IEvent) => {\n  if (event.eventType === EventType.CHECKPOINT) {\n    return 'toll'\n  }\n  const batch: IImportBatch = event as IImportBatch\n  if (batch.isStatement) {\n    return 'cloud_upload'\n  }\n  if (batch.eventType === EventType.BATCH_IMPORT) {\n    const batch_import = batch\n    return { plaid: 'grid_on', wave: 'waves' }[batch_import.origin]\n  }\n  throw new Error('not possible')\n}\n\nexport const getEventButtonIcon = (event: IEvent) => {\n  if (event.eventType === EventType.CHECKPOINT) {\n    return 'plus_one'\n  }\n  return null\n}\n","import * as React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport {\n  ListItemSecondaryAction,\n  ButtonGroup,\n  Button,\n  Tooltip,\n  Icon,\n  ListItemIcon,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@material-ui/core'\nimport { getEventButtonIcon, getEventIcon, getEventDescription } from './utils'\nimport { IEvent, ICheckPoint } from './types'\nimport {\n  QUERY as SIGN_CHECKPOINT_MUTATION,\n  SignCheckpoint,\n  SignCheckpointVariables,\n} from '@src/queries/__generated__/SignCheckpoint.hooks'\nimport { BASE_URL } from '@src/actions'\nimport { UrlStateContext } from '@src/Root/contexts'\nimport { UrlPathEnum } from '@src/types'\nimport { EventType } from '@src/types/__generated__/globalTypes'\nimport { pushHistory } from '@src/history'\n\nexport const EventRow = (props: { onFilterEvent: (string) => void; event: IEvent }) => {\n  const urlState = React.useContext(UrlStateContext)\n\n  const { event } = props\n  const disabled = urlState.event_id === `${event.eventType}-${event.id}`\n  if (event.eventType === EventType.CHECKPOINT) {\n    return (\n      <CheckpointListItem\n        onFilterEvent={props.onFilterEvent}\n        disabled={disabled}\n        checkpoint={event as ICheckPoint}\n      />\n    )\n  }\n  const eventIcon = getEventIcon(event)\n  const onFilter = (e) => {\n    props.onFilterEvent(`${event.eventType}-${event.id}`)\n    pushHistory(UrlPathEnum.TransactionList, {\n      event_id: `${event.eventType}-${event.id}`,\n    })\n  }\n  const eventButtonIcon = getEventButtonIcon(event)\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilter}>\n      <ListItemIcon>\n        <Tooltip title={event.eventType || ''}>\n          <Icon color=\"primary\">{eventIcon}</Icon>\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(event.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{getEventDescription(event)}</Typography>\n      </ListItemText>\n      {eventButtonIcon ? (\n        <ListItemSecondaryAction>\n          <Button>\n            <Icon>{eventButtonIcon}</Icon>\n          </Button>\n        </ListItemSecondaryAction>\n      ) : null}\n    </ListItem>\n  )\n}\n\nexport const CheckpointListItem: React.FC<{\n  onFilterEvent: (string) => void\n  disabled: boolean\n  checkpoint: ICheckPoint\n}> = ({ onFilterEvent, checkpoint, disabled }) => {\n  const [signCheckpoint, { loading }] = useMutation<SignCheckpoint, SignCheckpointVariables>(\n    SIGN_CHECKPOINT_MUTATION,\n  )\n  const onFilter = (e) => {\n    onFilterEvent(`${checkpoint.eventType}-${checkpoint.id}`)\n    pushHistory(UrlPathEnum.TransactionList, {\n      event_id: `${checkpoint.eventType}-${checkpoint.id}`,\n    })\n  }\n  const description = checkpoint.signedTs\n    ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n        checkpoint.signedTs,\n      ).toLocaleDateString()}`\n    : 'Not Signed'\n\n  if (loading) {\n    return <div>Signing ...</div>\n  }\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilter}>\n      <ListItemIcon>\n        <Tooltip title={checkpoint.eventType || ''}>\n          {checkpoint.signedTs ? (\n            <Icon color=\"primary\">toll</Icon>\n          ) : (\n            <Icon style={{ color: 'green' }}>fiber_new</Icon>\n          )}\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(checkpoint.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{description}</Typography>\n      </ListItemText>\n      <ListItemSecondaryAction>\n        <ButtonGroup\n          color=\"secondary\"\n          variant=\"contained\"\n          size=\"small\"\n          aria-label=\"Small outlined button group\"\n        >\n          {checkpoint.signedTs ? null : (\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              onClick={() =>\n                signCheckpoint({\n                  variables: {\n                    id: checkpoint.id,\n                  },\n                })\n              }\n            >\n              <Icon>plus_one</Icon>\n            </Button>\n          )}\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            disabled={!sessionStorage.getItem('authToken')}\n            onClick={() => {\n              window.open(\n                `${BASE_URL}/RAHoliCy/checkpoint/${checkpoint.id}?token=${sessionStorage.getItem(\n                  'authToken',\n                )}`,\n                '_blank',\n              )\n            }}\n          >\n            <Icon>cloud_download</Icon>\n          </Button>\n        </ButtonGroup>\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n}\n","import { LinearProgress, List } from '@material-ui/core'\nimport * as React from 'react'\nimport { EventRow } from './EventRow'\nimport { useApolloQuery } from '@src/queries/__generated__/GetEvents.hooks'\n\ninterface Prop {\n  onFilterEvent: (string) => void\n}\nexport const Timeline: React.FC<Prop> = (props) => {\n  const { loading, error, data } = useApolloQuery()\n  if (loading) return <LinearProgress />\n  if (error) return <p>Error :(</p>\n  if (!data) throw new Error('bad')\n  return (\n    <div>\n      <List>\n        {data.eventList.events.map((e, index) => {\n          return e ? <EventRow onFilterEvent={props.onFilterEvent} event={e} key={index} /> : null\n        })}\n      </List>\n    </div>\n  )\n}\n","import { LinearProgress, Button, Grid } from '@material-ui/core'\nimport * as React from 'react'\nimport { ImportForm } from './ImportForm'\n\nimport { NewTransactionForm } from './NewTransactionForm'\nimport { TransactionListAppBar } from './TransactionListAppBar'\nimport { TransactionRows } from './TransactionRow'\nimport { useApolloQuery } from '@src/queries/__generated__/GetTransactions.hooks'\nimport { Timeline } from '@src/Root/Timeline'\n\ntype FormType = 'transaction' | 'statement' | 'wave'\n\nconst limit = 40\nconst isWide = window.innerWidth > 600\n\nexport const TransactionList = (props: {}) => {\n  console.log('rerender entire list page')\n  const [showTimeline, setShowTimeline] = React.useState(isWide)\n  const [formType, setFormType] = React.useState<FormType | null>(null)\n\n  const { loading: isTransactionLoading, error, data, fetchMore, refetch } = useApolloQuery({\n    variables: {\n      filters: {\n        offset: 0,\n        limit,\n      },\n    },\n  })\n  if (error) {\n    return <div>{error.message}</div>\n  }\n\n  const transactions = data?.transactions || []\n  const categories = data?.categories || []\n\n  const loadMoreTransactions = () => {\n    fetchMore({\n      variables: { filters: { offset: transactions.length || -1, limit } },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev\n        return Object.assign({}, prev, {\n          transactions: [...prev.transactions, ...fetchMoreResult.transactions],\n        })\n      },\n    })\n  }\n\n  const showForm = (formType: FormType) => {\n    setFormType(formType)\n  }\n  return (\n    <div style={{ maxWidth: '100%' }}>\n      <TransactionListAppBar\n        onSearch={(filters) => {\n          refetch({\n            filters: {\n              offset: transactions.length,\n              limit,\n              isShared: filters.isShared,\n              categoryId: filters.categoryId,\n              searchText: filters.searchText,\n            },\n          })\n        }}\n        toggleTimeline={() => setShowTimeline(!showTimeline)}\n        showForm={showForm}\n        balance={data?.balance || '?'}\n      />\n      <div\n        style={{\n          height: window.innerHeight - 70,\n          overflow: 'scroll',\n        }}\n      >\n        <Grid container>\n          {showTimeline ? (\n            <Grid item sm={3}>\n              <Timeline\n                onFilterEvent={(eventId: string) =>\n                  // offset is always 0 when we refetch\n                  refetch({\n                    filters: { offset: 0, limit, eventId },\n                  })\n                }\n              />\n            </Grid>\n          ) : null}\n          <Grid item sm={showTimeline ? 9 : 12}>\n            <div style={{ marginBottom: '20px' }}>\n              {formType === 'transaction' ? (\n                <NewTransactionForm\n                  selectableCategories={categories || []}\n                  onClose={() => setFormType(null)}\n                />\n              ) : null}\n              {formType === 'wave' ? <ImportForm onClose={() => setFormType(null)} /> : null}\n            </div>\n            {isTransactionLoading ? (\n              <LinearProgress />\n            ) : (\n              <TransactionRows categories={categories || []} transactions={transactions || []} />\n            )}\n            <Button fullWidth size=\"large\" color=\"secondary\" onClick={loadMoreTransactions}>\n              ({transactions.length}) Click to Load More ...\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  )\n}\n","import { Typography, Icon, ListItemIcon, Select, MenuItem } from '@material-ui/core'\nimport * as React from 'react'\n\ninterface IIconSelect {\n  initialValue: string | null\n  onChange: (event, child) => void\n  /*\n  options: Array<{\n    value: number | string\n    label: string\n  }>\n   */\n}\nconst ICON_IDS = [\n  'attach_money',\n  'beach_access',\n  'cake',\n  'compare_arrows',\n  'free_breakfast',\n  'gavel',\n  'home',\n  'local_activity',\n  'local_bar',\n  'local_car_wash',\n  'local_gas_station',\n  'local_grocery_store',\n  'local_hospital',\n  'local_parking',\n  'local_taxi',\n  'motorcycle',\n  'movie',\n  'not_interested',\n  'perm_scan_wifi',\n  'phone_iphone',\n  'power',\n  'help',\n  'restaurant',\n  'rowing',\n  'school',\n  'settings_input_component',\n  'settings_input_hdmi',\n  'shopping_basket',\n  'subway',\n  'theaters',\n  'pets',\n]\nexport const IconSelect: React.FC<IIconSelect> = ({ initialValue, onChange }) => {\n  return (\n    <Select onChange={onChange} value={initialValue}>\n      {ICON_IDS.map((iconId) => (\n        <MenuItem key={iconId} value={iconId}>\n          <ListItemIcon>\n            <Icon color=\"primary\">{iconId}</Icon>\n          </ListItemIcon>\n          <Typography style={{ float: 'right' }}>{iconId}</Typography>\n        </MenuItem>\n      ))}\n    </Select>\n  )\n}\n","import * as React from 'react'\n\nimport {\n  makeStyles,\n  TextField,\n  ListItemSecondaryAction,\n  IconButton,\n  Theme,\n  createStyles,\n  Icon,\n  ListItemIcon,\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core'\nimport { ExpandMore, ExpandLess } from '@material-ui/icons'\nimport { Node } from './selectors'\nimport { IconSelect } from '@src/components/IconSelect'\n\ninterface ITreeProps {\n  node: Node\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n  level?: number\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    node: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n)\n\nexport const Tree: React.FC<ITreeProps> = (props) => {\n  const { node, level = 0, onSelectIcon, onSaveNode } = props\n  const classes = useStyles()\n\n  const [open, setOpen] = React.useState(true)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n  return (\n    <List component=\"nav\" className={classes.node}>\n      <ListItem button onClick={handleClick} style={{ paddingLeft: `${32 * level}px` }}>\n        <ListItemIcon>\n          <Icon color=\"secondary\">{node.mui_icon_id}</Icon>\n        </ListItemIcon>\n        <ListItemText primary={node.name}></ListItemText>\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {node.children.map((child) =>\n            child.children.length ? (\n              <Tree\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ) : (\n              <NodeListItem\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ),\n          )}\n        </List>\n      </Collapse>\n    </List>\n  )\n}\n\nconst NodeListItem: React.FC<{\n  node: Node\n  level: number\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n}> = ({ node, level, onSaveNode, onSelectIcon }) => {\n  const [editable, setEditable] = React.useState(false)\n  const [pickingIcon, setPickingIcon] = React.useState(false)\n  const [nodeName, setNodeName] = React.useState(node.name)\n  const [iconId, setIconId] = React.useState(node.mui_icon_id)\n  return (\n    <>\n      <ListItem\n        key={node.id}\n        dense\n        button\n        role={undefined}\n        style={{ paddingLeft: `${32 * (level + 1)}px` }}\n      >\n        {editable ? (\n          <TextField\n            autoFocus={true}\n            value={nodeName}\n            onChange={(event) => setNodeName(event.target.value)}\n            onBlur={() => {\n              setEditable(false)\n              onSaveNode(node.id, nodeName)\n            }}\n          />\n        ) : (\n          <>\n            {pickingIcon ? (\n              <IconSelect\n                onChange={(e, child) => {\n                  onSelectIcon(node.id, e.target.value)\n                  setIconId(e.target.value)\n                  setPickingIcon(false)\n                }}\n                initialValue={iconId}\n              ></IconSelect>\n            ) : (\n              <ListItemText onClick={() => setEditable(true)} primary={nodeName}></ListItemText>\n            )}\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => setPickingIcon(true)} edge=\"end\">\n                <Icon color=\"primary\">{iconId}</Icon>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </>\n        )}\n      </ListItem>\n    </>\n  )\n}\n","import { GetCategories_categories } from 'src/queries/__generated__/GetCategories.hooks'\n\nexport interface Node extends GetCategories_categories {\n  children: Array<Node>\n}\n\n/*\n * Recursive: add a node to a tree. If node has no parent, add to root.\n * Otherwise, add to its parent\n */\nconst addNode = (node: Node, tree, visited: Array<Node>, remaining: Array<Node>) => {\n  // Add to root\n  visited.push(node)\n  const p = visited.find((x) => x.id === node.parent_id)\n\n  if (!node.parent_id) {\n    tree[node.id] = node\n    return\n  } else if (p) {\n    // Find parent who is in visited attach\n    const parentNode = p\n    if (!parentNode.children.find((x) => x.id === node.id)) {\n      parentNode.children.push(node)\n    }\n    return\n  } else {\n    //parent is not visited either\n    const parentNode = remaining.find((v) => v.id === node.parent_id)\n    if (!parentNode) {\n      throw new Error('no parent cat')\n    }\n    if (!parentNode.children.find((x) => x.id === node.id)) {\n      parentNode.children.push(node)\n    }\n    // const parentNode = { ...parentCat, children: [node] }\n    return addNode(parentNode, tree, visited, remaining)\n  }\n}\n\nexport const getCategoryTree = (categories: Array<GetCategories_categories>) => {\n  const tree = {}\n  const visited: Array<Node> = []\n  const remaining = categories.map((c) => {\n    return { ...c, children: [] }\n  })\n\n  while (remaining.length > 0) {\n    // Take node out of remaining\n    const node = remaining.pop()\n    if (!node) throw new Error()\n\n    addNode(node, tree, visited, remaining)\n  }\n\n  return tree\n}\n\n/*\n\nconst testData = [\n  {\n    id: 1,\n    description: 'Retail',\n    name: 'RETAIL',\n    parent_id: 42,\n    mui_icon_id: 'shopping_basket',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 2,\n    description: 'Clothing Cosmetic',\n    name: 'CLOTHING_COSMETIC',\n    parent_id: 1,\n    mui_icon_id: 'shopping_basket',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 3,\n    description: 'Electronic',\n    name: 'ELECTRONIC',\n    parent_id: 1,\n    mui_icon_id: 'settings_input_hdmi',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 4,\n    description: 'Sport',\n    name: 'SPORT',\n    parent_id: 1,\n    mui_icon_id: 'rowing',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 5,\n    description: 'Gift',\n    name: 'GIFT',\n    parent_id: 1,\n    mui_icon_id: 'cake',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 6,\n    description: 'Home',\n    name: 'HOME',\n    parent_id: 1,\n    mui_icon_id: 'home',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 8,\n    description: 'Restaurant',\n    name: 'RESTAURANT',\n    parent_id: 42,\n    mui_icon_id: 'restaurant',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 9,\n    description: 'Grocery',\n    name: 'GROCERY',\n    parent_id: 42,\n    mui_icon_id: 'local_grocery_store',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 10,\n    description: 'Liquor',\n    name: 'LIQUOR',\n    parent_id: 42,\n    mui_icon_id: 'local_bar',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 11,\n    description: 'Lunch',\n    name: 'LUNCH',\n    parent_id: 8,\n    mui_icon_id: 'restaurant',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 12,\n    description: 'Dinner',\n    name: 'DINNER',\n    parent_id: 8,\n    mui_icon_id: 'restaurant',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 13,\n    description: 'Breakfast',\n    name: 'BREAKFAST',\n    parent_id: 8,\n    mui_icon_id: 'free_breakfast',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 14,\n    description: 'Tranportaion',\n    name: 'TRANPORTAION',\n    parent_id: 42,\n    mui_icon_id: 'local_taxi',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 15,\n    description: 'Gas',\n    name: 'GAS',\n    parent_id: 14,\n    mui_icon_id: 'local_gas_station',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 16,\n    description: 'Parking',\n    name: 'PARKING',\n    parent_id: 14,\n    mui_icon_id: 'local_parking',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 17,\n    description: 'Public Transit',\n    name: 'PUBLIC_TRANSIT',\n    parent_id: 14,\n    mui_icon_id: 'subway',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 18,\n    description: 'Health',\n    name: 'HEALTH',\n    parent_id: 42,\n    mui_icon_id: 'local_hospital',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 19,\n    description: 'Medical',\n    name: 'MEDICAL',\n    parent_id: 18,\n    mui_icon_id: 'local_hospital',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 21,\n    description: 'Shelter',\n    name: 'SHELTER',\n    parent_id: 42,\n    mui_icon_id: 'home',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 22,\n    description: 'Mortgage',\n    name: 'MORTGAGE',\n    parent_id: 21,\n    mui_icon_id: 'home',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 24,\n    description: 'Down Payment',\n    name: 'DOWN_PAYMENT',\n    parent_id: 21,\n    mui_icon_id: 'home',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 26,\n    description: 'Automobile',\n    name: 'AUTOMOBILE',\n    parent_id: 42,\n    mui_icon_id: 'motorcycle',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 27,\n    description: 'Car Insurance',\n    name: 'CAR_INSURANCE',\n    parent_id: 26,\n    mui_icon_id: 'local_car_wash',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 30,\n    description: 'Maintanence',\n    name: 'MAINTANENCE',\n    parent_id: 26,\n    mui_icon_id: 'local_car_wash',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 31,\n    description: 'Utility',\n    name: 'UTILITY',\n    parent_id: 42,\n    mui_icon_id: 'settings_input_component',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 32,\n    description: 'Hydro',\n    name: 'HYDRO',\n    parent_id: 31,\n    mui_icon_id: 'power',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 33,\n    description: 'Mobile',\n    name: 'MOBILE',\n    parent_id: 31,\n    mui_icon_id: 'phone_iphone',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 34,\n    description: 'Internet',\n    name: 'INTERNET',\n    parent_id: 31,\n    mui_icon_id: 'perm_scan_wifi',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 35,\n    description: 'Entertainment',\n    name: 'ENTERTAINMENT',\n    parent_id: 42,\n    mui_icon_id: 'theaters',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 36,\n    description: 'Movie',\n    name: 'MOVIE',\n    parent_id: 35,\n    mui_icon_id: 'movie',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 37,\n    description: 'Miscellaneous',\n    name: 'MISCELLANEOUS',\n    parent_id: 42,\n    mui_icon_id: '',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 38,\n    description: 'Education',\n    name: 'EDUCATION',\n    parent_id: 42,\n    mui_icon_id: 'school',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 39,\n    description: 'Covernment Fees',\n    name: 'FEES_CHARGES',\n    parent_id: 42,\n    mui_icon_id: 'gavel',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 40,\n    description: 'Income',\n    name: 'INCOME',\n    parent_id: null,\n    mui_icon_id: 'attach_money',\n    is_selectable: true,\n    is_active: true,\n  },\n  {\n    id: 41,\n    description: 'Transfer',\n    name: 'TRANSFER',\n    parent_id: 18,\n    mui_icon_id: 'compare_arrows',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 42,\n    description: 'Expense',\n    name: 'EXPENSE',\n    parent_id: null,\n    mui_icon_id: '',\n    is_selectable: true,\n    is_active: true,\n  },\n  {\n    id: 46,\n    description: 'Vacation',\n    name: 'VACATION',\n    parent_id: 35,\n    mui_icon_id: 'beach_access',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 48,\n    description: 'Activity',\n    name: 'ACTIVITY',\n    parent_id: 35,\n    mui_icon_id: 'local_activity',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 49,\n    description: 'Ignore',\n    name: 'IGNORE',\n    parent_id: null,\n    mui_icon_id: 'not_interested',\n    is_selectable: true,\n    is_active: true,\n  },\n  {\n    id: 50,\n    description: 'Massage & Spa',\n    name: 'MASSAGE_SPA',\n    parent_id: 18,\n    mui_icon_id: 'spa',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 51,\n    description: 'Donation',\n    name: 'DONATION',\n    parent_id: 42,\n    mui_icon_id: 'pets',\n    is_selectable: false,\n    is_active: true,\n  },\n]\n*/\n","import * as React from 'react'\nimport { Tree } from './Tree'\nimport { getCategoryTree } from './selectors'\nimport { useApolloQuery } from '@src/queries/__generated__/GetCategories.hooks'\n\nexport const CategoryPage: React.FC<{}> = (props) => {\n  const { data } = useApolloQuery()\n\n  if (!data) {\n    return <div>loading...</div>\n  }\n  const tree = getCategoryTree(data.categories)\n  const root = {\n    id: 0,\n    name: 'root',\n    mui_icon_id: null,\n    parent_id: null,\n    is_selectable: false,\n    is_active: true,\n    __typename: 'Category',\n    description: 'root',\n    children: Object.keys(tree).map((k) => tree[k]),\n  }\n\n  return (\n    <Tree\n      onSaveNode={(id: number, name: string) => console.log(id, name)}\n      onSelectIcon={(id: number, iconId: string) => console.log(id, iconId)}\n      node={root as any}\n    />\n  )\n}\n","import { List, ListItem, ListItemText } from '@material-ui/core'\nimport { Route, Switch } from 'react-router'\nimport * as React from 'react'\nimport { hot } from 'react-hot-loader'\nimport { ApolloProvider } from '@apollo/react-hooks'\n\nimport { connect } from 'react-redux'\nimport { UrlStateContext } from './contexts'\nimport { CategoryPage } from '@src/CategoryPage'\nimport { UrlPathEnum } from '@src/types'\nimport { getPathName, pushHistory } from '@src/history'\nimport { LoginPage } from '@src/LoginPage'\nimport { PnlChart } from '@src/Report/PnlChart'\nimport { parseUrlState } from '@src/selectors'\nimport { TransactionList } from '@src/TransactionList'\nimport { client } from '@src/gqlClient'\n\ninterface StateProps {\n  isAuthenticated: boolean\n  urlState: any\n}\n\ntype Prop = StateProps\n\nconst RootComponent: React.FC<Prop> = (props) => {\n  return (\n    <div style={{ maxWidth: '100%', flex: 8 }}>\n      <UrlStateContext.Provider value={props.urlState}>\n        <Body isAuthenticated={props.isAuthenticated} />\n      </UrlStateContext.Provider>\n    </div>\n  )\n}\n\nexport const Root = connect<StateProps, null>((state, ownProps) => {\n  return {\n    isAuthenticated: !!sessionStorage.getItem('authToken'),\n    urlState: parseUrlState(),\n    state,\n  }\n}, null)(RootComponent)\n\nconst PageList: React.FC = () => {\n  const UrlPathsMap = {\n    TransactionList,\n    CategoryPage,\n    PnlChart,\n  }\n  return (\n    <List>\n      {Object.keys(UrlPathsMap).map((c, index) => {\n        return (\n          <ListItem key={index} button onClick={() => pushHistory(c as UrlPathEnum)}>\n            <ListItemText primary={c} />\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n\nclass Body extends React.Component<{ isAuthenticated: boolean }> {\n  render() {\n    if (getPathName() === UrlPathEnum.LoginPage) {\n      return <LoginPage />\n    }\n    if (!this.props.isAuthenticated) {\n      console.warn('not authenticated!!!')\n      pushHistory(UrlPathEnum.LoginPage)\n      return <div />\n    }\n    if (getPathName() === '/goTIOnaTErYeRsUraYhOMEO' || getPathName() === UrlPathEnum.Root) {\n      return <PageList />\n    }\n    if (getPathName() === UrlPathEnum.TransactionList) {\n      return <TransactionList />\n    }\n    if (getPathName() === UrlPathEnum.CategoryPage) {\n      return <CategoryPage />\n    }\n    if (getPathName() === UrlPathEnum.PnlChart) {\n      return <PnlChart />\n    }\n\n    throw new Error(`Invalid paths: ${getPathName()}`)\n  }\n}\nexport const App = hot(module)(() => (\n  <ApolloProvider client={client}>\n    <Switch>\n      <Route path=\"/\" component={Root} />\n    </Switch>\n  </ApolloProvider>\n))\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport { GetCategories } from '@src/queries/__generated__/GetCategories'\nimport GetCategories__QUERY from '@src/queries/GetCategories.graphql'\n\nexport * from '@src/queries/__generated__/GetCategories'\n\nexport const QUERY = GetCategories__QUERY\nexport type GetCategoriesVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(options?: QueryHookOptions<GetCategories, GetCategoriesVariables>) {\n  return useQuery<GetCategories, GetCategoriesVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetCategories\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"parent_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"mui_icon_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_selectable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":137}};\n    doc.loc.source = {\"body\":\"query GetCategories {\\n  categories {\\n    id\\n    description\\n    name\\n    parent_id\\n    mui_icon_id\\n    is_selectable\\n    is_active\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetCategories\"] = oneQuery(doc, \"GetCategories\");\n        \n","import { Button } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport * as React from 'react'\n\nimport { pushHistory } from '@src/history'\nimport { UrlPathEnum } from '@src/types'\nimport { BASE_URL } from '@src/actions'\n\nexport const LoginPage = (props) => {\n  const [username, setUsername] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const [errorMessage, setErrorMessage] = React.useState(null)\n  const submitLogin = () => {\n    fetch(`${BASE_URL}/goTIOnaTErYeRsUraYhOMEO/login`, {\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.code === 200) {\n          sessionStorage.setItem('authToken', data.token)\n          // Redirect to root\n          pushHistory(UrlPathEnum.Root)\n        } else {\n          console.error(data)\n          setErrorMessage(data.message)\n        }\n      })\n  }\n  return (\n    <div\n      style={{\n        height: `${window.innerHeight}px`,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <TextField label=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n      <br />\n      <TextField\n        error={!!errorMessage}\n        helperText={errorMessage || ''}\n        onChange={(e) => setPassword(e.target.value)}\n        type=\"password\"\n        label=\"Password\"\n        onKeyPress={(e) => {\n          if (e.charCode == 13) {\n            submitLogin()\n          }\n        }}\n      />\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={() => submitLogin()}>\n        Login\n      </Button>\n    </div>\n  )\n}\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport {\n  GetProfitAndLossChart,\n  GetProfitAndLossChartVariables,\n} from '@src/queries/__generated__/GetProfitAndLossChart'\nimport GetProfitAndLossChart__QUERY from '@src/queries/GetProfitAndLossChart.graphql'\n\nexport * from '@src/queries/__generated__/GetProfitAndLossChart'\n\nexport const QUERY = GetProfitAndLossChart__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetProfitAndLossChart, GetProfitAndLossChartVariables>,\n) {\n  return useQuery<GetProfitAndLossChart, GetProfitAndLossChartVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetProfitAndLossChart\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"profitAndLossChart\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"series\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"y\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":215}};\n    doc.loc.source = {\"body\":\"query GetProfitAndLossChart($startDate: String!, $endDate: String!) {\\n  profitAndLossChart(startDate: $startDate, endDate: $endDate) {\\n    series {\\n      name\\n      data {\\n        name\\n        y\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetProfitAndLossChart\"] = oneQuery(doc, \"GetProfitAndLossChart\");\n        \n","import querystring from 'querystring'\nimport { history } from '@src/history'\n\nexport function parseUrlState() {\n  const params = parseSearch()\n  if (params && params.urlState) {\n    return JSON.parse(params.urlState as string)\n  }\n  return {}\n}\nexport function parseSearch() {\n  return querystring.parse(history.location.search.split('?')[1])\n}\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  ImportWaveTransactions,\n  ImportWaveTransactionsVariables,\n} from '@src/queries/__generated__/ImportWaveTransactions'\nimport ImportWaveTransactions__QUERY from '@src/queries/ImportWaveTransactions.graphql'\n\nexport * from '@src/queries/__generated__/ImportWaveTransactions'\n\nexport const QUERY = ImportWaveTransactions__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ImportWaveTransactions, ImportWaveTransactionsVariables>,\n) {\n  return useMutation<ImportWaveTransactions, ImportWaveTransactionsVariables>(QUERY, options)\n}\n","import { createBrowserHistory } from 'history'\nimport { UrlPathEnum } from '@src/types'\n\nexport const history = createBrowserHistory()\nexport const pushHistory = (\n  pathname: UrlPathEnum,\n  urlState?: {} | null,\n  state: {} | null = null,\n) => {\n  const searchString =\n    urlState && urlState && Object.keys(urlState).length\n      ? '?urlState=' + JSON.stringify(urlState)\n      : ''\n  return history.push({\n    pathname,\n    search: searchString,\n    state,\n  })\n}\n\nexport const getPathName = () => {\n  const path = history.location.pathname\n  return path.endsWith('/') ? path.slice(0, path.length - 1) || '/' : path\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ImportWaveTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"importFromWave\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":244}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation ImportWaveTransactions($startDate: String!, $endDate: String!) {\\n  importFromWave(startDate: $startDate, endDate: $endDate) {\\n    isOk\\n    transactions {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"ImportWaveTransactions\"] = oneQuery(doc, \"ImportWaveTransactions\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"TransactionFilters\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"parent_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"mui_icon_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_selectable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":287}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nquery GetTransactions($filters: TransactionFilters!) {\\n  balance\\n  transactions(filters: $filters) {\\n    ...FragmentTransaction\\n  }\\n  categories {\\n    id\\n    description\\n    name\\n    parent_id\\n    mui_icon_id\\n    is_selectable\\n    is_active\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetTransactions\"] = oneQuery(doc, \"GetTransactions\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  CreateTransaction,\n  CreateTransactionVariables,\n} from '@src/queries/__generated__/CreateTransaction'\nimport CreateTransaction__QUERY from '@src/queries/CreateTransaction.graphql'\n\nexport * from '@src/queries/__generated__/CreateTransaction'\n\nexport const QUERY = CreateTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<CreateTransaction, CreateTransactionVariables>,\n) {\n  return useMutation<CreateTransaction, CreateTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransactionInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":207}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation CreateTransaction($input: CreateTransactionInput!) {\\n  createTransaction(input: $input) {\\n    isOk\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"CreateTransaction\"] = oneQuery(doc, \"CreateTransaction\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  AcceptPrediction,\n  AcceptPredictionVariables,\n} from '@src/queries/__generated__/AcceptPrediction'\nimport AcceptPrediction__QUERY from '@src/queries/AcceptPrediction.graphql'\n\nexport * from '@src/queries/__generated__/AcceptPrediction'\n\nexport const QUERY = AcceptPrediction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<AcceptPrediction, AcceptPredictionVariables>,\n) {\n  return useMutation<AcceptPrediction, AcceptPredictionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"AcceptPrediction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"acceptPrediction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":177}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation AcceptPrediction($id: Int!) {\\n  acceptPrediction(id: $id) {\\n    isOk\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"AcceptPrediction\"] = oneQuery(doc, \"AcceptPrediction\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  CategorizeTransaction,\n  CategorizeTransactionVariables,\n} from '@src/queries/__generated__/CategorizeTransaction'\nimport CategorizeTransaction__QUERY from '@src/queries/CategorizeTransaction.graphql'\n\nexport * from '@src/queries/__generated__/CategorizeTransaction'\n\nexport const QUERY = CategorizeTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<CategorizeTransaction, CategorizeTransactionVariables>,\n) {\n  return useMutation<CategorizeTransaction, CategorizeTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"CategorizeTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categorizeTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":231}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation CategorizeTransaction($id: Int!, $categoryId: Int!) {\\n  categorizeTransaction(id: $id, categoryId: $categoryId) {\\n    isOk\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"CategorizeTransaction\"] = oneQuery(doc, \"CategorizeTransaction\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":341}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation UpdateTransaction(\\n  $id: Int!\\n  $notes: String\\n  $merchantName: String\\n  $balanceAdjust: String\\n) {\\n  updateTransaction(\\n    id: $id\\n    notes: $notes\\n    balanceAdjust: $balanceAdjust\\n    merchantName: $merchantName\\n  ) {\\n    isOk\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"UpdateTransaction\"] = oneQuery(doc, \"UpdateTransaction\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  ArchiveTransaction,\n  ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction'\nimport ArchiveTransaction__QUERY from '@src/queries/ArchiveTransaction.graphql'\n\nexport * from '@src/queries/__generated__/ArchiveTransaction'\n\nexport const QUERY = ArchiveTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ArchiveTransaction, ArchiveTransactionVariables>,\n) {\n  return useMutation<ArchiveTransaction, ArchiveTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ArchiveTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"archiveTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":88}};\n    doc.loc.source = {\"body\":\"mutation ArchiveTransaction($id: Int!) {\\n  archiveTransaction(id: $id) {\\n    isOk\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"ArchiveTransaction\"] = oneQuery(doc, \"ArchiveTransaction\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport { SignCheckpoint, SignCheckpointVariables } from '@src/queries/__generated__/SignCheckpoint'\nimport SignCheckpoint__QUERY from '@src/queries/SignCheckpoint.graphql'\n\nexport * from '@src/queries/__generated__/SignCheckpoint'\n\nexport const QUERY = SignCheckpoint__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<SignCheckpoint, SignCheckpointVariables>,\n) {\n  return useMutation<SignCheckpoint, SignCheckpointVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"SignCheckpoint\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signCheckpoint\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpoint\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBy\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"groupId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":176}};\n    doc.loc.source = {\"body\":\"mutation SignCheckpoint($id: Int!) {\\n  signCheckpoint(id: $id) {\\n    isOk\\n    checkpoint {\\n      id\\n      signedTs\\n      signedBy\\n      groupId\\n      signedBalance\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"SignCheckpoint\"] = oneQuery(doc, \"SignCheckpoint\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport { GetEvents } from '@src/queries/__generated__/GetEvents'\nimport GetEvents__QUERY from '@src/queries/GetEvents.graphql'\n\nexport * from '@src/queries/__generated__/GetEvents'\n\nexport const QUERY = GetEvents__QUERY\nexport type GetEventsVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(options?: QueryHookOptions<GetEvents, GetEventsVariables>) {\n  return useQuery<GetEvents, GetEventsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetEvents\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventList\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"events\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ICheckPoint\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IImportBatch\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"origin\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isStatement\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":330}};\n    doc.loc.source = {\"body\":\"query GetEvents {\\n  eventList {\\n    events {\\n      ... on ICheckPoint {\\n        id\\n        eventType\\n        createdTs\\n        signedTs\\n        signedBalance\\n      }\\n      ... on IImportBatch {\\n        id\\n        eventType\\n        createdTs\\n        origin\\n        startDate\\n        endDate\\n        isStatement\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetEvents\"] = oneQuery(doc, \"GetEvents\");\n        \n","import { InMemoryCache, IntrospectionFragmentMatcher } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n\nimport { ApolloClient as AC } from 'apollo-client'\nimport { concat } from 'apollo-link'\nimport { onError } from 'apollo-link-error'\nimport { HttpLink } from 'apollo-link-http'\nimport { BASE_URL } from '@src/actions'\n\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\n  introspectionQueryResultData: {\n    __schema: {\n      types: [],\n    },\n  },\n})\n\nexport const errorLink = onError((response) => {\n  const { graphQLErrors, networkError } = response\n  if (graphQLErrors) {\n    graphQLErrors.forEach((gqlError) => {\n      if (gqlError.extensions && gqlError.extensions.code == '401') {\n        console.error('Not Authenticated')\n        window.location.href = '/LoginPage'\n      }\n    })\n  }\n\n  if (networkError) {\n    if (networkError['statusCode'] === 401) {\n      sessionStorage.removeItem('authToken')\n      console.error('Not Authenticated')\n      window.location.href = '/LoginPage'\n    }\n    console.error(`[Network error]: ${networkError}`)\n  }\n})\n\nconst getLink = () => {\n  return concat(authLink, errorLink).concat(\n    new HttpLink({\n      uri: `${BASE_URL}/RAHoliCy/graphql`,\n      headers: {\n        authorization: `Bearer ${sessionStorage.getItem('authToken')}`,\n      },\n    }),\n  )\n}\nconst authLink = setContext((_, { headers }) => {\n  const token = sessionStorage.getItem('authToken')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  }\n})\n\nexport const client = new AC({\n  link: getLink(),\n  cache: new InMemoryCache({\n    fragmentMatcher,\n  }),\n})\n","export enum UrlPathEnum {\n  Root = '/',\n  LoginPage = '/LoginPage',\n  TransactionList = '/TransactionList',\n  CategoryPage = '/CategoryPage',\n  PnlChart = '/PnlChart',\n}\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport {\n  GetTransactions,\n  GetTransactionsVariables,\n} from '@src/queries/__generated__/GetTransactions'\nimport GetTransactions__QUERY from '@src/queries/GetTransactions.graphql'\n\nexport * from '@src/queries/__generated__/GetTransactions'\n\nexport const QUERY = GetTransactions__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetTransactions, GetTransactionsVariables>,\n) {\n  return useQuery<GetTransactions, GetTransactionsVariables>(QUERY, options)\n}\n","import * as _ from 'lodash'\nimport { combineReducers } from 'redux'\n\nexport const initialState = {}\n\nfunction createReducer(initialState, handlers) {\n  return function reducer(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action)\n    } else {\n      return state\n    }\n  }\n}\n\nconst snacks = createReducer([], {\n  EAT_SNACK: (snacks) => [...snacks.slice(1)],\n  ADD_SNACK: (snacks, action) => [...snacks, action.snack],\n})\n\nconst reducers = combineReducers({\n  snacks,\n})\n\nexport default reducers\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport { Router } from 'react-router'\nimport { history } from './history'\n\nimport { configureStore } from './configureStore'\nimport { App } from '@src/Root'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n)\n","import { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nexport const configureStore = (initialState?) => {\n  let middleware = applyMiddleware(thunk, logger())\n  if (process.env.NODE_ENV !== 'production') {\n    middleware = composeWithDevTools(middleware)\n  }\n  const store = createStore(reducers, initialState, middleware)\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers')\n      store.replaceReducer(nextReducer)\n    })\n  }\n  return store\n}\n","export function stringToDate(dateString: string): Date {\n  const [year, month, day] = dateString.split('-').map((v) => parseInt(v))\n  const ret = new Date(year, month - 1, day)\n  return ret\n}\nexport function formatDate(d: string): string {\n  const date = new Date(d)\n  return date.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    timeZone: 'UTC',\n  })\n}\n\nexport const getIsoDateString = (d: Date) => {\n  const year = d.getFullYear()\n  const month = d.getMonth() < 9 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1\n  const day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport function getToday(): string {\n  const today = new Date()\n  const year = today.getFullYear()\n  const month = today.getMonth() < 9 ? '0' + (today.getMonth() + 1) : today.getMonth() + 1\n  const day = today.getDate() < 10 ? '0' + today.getDate() : today.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport interface Identifiable {\n  id: string | number\n}\nexport const mergeArrays = <T extends Identifiable>(\n  existing: Array<T>,\n  incoming: Array<T>,\n  prependOrAppend: 'prepend' | 'append',\n): Array<T> => {\n  return incoming.reduce(\n    function (accumulator: Array<T>, value: T) {\n      const index = existing.findIndex((x) => x.id === value.id)\n      if (index >= 0) {\n        const ret = [\n          ...accumulator.slice(0, index),\n          value,\n          ...accumulator.slice(index + 1, accumulator.length),\n        ]\n        return ret\n      } else {\n        return prependOrAppend === 'append' ? [...accumulator, value] : [value, ...accumulator]\n      }\n    },\n    [...existing],\n  )\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IUserTransaction\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalAmount\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issuedDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpointId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"statementId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"plaidCategory\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"editable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"originPayload\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IWaveTransaction\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"anchorAccountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"dateCreated\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"direction\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionDescription\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionAmount\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"accountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"prediction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"split\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":530}};\n    doc.loc.source = {\"body\":\"fragment FragmentTransaction on IUserTransaction {\\n  id\\n  lenderId\\n  totalAmount\\n  issuedDate\\n  notes\\n  categoryId\\n  checkpointId\\n  statementId\\n  merchantName\\n  balanceAdjust\\n  createdById\\n  lenderId\\n  plaidCategory\\n  editable\\n  originPayload {\\n    __typename\\n    ... on IWaveTransaction {\\n      anchorAccountName\\n      dateCreated\\n      direction\\n      transactionDescription\\n      transactionDate\\n      transactionId\\n      transactionAmount\\n    }\\n  }\\n  accountName\\n  prediction {\\n    categoryId\\n    categoryName\\n    split\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","export function addSnack(message: string) {\n  return {\n    type: 'ADD_SNACK',\n    snack: message,\n  }\n}\n\nexport function eatSnack() {\n  return {\n    type: 'EAT_SNACK',\n  }\n}\n\nconst isLocal = !!window.location.port\nexport const BASE_URL = `${window.location.protocol}//${window.location.hostname}:${\n  isLocal ? '8888' : ''\n}`\n"],"sourceRoot":""}