{"version":3,"sources":["webpack:///./queries/__generated__/UpdateTransaction.hooks.ts","webpack:///./Report/PnlChart.tsx","webpack:///./styles.tsx","webpack:///./TransactionList/ImportForm.tsx","webpack:///./components/DialogSelect.tsx","webpack:///./TransactionList/NewTransactionForm.tsx","webpack:///./TransactionList/FilterDialog.tsx","webpack:///./TransactionList/TransactionListAppBar.tsx","webpack:///./TransactionList/SmartCatField.tsx","webpack:///./components/ResponsiveLabel.tsx","webpack:///./TransactionList/CategoryField.tsx","webpack:///./components/DebouncedTextField.tsx","webpack:///./TransactionList/BalanceAdjustField.tsx","webpack:///./TransactionList/TransactionRow.tsx","webpack:///./types/__generated__/globalTypes.ts","webpack:///./Root/Timeline/utils.ts","webpack:///./Root/Timeline/EventRow.tsx","webpack:///./Root/Timeline/index.tsx","webpack:///./TransactionList/index.tsx","webpack:///./components/IconSelect.tsx","webpack:///./CategoryPage/Tree.tsx","webpack:///./CategoryPage/selectors.tsx","webpack:///./CategoryPage/index.tsx","webpack:///./TablesPage/Table.tsx","webpack:///./TablesPage/index.tsx","webpack:///./history.ts","webpack:///./Root/index.tsx","webpack:///./queries/__generated__/GetCategories.hooks.ts","webpack:///./queries/GetCategories.graphql","webpack:///./LoginPage.tsx","webpack:///./queries/__generated__/GetRecords.hooks.ts","webpack:///./queries/GetRecords.graphql","webpack:///./queries/__generated__/GetTableNames.hooks.ts","webpack:///./queries/GetTableNames.graphql","webpack:///./queries/__generated__/GetProfitAndLossChart.hooks.ts","webpack:///./queries/GetProfitAndLossChart.graphql","webpack:///./selectors.ts","webpack:///./types/index.ts","webpack:///./queries/__generated__/ImportWaveTransactions.hooks.ts","webpack:///./queries/ImportWaveTransactions.graphql","webpack:///./queries/__generated__/GetLatestImportDate.hooks.ts","webpack:///./queries/GetLatestImportDate.graphql","webpack:///./queries/GetTransactions.graphql","webpack:///./queries/__generated__/CreateTransaction.hooks.ts","webpack:///./queries/CreateTransaction.graphql","webpack:///./queries/__generated__/AcceptPrediction.hooks.ts","webpack:///./queries/AcceptPrediction.graphql","webpack:///./queries/__generated__/CategorizeTransaction.hooks.ts","webpack:///./queries/CategorizeTransaction.graphql","webpack:///./queries/UpdateTransaction.graphql","webpack:///./queries/__generated__/ArchiveTransaction.hooks.ts","webpack:///./queries/ArchiveTransaction.graphql","webpack:///./queries/__generated__/SignCheckpoint.hooks.ts","webpack:///./queries/SignCheckpoint.graphql","webpack:///./queries/__generated__/GetEvents.hooks.ts","webpack:///./queries/GetEvents.graphql","webpack:///./gqlClient.ts","webpack:///./reducers.ts","webpack:///./main.tsx","webpack:///./configureStore.tsx","webpack:///./Root/contexts.ts","webpack:///./queries/__generated__/GetTransactions.hooks.ts","webpack:///./utils.ts","webpack:///./queries/FragmentTransaction.graphql","webpack:///./actions.ts"],"names":["QUERY","UpdateTransaction__QUERY","useApolloQuery","options","useMutation","HighchartsData","Highchart","Highcharts","HighchartsDrilldown","today","Date","sixMonthsAgo","setDate","getDate","PnlChart","props","variables","startDate","getIsoDateString","endDate","loading","error","data","initial","chart","type","title","text","xAxis","yAxis","min","align","labels","overflow","tooltip","valueSuffix","plotOptions","bar","dataLabels","enabled","column","allowPointSelect","events","click","onClickColumn","e","console","log","legend","layout","verticalAlign","x","y","floating","borderWidth","shadow","credits","titled","u","config","Object","assign","profitAndLossChart","isWide","window","innerWidth","useStyles","makeStyles","theme","createStyles","appBar","position","header","backgroundColor","disabled","opacity","cursor","marginLeft","spacing","flex","formControl","margin","minWidth","toISOString","slice","ImportButton","onClose","importWaveTransactions","Button","fullWidth","onClick","then","res","location","reload","style","marginTop","color","variant","ImportForm","GetLatestImportDate","initialStartDate","latestImportDate","ImportFormComponent","React","setStartDate","setEndDate","Grid","container","item","xs","sm","TextField","label","value","onChange","target","defaultValue","DialogSelect","choices","onSelectOption","isOpen","setIsOpen","initialOption","option","find","Error","getInitialOption","size","Icon","marginRight","mui_icon_id","Dialog","open","DialogTitle","DialogContent","opt","undefined","placeholder","fieldConfig","issuedDate","required","merchantName","notes","categoryId","balanceAdjust","totalAmount","FieldInput","fieldName","updateField","instance","initialForm","getToday","NewTransactionForm","selectableCategories","formData","setFormData","update","cache","filters","offset","limit","createTransaction","isOk","cached","readQuery","query","GET_TRANSACTIONS_QUERY","writeQuery","transactions","transaction","message","t","old","event","newState","paddingTop","ExpansionPanel","expanded","ExpansionPanelSummary","map","cat","id","description","Divider","ExpansionPanelActions","input","every","Boolean","FilterDialog","categoryChoices","urlFilters","UrlStateContext","setOpen","eventId","setEventId","sharedOnly","setSharedOnly","uncategorizedOnly","setUncategorizedOnly","searchText","setSearchText","setCategoryId","handleClickOpen","handleClose","IconButton","aria-labelledby","DialogContentText","FormControl","InputLabel","Select","parseInt","MenuItem","choice","key","FormControlLabel","control","Checkbox","checked","name","DialogActions","pushHistory","UrlPathEnum","TransactionList","TransactionListAppBar","AppBar","Toolbar","Tooltip","toggleTimeline","History","balance","Typography","icon","Add","showForm","ListItemIcon","AttachMoney","ListItemText","CreditCard","Waves","sessionStorage","removeItem","href","className","SmartCatField","prediction","transactionId","acceptPrediction","split","stopPropagation","categoryName","ResponsiveLabel","ResponsiveLink","children","rest","Link","CategoryField","showDialog","setShowDialog","category","editable","selected","CategoryDialogSelect","initialTextValue","c","classes","categorizeTransaction","textValue","setTextValue","length","filter","includes","toUpperCase","fullScreen","edge","aria-label","Close","autoFocus","List","ListItem","button","ListItemSecondaryAction","DebouncedTextField","helperText","setter","onBounce","debounced","_","PrettoSlider","withStyles","root","height","thumb","width","border","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","BalanceAdjustField","total","setBalanceAdjust","Number","toFixed","percentage","setPercentage","updateTransaction","gutterBottom","alignItems","newPercentage","newBalanceAdjust","toString","max","step","valueLabelDisplay","marks","valueLabelFormat","paddingBottom","newValue","EventType","TransactionRowComponent","showDate","onToggleExpansion","setNotes","MUTATION","archiveTransaction","ARCHIVE_TRANSACTION_MUTATION","removed","Card","CardHeader","formatDate","CardContent","accountName","plaidCategory","float","Collapse","in","unmountOnExit","parseFloat","textAlign","Fab","Delete","areEqual","last","next","TransactionRow","TransactionRows","setExpanded","index","categories","EventRow","urlState","eventType","CHECKPOINT","checkpoint","eventIcon","batch","isStatement","BATCH_IMPORT","plaid","wave","origin","getEventIcon","eventButtonIcon","getEventButtonIcon","createdTs","toLocaleDateString","signedTs","signedBalance","batch_import","getEventDescription","CheckpointListItem","SIGN_CHECKPOINT_MUTATION","signCheckpoint","ButtonGroup","getItem","BASE_URL","Timeline","LinearProgress","eventList","showTimeline","setShowTimeline","formType","setFormType","isTransactionLoading","fetchMore","maxWidth","amount","innerHeight","marginBottom","updateQuery","prev","fetchMoreResult","ICON_IDS","IconSelect","initialValue","iconId","node","palette","background","paper","Tree","level","onSelectIcon","onSaveNode","component","paddingLeft","primary","ExpandLess","ExpandMore","timeout","disablePadding","child","NodeListItem","setEditable","pickingIcon","setPickingIcon","nodeName","setNodeName","setIconId","dense","role","onBlur","addNode","tree","visited","remaining","push","p","parent_id","parentNode","v","CategoryPage","pop","getCategoryTree","is_selectable","is_active","__typename","keys","k","Cell","content","TableCell","substring","Table","fields","recordType","TablesPage","fontSize","TableContainer","TableHead","TableRow","TableBody","records","r","nameValuePairs","pair","i","paths","getPathName","tables","history","createBrowserHistory","pathname","state","searchString","JSON","stringify","search","path","endsWith","Root","connect","ownProps","isAuthenticated","parseUrlState","Provider","Body","PageList","UrlPathsMap","startsWith","LoginPage","this","warn","App","hot","module","client","GetCategories__QUERY","useQuery","doc","loc","source","definitionRefs","findOperation","definitions","element","forEach","def","refs","Set","collectFragmentReferences","kind","add","selectionSet","selections","selection","variableDefinitions","exports","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","prevRefs","has","childRef","op","oneQuery","username","setUsername","password","setPassword","errorMessage","setErrorMessage","submitLogin","fetch","method","body","headers","response","json","code","setItem","token","display","justifyContent","flexDirection","onKeyPress","charCode","GetRecords__QUERY","GetTableNames__QUERY","GetProfitAndLossChart__QUERY","params","querystring","parse","ImportWaveTransactions__QUERY","names","concat","GetLatestImportDate__QUERY","CreateTransaction__QUERY","AcceptPrediction__QUERY","CategorizeTransaction__QUERY","ArchiveTransaction__QUERY","SignCheckpoint__QUERY","GetEvents__QUERY","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","__schema","types","errorLink","onError","graphQLErrors","networkError","gqlError","extensions","authLink","setContext","authorization","AC","link","HttpLink","uri","InMemoryCache","initialState","handlers","snacks","EAT_SNACK","ADD_SNACK","action","snack","reducers","combineReducers","store","middleware","applyMiddleware","thunk","logger","createStore","configureStore","ReactDOM","document","getElementById","GetTransactions__QUERY","d","month","day","timeZone","year","getFullYear","getMonth","isLocal","port","protocol","hostname"],"mappings":"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","file":"app.js","sourcesContent":["/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  UpdateTransaction,\n  UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction'\nimport UpdateTransaction__QUERY from '@src/queries/UpdateTransaction.graphql'\n\nexport * from '@src/queries/__generated__/UpdateTransaction'\n\nexport const QUERY = UpdateTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<UpdateTransaction, UpdateTransactionVariables>,\n) {\n  return useMutation<UpdateTransaction, UpdateTransactionVariables>(QUERY, options)\n}\n","import HighchartsData from 'highcharts-data'\nimport HighchartsDrilldown from 'highcharts-drilldown'\nimport * as React from 'react'\nimport Highchart from 'react-highcharts'\nimport u from 'updeep'\nimport { useApolloQuery } from '@src/queries/__generated__/GetProfitAndLossChart.hooks'\nimport { getIsoDateString } from '@src/utils'\n\nHighchartsData(Highchart.Highcharts)\nHighchartsDrilldown(Highchart.Highcharts)\n\nconst getChartConfig = ({ onClickColumn }) => {\n  return {\n    chart: {\n      type: 'column',\n      //height: 800,\n      //width: 800\n    },\n    title: {\n      text: 'Income/Expense Report',\n    },\n    xAxis: {\n      type: 'category',\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Spend',\n        align: 'high',\n      },\n      labels: {\n        overflow: 'justify',\n      },\n    },\n    tooltip: {\n      valueSuffix: ' dollars',\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: true,\n        },\n      },\n      column: {\n        dataLabels: {\n          enabled: true,\n        },\n        allowPointSelect: false,\n        events: {\n          click: onClickColumn,\n        },\n      },\n    },\n    legend: {\n      enabled: true,\n      layout: 'vertical',\n      align: 'right',\n      verticalAlign: 'top',\n      x: -40,\n      y: 80,\n      floating: true,\n      borderWidth: 1,\n      shadow: true,\n    },\n    credits: {\n      enabled: false,\n    },\n  }\n}\nconst today = new Date()\nconst sixMonthsAgo = new Date()\nsixMonthsAgo.setDate(sixMonthsAgo.getDate() - 180)\n// Set to start of the month\nsixMonthsAgo.setDate(1)\n\nexport const PnlChart: React.FC<{}> = (props) => {\n  const { loading, error, data } = useApolloQuery({\n    variables: {\n      startDate: getIsoDateString(sixMonthsAgo),\n      endDate: getIsoDateString(today),\n    },\n  })\n  if (loading) {\n    return <div>loading ...</div>\n  }\n  if (error) return <div>error ...</div>\n\n  const initial = getChartConfig({\n    onClickColumn: (e) => console.log(e),\n  })\n  const titled = u(\n    {\n      title: {\n        text: 'Profit & Loss Report',\n      },\n    },\n    initial,\n  )\n  const config = Object.assign({}, titled, data!.profitAndLossChart)\n  return (\n    <div>\n      <Highchart config={config} />\n    </div>\n  )\n}\n","import { Theme, makeStyles, createStyles } from '@material-ui/core'\n\nexport const isWide = window.innerWidth > 600\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      position: 'relative',\n    },\n    header: {\n      backgroundColor: '#f5f5f5',\n    },\n    disabled: {\n      opacity: '0.5',\n      backgroundColor: 'rgba(0, 0, 0, 0.12)',\n      cursor: 'not-allowed',\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: '100%',\n    },\n  }),\n)\n","import { Button, Grid, TextField } from '@material-ui/core'\nimport * as React from 'react'\nimport { isWide } from '@src/styles'\nimport { useApolloQuery } from '@src/queries/__generated__/ImportWaveTransactions.hooks'\nimport { useApolloQuery as GetLatestImportDate } from '@src/queries/__generated__/GetLatestImportDate.hooks'\n\nconst today = new Date().toISOString().slice(0, 10)\n\nconst ImportButton: React.FC<{ onClose: () => void; startDate: string; endDate: string }> = ({\n  onClose,\n  startDate,\n  endDate,\n}) => {\n  const [importWaveTransactions, { loading }] = useApolloQuery({})\n\n  return (\n    <Button\n      fullWidth={!isWide}\n      onClick={() =>\n        importWaveTransactions({\n          variables: {\n            startDate,\n            endDate,\n          },\n        }).then((res) => {\n          onClose()\n          window.location.reload()\n        })\n      }\n      style={{ marginTop: '10px' }}\n      color=\"primary\"\n      variant=\"contained\"\n    >\n      {loading ? 'importing ...' : 'Import'}\n    </Button>\n  )\n}\n\nexport const ImportForm = (props: { onClose: () => void }) => {\n  const { data } = GetLatestImportDate({})\n  if (!data) return <div></div>\n\n  return <ImportFormComponent onClose={props.onClose} initialStartDate={data.latestImportDate} />\n}\n\nconst ImportFormComponent = (props: { onClose: () => void; initialStartDate: string }) => {\n  const [startDate, setStartDate] = React.useState(props.initialStartDate)\n  const [endDate, setEndDate] = React.useState(today)\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={4}>\n        <TextField\n          fullWidth={!isWide}\n          type=\"date\"\n          label=\"from\"\n          value={startDate}\n          onChange={(e) => setStartDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <TextField\n          fullWidth={!isWide}\n          type=\"date\"\n          label=\"to\"\n          defaultValue={today}\n          onChange={(e) => setEndDate(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <ImportButton onClose={props.onClose} startDate={startDate} endDate={endDate} />\n      </Grid>\n    </Grid>\n  )\n}\n","import { Button, Dialog, DialogContent, DialogTitle, Icon } from '@material-ui/core'\n\nimport * as React from 'react'\n\nimport { Autocomplete } from 'rice-instructor'\n\ninterface DialogSelectProps {\n  choices: Array<{\n    value: string | number\n    mui_icon_id?: string\n    label: string\n  }>\n  onSelectOption: (option) => void\n  value: string | null | number\n}\nconst getInitialOption = (\n  value: string | number | null,\n  choices: Array<{\n    value: string | number\n    mui_icon_id?: string\n    label: string\n  }>,\n) => {\n  if (!value) return null\n  const option = choices.find((x) => x.value === value)\n  if (!option) {\n    throw new Error(`${value} not found `)\n  }\n\n  return option\n}\nconst isWide = window.innerWidth > 600\nexport const DialogSelect = (props: DialogSelectProps) => {\n  const { choices, value, onSelectOption } = props\n  const [isOpen, setIsOpen] = React.useState(false)\n  const initialOption = getInitialOption(value, choices)\n  return (\n    <div>\n      <Button\n        size={isWide ? 'large' : 'small'}\n        onClick={() => setIsOpen(true)}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        {initialOption ? initialOption.label : 'Select a Category'}\n        {initialOption ? (\n          <Icon style={{ marginRight: '5px' }}>{initialOption.mui_icon_id}</Icon>\n        ) : null}\n      </Button>\n      <Dialog open={isOpen} fullWidth onClose={() => setIsOpen(false)}>\n        <DialogTitle>Select a Category</DialogTitle>\n        <DialogContent>\n          <Autocomplete\n            onSelectOption={(opt) => {\n              onSelectOption(opt)\n              setIsOpen(false)\n            }}\n            defaultValue={initialOption ? initialOption.value : undefined}\n            placeholder=\"Select a category\"\n            options={choices}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import {\n  Button,\n  Divider,\n  ExpansionPanel,\n  ExpansionPanelActions,\n  ExpansionPanelSummary,\n  Grid,\n  TextField,\n} from '@material-ui/core'\nimport * as React from 'react'\nimport {\n  QUERY as GET_TRANSACTIONS_QUERY,\n  GetTransactions,\n  GetTransactions_categories as ICategory,\n} from '@src/queries/__generated__/GetTransactions.hooks'\nimport { DialogSelect } from '@src/components/DialogSelect'\nimport { useApolloQuery } from '@src/queries/__generated__/CreateTransaction.hooks'\nimport { CreateTransactionInput } from '@src/types/__generated__/globalTypes'\n\nimport { getToday } from '@src/utils'\n\ninterface NewTransactionFormProps {\n  onClose: () => void\n  selectableCategories: Array<ICategory>\n}\n\ntype FieldName =\n  | 'issuedDate'\n  | 'merchantName'\n  | 'notes'\n  | 'categoryId'\n  | 'totalAmount'\n  | 'balanceAdjust'\n\nconst fieldConfig = {\n  issuedDate: { type: 'date', required: true },\n  merchantName: { type: 'text', required: true },\n  notes: { type: 'text', required: false },\n  categoryId: { type: 'number', required: false },\n  balanceAdjust: { type: 'number', required: false },\n  totalAmount: { type: 'number', required: true },\n}\n\nconst FieldInput = (props: {\n  fieldName: FieldName\n  updateField: (fieldName) => (event) => void\n  instance: CreateTransactionInput\n}) => {\n  const { fieldName, updateField, instance } = props\n  const config = fieldConfig[fieldName]\n  let error = false\n  if (config.required && !instance[fieldName]) {\n    error = true\n  } else if (config.required && config.type === 'number' && !instance[fieldName]) {\n    error = true\n  }\n\n  return (\n    <TextField\n      type={config.type}\n      required={config.required}\n      error={error}\n      label={fieldName}\n      value={instance[fieldName]}\n      onChange={updateField(fieldName)}\n    />\n  )\n}\nconst initialForm: CreateTransactionInput = {\n  issuedDate: getToday(),\n  merchantName: '',\n  notes: '',\n  categoryId: null,\n  totalAmount: '0',\n  balanceAdjust: '0',\n}\n\nexport const NewTransactionForm: React.FC<NewTransactionFormProps> = (props) => {\n  const { selectableCategories, onClose } = props\n  const [formData, setFormData] = React.useState<CreateTransactionInput>(initialForm)\n  const [createTransaction, { error, loading }] = useApolloQuery({\n    update(cache, { data }) {\n      const variables = {\n        // TODO: send real offset and limit\n        filters: { offset: 0, limit: 40 },\n      }\n      if (data?.createTransaction?.isOk) {\n        const cached = cache.readQuery<GetTransactions>({\n          query: GET_TRANSACTIONS_QUERY,\n          variables,\n        })\n        cache.writeQuery({\n          query: GET_TRANSACTIONS_QUERY,\n          data: Object.assign({}, cached, {\n            transactions: [data.createTransaction.transaction, ...cached!.transactions],\n          }),\n          variables,\n        })\n      }\n    },\n  })\n\n  if (error) {\n    return <div>{error.message}</div>\n  }\n\n  const createNewTransaction = () => {\n    createTransaction({\n      variables: {\n        input: {\n          issuedDate: formData.issuedDate,\n          totalAmount: formData.totalAmount,\n          merchantName: formData.merchantName,\n          balanceAdjust: formData.balanceAdjust || '0',\n          categoryId: formData.categoryId,\n          notes: formData.notes,\n        },\n      },\n    })\n    onClose()\n  }\n  const updateField = (fieldName: FieldName) => {\n    const old = formData\n    return (event) => {\n      const newState = Object.assign({}, old, {\n        [fieldName]: event.target.value,\n      })\n      setFormData(newState)\n    }\n  }\n  const isValid = () => {\n    const t = formData\n    return [t.issuedDate, t.merchantName, +t.totalAmount].every(Boolean)\n  }\n  const transaction = formData\n  return (\n    <div style={{ paddingTop: '10px' }}>\n      <ExpansionPanel expanded={true}>\n        <ExpansionPanelSummary>\n          <Grid container spacing={10}>\n            <Grid item xs={6} sm={4}>\n              <FieldInput instance={transaction} fieldName=\"issuedDate\" updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"merchantName\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"totalAmount\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <DialogSelect\n                value={transaction.categoryId || ''}\n                onSelectOption={(option) => {\n                  const newState = Object.assign({}, formData, {\n                    categoryId: option.value,\n                  })\n                  setFormData(newState)\n                }}\n                choices={selectableCategories.map((cat) => {\n                  return {\n                    value: cat.id,\n                    label: cat.description,\n                    mui_icon_id: cat.mui_icon_id || '',\n                  }\n                })}\n              />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput fieldName=\"notes\" instance={transaction} updateField={updateField} />\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <FieldInput\n                fieldName=\"balanceAdjust\"\n                instance={transaction}\n                updateField={updateField}\n              />\n            </Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <Divider />\n        <ExpansionPanelActions>\n          <Button\n            size=\"small\"\n            onClick={() => {\n              setFormData(initialForm)\n              onClose()\n            }}\n          >\n            Cancel\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={createNewTransaction} disabled={!isValid()}>\n            {loading ? `saving ...` : `Save`}\n          </Button>\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport {\n  DialogContentText,\n  DialogTitle,\n  Icon,\n  InputLabel,\n  IconButton,\n  FormControl,\n  MenuItem,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  TextField,\n  Select,\n  Dialog,\n  DialogActions,\n  DialogContent,\n} from '@material-ui/core'\nimport { UrlStateContext } from '@src/Root/contexts'\nimport { UrlPathEnum } from '@src/types'\nimport { pushHistory } from '@src/history'\n\ninterface Prop {\n  categoryChoices: Array<{ id: number; label: string }>\n}\n\nexport const FilterDialog: React.FC<Prop> = ({ categoryChoices }) => {\n  const urlFilters = React.useContext(UrlStateContext)\n  const [open, setOpen] = React.useState(false)\n  const [eventId, setEventId] = React.useState(urlFilters.eventId || '')\n  const [sharedOnly, setSharedOnly] = React.useState(urlFilters.sharedOnly || false)\n  const [uncategorizedOnly, setUncategorizedOnly] = React.useState(\n    urlFilters.uncategorizedOnly || false,\n  )\n  const [searchText, setSearchText] = React.useState<string>(urlFilters.searchText || '')\n  const [categoryId, setCategoryId] = React.useState<number | null>(urlFilters.categoryId || null)\n\n  const clearFilters = () => {\n    setEventId('')\n    setSharedOnly(false)\n    setUncategorizedOnly(false)\n    setSearchText('')\n    setCategoryId(null)\n  }\n  const resetFilters = () => {\n    console.log('reset filters')\n    setEventId(urlFilters.eventId || '')\n    setSharedOnly(urlFilters.sharedOnly || false)\n    setSearchText(urlFilters.searchText || '')\n    setCategoryId(urlFilters.categoryId || null)\n    setUncategorizedOnly(urlFilters.uncategorizedOnly || false)\n  }\n\n  const handleClickOpen = () => {\n    resetFilters()\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  if (!open) {\n    return (\n      <IconButton onClick={handleClickOpen}>\n        <Icon color=\"primary\">filter_alt</Icon>\n      </IconButton>\n    )\n  }\n  return (\n    <div>\n      <IconButton onClick={handleClickOpen}>\n        <Icon color=\"primary\">filter_alt</Icon>\n      </IconButton>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Filter Transactions</DialogTitle>\n        {open ? (\n          <DialogContent>\n            <DialogContentText>\n              Search transactions by category, text (merchant name and notes). By checking \"Shared\",\n              you can limit the results to be shared transactions only.\n            </DialogContentText>\n            <FormControl style={{ minWidth: 120 }}>\n              <InputLabel>Category</InputLabel>\n              <Select\n                id=\"categoryId\"\n                value={categoryId || ''}\n                onChange={(e) => setCategoryId(parseInt(e.target.value as string))}\n              >\n                <MenuItem value={''}>None</MenuItem>\n                {categoryChoices.map((choice) => (\n                  <MenuItem key={choice.id} value={choice.id}>\n                    {choice.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <TextField\n              margin=\"dense\"\n              id=\"eventId\"\n              label=\"Event\"\n              type=\"string\"\n              fullWidth\n              value={eventId || ''}\n              onChange={(e) => setEventId(e.target.value)}\n            />\n            <TextField\n              onChange={(e) => setSearchText(e.target.value)}\n              value={searchText || ''}\n              margin=\"dense\"\n              id=\"searchText\"\n              label=\"Text Search\"\n              type=\"text\"\n              fullWidth\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={sharedOnly}\n                  onChange={(e) => setSharedOnly(e.target.checked)}\n                  name=\"sharedOnly\"\n                />\n              }\n              label=\"Shared\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={uncategorizedOnly}\n                  onChange={(e) => setUncategorizedOnly(e.target.checked)}\n                  name=\"uncategorizedOnly\"\n                />\n              }\n              label=\"Uncategorized\"\n            />\n          </DialogContent>\n        ) : null}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={clearFilters} color=\"primary\">\n            Reset\n          </Button>\n          <Button\n            onClick={(e) => {\n              pushHistory(UrlPathEnum.TransactionList, {\n                eventId,\n                searchText,\n                sharedOnly,\n                categoryId,\n                uncategorizedOnly,\n              })\n              handleClose()\n            }}\n            color=\"primary\"\n          >\n            Apply\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import {\n  AppBar,\n  Icon,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@material-ui/core'\nimport { Add, AttachMoney, CreditCard, History, Waves } from '@material-ui/icons'\nimport * as React from 'react'\nimport { IconMenu } from 'rice-instructor'\nimport { FilterDialog } from '@src/TransactionList/FilterDialog'\n\ninterface Prop {\n  balance: string\n  showForm: (formType: string) => void\n  toggleTimeline: () => void\n  categoryChoices: Array<{ id: number; label: string }>\n}\n\nexport const TransactionListAppBar = (props: Prop) => {\n  const { categoryChoices } = props\n  const showNewTransactionForm = () => {\n    props.showForm('transaction')\n  }\n\n  const showNewStatementForm = () => {\n    props.showForm('statement')\n  }\n\n  const showWaveImportForm = () => {\n    props.showForm('wave')\n  }\n\n  const toggleTimeline = () => {\n    props.toggleTimeline()\n  }\n\n  return (\n    <AppBar position=\"static\" color=\"default\">\n      <Toolbar>\n        <Tooltip title=\"Timeline\">\n          <IconButton onClick={toggleTimeline}>\n            <History />\n          </IconButton>\n        </Tooltip>\n        {props.balance ? (\n          <Typography variant=\"body1\" key=\"balance\">{`Balance: $${props.balance}`}</Typography>\n        ) : null}\n        <div style={{ flex: 1 }} />\n        <FilterDialog categoryChoices={categoryChoices} />\n        <IconMenu icon={<Add />}>\n          <MenuItem key=\"new-transaction-menu\" onClick={showNewTransactionForm}>\n            <ListItemIcon>\n              <AttachMoney />\n            </ListItemIcon>\n            <ListItemText>Transaction</ListItemText>\n          </MenuItem>\n          <MenuItem key=\"new-statement-menu\" onClick={showNewStatementForm}>\n            <ListItemIcon>\n              <CreditCard />\n            </ListItemIcon>\n            <ListItemText>Statement</ListItemText>\n          </MenuItem>\n          <MenuItem key=\"new-wave-menu\" onClick={showWaveImportForm}>\n            <ListItemIcon>\n              <Waves color=\"primary\" />\n            </ListItemIcon>\n            <ListItemText>Wave Import</ListItemText>\n          </MenuItem>\n        </IconMenu>\n        <IconButton\n          onClick={() => {\n            sessionStorage.removeItem('authToken')\n            window.location.href = '/'\n          }}\n        >\n          <Icon className=\"material-icons\">exit_to_app</Icon>\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import * as React from 'react'\n\nimport { Checkbox, FormControlLabel, Typography } from '@material-ui/core'\nimport { useApolloQuery } from '@src/queries/__generated__/AcceptPrediction.hooks'\nimport { GetTransactions_transactions_prediction } from '@src/queries/__generated__/GetTransactions.hooks'\n\ninterface SmartCatProp {\n  prediction: GetTransactions_transactions_prediction\n  transactionId: number\n}\nconst isWide = window.innerWidth > 600\nexport const SmartCatField: React.FC<SmartCatProp> = (props) => {\n  const { prediction, transactionId } = props\n  const [acceptPrediction, { loading, error }] = useApolloQuery({\n    variables: { id: transactionId },\n  })\n  const split = prediction.split ? 'Split ' : ''\n  if (error) return <div>{error.message}</div>\n  if (loading) return <div>saving...</div>\n  return (\n    <>\n      <FormControlLabel\n        style={{ marginTop: '0px' }}\n        control={\n          <Checkbox\n            color=\"secondary\"\n            onClick={(e) => {\n              // This is to stop the TransactionRow from expanding\n              e.stopPropagation()\n            }}\n            onChange={(e) => {\n              acceptPrediction()\n            }}\n          />\n        }\n        label={\n          <Typography\n            variant={isWide ? 'body1' : 'caption'}\n          >{`${split}${prediction.categoryName}?`}</Typography>\n        }\n      />\n    </>\n  )\n}\n","import * as React from 'react'\nimport { Link, TypographyProps, Typography } from '@material-ui/core'\n\nconst isWide = window.innerWidth > 600\n\nexport const ResponsiveLabel = (props: TypographyProps) => {\n  return <Typography variant={isWide ? 'body1' : 'caption'} {...props} />\n}\ninterface ResponsiveLinkProps extends TypographyProps {\n  disabled?: boolean\n}\n\nexport const ResponsiveLink = (props: ResponsiveLinkProps) => {\n  const { onClick, children, disabled, ...rest } = props\n  return (\n    <ResponsiveLabel {...rest}>\n      {disabled === true ? children : <Link onClick={onClick}>{children}</Link>}\n    </ResponsiveLabel>\n  )\n}\n","import * as React from 'react'\nimport {\n  AppBar,\n  ListItemSecondaryAction,\n  Icon,\n  TextField,\n  ListItemText,\n  List,\n  ListItem,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  Dialog,\n  DialogContent,\n} from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\n\nimport { useStyles } from '@src/styles'\nimport { ResponsiveLink } from '@src/components/ResponsiveLabel'\nimport {\n  GetTransactions_categories as ICategory,\n  GetTransactions_transactions as IUserTransaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\n\nimport { useApolloQuery } from '@src/queries/__generated__/CategorizeTransaction.hooks'\n\ninterface CategoryFieldProp {\n  transaction: IUserTransaction\n  selectableCategories: Array<ICategory>\n}\n\nexport const CategoryField: React.FC<CategoryFieldProp> = ({\n  selectableCategories,\n  transaction,\n}) => {\n  const [showDialog, setShowDialog] = React.useState(false)\n\n  const category = selectableCategories.find((x) => x.id === transaction.categoryId)\n  const categoryName = category ? category.name : '????'\n  return (\n    <div>\n      <ResponsiveLink disabled={!transaction.editable} onClick={() => setShowDialog(true)}>\n        {categoryName}\n      </ResponsiveLink>\n      {showDialog ? (\n        <CategoryDialogSelect\n          transactionId={transaction.id}\n          selectableCategories={selectableCategories}\n          selected={transaction.categoryId}\n          showDialog={showDialog}\n          setShowDialog={setShowDialog}\n        />\n      ) : null}\n    </div>\n  )\n}\n\ninterface CategoryDialogSelectProps {\n  setShowDialog: (boolean) => void\n  showDialog: boolean\n  selected: number | null\n  transactionId: number\n  selectableCategories: Array<ICategory>\n}\nconst CategoryDialogSelect: React.FC<CategoryDialogSelectProps> = ({\n  showDialog,\n  setShowDialog,\n  selected,\n  transactionId,\n  selectableCategories,\n}) => {\n  const initialTextValue = selectableCategories.find((c) => c.id === selected)?.name || ''\n  const classes = useStyles()\n  const [categorizeTransaction, { loading }] = useApolloQuery({})\n  const [textValue, setTextValue] = React.useState<string>(initialTextValue)\n\n  const choices =\n    !textValue.length || textValue === initialTextValue\n      ? selectableCategories\n      : selectableCategories.filter((c) => c.name.includes(textValue.toUpperCase()))\n  return (\n    <Dialog fullScreen={true} onClose={() => setShowDialog(false)} open={showDialog}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => setShowDialog(false)}\n            aria-label=\"close\"\n          >\n            <Close />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Select a Category\n          </Typography>\n          <Button autoFocus color=\"inherit\" onClick={() => setShowDialog(false)}>\n            Cancel\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <DialogContent>\n        {loading ? (\n          <div>loading...</div>\n        ) : (\n          <TextField\n            value={textValue}\n            onChange={(e) => {\n              setTextValue(e.target.value)\n            }}\n            variant=\"outlined\"\n          />\n        )}\n        <List>\n          {choices.map((c) => (\n            <ListItem\n              key={c.id}\n              button\n              selected={c.id === selected}\n              onClick={(e) =>\n                categorizeTransaction({\n                  variables: {\n                    id: transactionId,\n                    categoryId: c.id,\n                  },\n                }).then(() => setShowDialog(false))\n              }\n            >\n              <ListItemText>{c.name}</ListItemText>\n              <ListItemSecondaryAction>\n                <Icon color=\"action\">{c.mui_icon_id}</Icon>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import * as React from 'react'\nimport * as _ from 'lodash'\nimport { TextField } from '@material-ui/core'\n\ninterface IDebouncedTextField {\n  helperText?: string\n  onBounce: (newValue) => void\n  setter: (newValue) => void\n  type?: string\n  value?: any\n  loading?: boolean\n  fullWidth?: boolean\n  label?: string\n}\n\nexport const DebouncedTextField: React.FunctionComponent<IDebouncedTextField> = ({\n  helperText,\n  setter,\n  onBounce,\n  label,\n  type,\n  value,\n  loading,\n  fullWidth,\n}) => {\n  const debounced = React.useCallback(_.debounce(onBounce, 1000), [])\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      error={!!loading}\n      fullWidth={fullWidth}\n      label={label}\n      helperText={loading ? 'saving ...' : helperText}\n      type={type}\n      onChange={(event) => {\n        setter(event.target.value)\n        debounced(event.target.value)\n      }}\n      value={value}\n    />\n  )\n}\n","import * as React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Slider from '@material-ui/core/Slider'\nimport { useApolloQuery } from '@src/queries/__generated__/UpdateTransaction.hooks'\nimport { DebouncedTextField } from '@src/components/DebouncedTextField'\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#3f51b5',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider)\n\nconst getPercentage = (balance: number, total: number) => {\n  return Number(((balance / total) * 100).toFixed(2))\n}\n\nexport const BalanceAdjustField = (props: {\n  transactionId\n  total: number\n  balanceAdjust: number\n}) => {\n  const [balanceAdjust, setBalanceAdjust] = React.useState<number>(props.balanceAdjust)\n  const [percentage, setPercentage] = React.useState<number>(\n    getPercentage(balanceAdjust, props.total),\n  )\n  const [updateTransaction, { loading, error }] = useApolloQuery({})\n\n  const handleSliderChange = (event: any, newPercentage: number) => {\n    const newBalanceAdjust = (newPercentage * props.total) / 100\n    setPercentage(newPercentage)\n    setBalanceAdjust(newBalanceAdjust)\n    updateTransaction({\n      variables: {\n        id: props.transactionId,\n        balanceAdjust: newBalanceAdjust.toString(),\n      },\n    })\n  }\n  if (error) return <div>{error.message}</div>\n\n  return (\n    <div>\n      <Typography color=\"primary\" id=\"input-slider\" gutterBottom>\n        Balance Adjust\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs={9}>\n          <PrettoSlider\n            style={{ marginTop: '1.5rem' }}\n            value={typeof percentage === 'number' ? percentage : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n            defaultValue={0}\n            min={-100}\n            max={100}\n            step={null}\n            valueLabelDisplay=\"on\"\n            marks={[\n              { value: -100, label: '-100%' },\n              { value: -50, label: '-50%' },\n              { value: 0, label: '0%' },\n              { value: 50, label: '50%' },\n              { value: 100, label: '100%' },\n            ]}\n            valueLabelFormat={(value: number) => `${value}%`}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <div style={{ paddingBottom: '2rem' }}>\n            <DebouncedTextField\n              type=\"number\"\n              loading={loading}\n              value={balanceAdjust}\n              setter={(newValue) => {\n                setBalanceAdjust(newValue)\n                setPercentage((Number(newValue) / props.total) * 100)\n              }}\n              onBounce={(newValue) => {\n                updateTransaction({\n                  variables: { id: props.transactionId, balanceAdjust: newValue },\n                })\n              }}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import {\n  Card,\n  Collapse,\n  CardHeader,\n  CardContent,\n  Fab,\n  Grid,\n  Icon,\n  Typography,\n} from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\nimport { useMutation } from '@apollo/react-hooks'\nimport * as _ from 'lodash'\nimport * as React from 'react'\nimport { SmartCatField } from './SmartCatField'\nimport { CategoryField } from './CategoryField'\nimport { BalanceAdjustField } from './BalanceAdjustField'\nimport { useStyles } from '@src/styles'\nimport { ResponsiveLink, ResponsiveLabel } from '@src/components/ResponsiveLabel'\nimport {\n  QUERY as MUTATION,\n  UpdateTransaction,\n  UpdateTransactionVariables,\n} from '@src/queries/__generated__/UpdateTransaction.hooks'\nimport {\n  QUERY as GET_TRANSACTIONS_QUERY,\n  GetTransactions,\n  GetTransactions_categories,\n  GetTransactions_transactions as GetTransactions_transaction,\n} from '@src/queries/__generated__/GetTransactions.hooks'\nimport { DebouncedTextField } from '@src/components/DebouncedTextField'\nimport { formatDate } from '@src/utils'\n\nimport {\n  QUERY as ARCHIVE_TRANSACTION_MUTATION,\n  ArchiveTransaction,\n  ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction.hooks'\n\nconst isWide = window.innerWidth > 600\n\ninterface ITransactionRowProps {\n  transaction: GetTransactions_transaction\n  expanded: boolean\n  selectableCategories: Array<GetTransactions_categories>\n  onToggleExpansion: (event) => void\n  showDate: boolean\n}\n\nexport const CategoryInfoField = (props: {\n  transaction: GetTransactions_transaction\n  category: GetTransactions_categories | null\n}) => {\n  const { transaction, category } = props\n  const prediction = transaction.prediction\n  if (!transaction.categoryId && prediction) {\n    return <SmartCatField prediction={prediction} transactionId={transaction.id} />\n  }\n  return (\n    <Grid container spacing={10}>\n      {isWide ? (\n        <Grid item xs={1}>\n          <Icon className=\"material-icons\">{category ? category.mui_icon_id : null}</Icon>\n        </Grid>\n      ) : null}\n      <Grid item xs>\n        {category ? (\n          <ResponsiveLabel color=\"textSecondary\">{category.description}</ResponsiveLabel>\n        ) : null}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport const TransactionRowComponent = (props: ITransactionRowProps) => {\n  const classes = useStyles()\n\n  const { showDate, selectableCategories, transaction, expanded, onToggleExpansion } = props\n  const [notes, setNotes] = React.useState(transaction.notes)\n\n  const [updateTransaction, { loading }] = useMutation<\n    UpdateTransaction,\n    UpdateTransactionVariables\n  >(MUTATION)\n  const [archiveTransaction] = useMutation<ArchiveTransaction, ArchiveTransactionVariables>(\n    ARCHIVE_TRANSACTION_MUTATION,\n    {\n      update(cache, { data }) {\n        const variables = {\n          // TODO: send real offset and limit\n          filters: { offset: 0, limit: 40 },\n        }\n        if (data?.archiveTransaction?.isOk) {\n          const cached = cache.readQuery<GetTransactions>({\n            query: GET_TRANSACTIONS_QUERY,\n            variables,\n          })\n          const removed = [...cached!.transactions]\n          _.remove(removed, (t) => t.id === transaction.id)\n          cache.writeQuery({\n            query: GET_TRANSACTIONS_QUERY,\n            data: Object.assign({}, cached, { transactions: removed }),\n            variables,\n          })\n        }\n      },\n    },\n  )\n\n  return (\n    <div>\n      <Card style={showDate ? { marginTop: '1rem' } : undefined}>\n        {showDate ? (\n          <CardHeader className={classes.header} title={formatDate(transaction.issuedDate)} />\n        ) : null}\n        <CardContent className={!transaction.editable ? classes.disabled : undefined}>\n          <Grid container spacing={10}>\n            <Grid item xs={4} sm={4}>\n              {!transaction.categoryId && transaction.prediction ? (\n                <SmartCatField prediction={transaction.prediction} transactionId={transaction.id} />\n              ) : (\n                <CategoryField\n                  transaction={transaction}\n                  selectableCategories={selectableCategories}\n                />\n              )}\n            </Grid>\n            <Grid item xs={5} sm={4}>\n              <ResponsiveLink disabled={!transaction.editable} onClick={onToggleExpansion}>\n                {transaction.merchantName}\n              </ResponsiveLink>\n              <div>\n                <ResponsiveLabel color=\"textSecondary\">{transaction.accountName}</ResponsiveLabel>\n                <ResponsiveLabel color=\"textSecondary\">{transaction.plaidCategory}</ResponsiveLabel>\n                <ResponsiveLabel color=\"textSecondary\">{transaction.notes}</ResponsiveLabel>\n              </div>\n            </Grid>\n            <Grid item xs={3} sm={4}>\n              <div style={{ float: 'right' }}>\n                <ResponsiveLabel>{`${transaction.totalAmount}`}</ResponsiveLabel>\n                <Typography\n                  variant=\"subtitle2\"\n                  style={{\n                    color: +transaction.balanceAdjust > 0 ? 'green' : 'red',\n                  }}\n                >\n                  {`${transaction.balanceAdjust}`}\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Collapse style={{ margin: '1rem' }} in={expanded} unmountOnExit>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={12}>\n              <BalanceAdjustField\n                transactionId={transaction.id}\n                balanceAdjust={Number(transaction.balanceAdjust)}\n                total={parseFloat(transaction.totalAmount)}\n              />\n            </Grid>\n            <Grid item xs={10} sm={11}>\n              <DebouncedTextField\n                fullWidth={true}\n                loading={loading}\n                label=\"Notes\"\n                value={notes}\n                setter={(newValue) => {\n                  setNotes(newValue)\n                }}\n                onBounce={(newValue) =>\n                  updateTransaction({\n                    variables: { id: transaction.id, notes: newValue },\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={2} sm={1} style={{ textAlign: 'right' }}>\n              <Fab\n                size=\"medium\"\n                color=\"secondary\"\n                aria-label=\"Delete\"\n                onClick={() =>\n                  archiveTransaction({\n                    variables: {\n                      id: transaction.id,\n                    },\n                  })\n                }\n              >\n                <Delete />\n              </Fab>\n            </Grid>\n          </Grid>\n        </Collapse>\n      </Card>\n    </div>\n  )\n}\nconst areEqual = (last: ITransactionRowProps, next: ITransactionRowProps) => {\n  if (\n    _.isEqual(last.transaction, next.transaction) &&\n    last.expanded === next.expanded &&\n    last.selectableCategories.length === next.selectableCategories.length\n  ) {\n    return true\n  }\n  return false\n}\nconst TransactionRow = React.memo(TransactionRowComponent, areEqual)\n\n/*\n * This is a wrapper component that is used to control the expansion states of\n * the rows. We do not want a compolicated component to manage the expansion\n * state becaue the rerending will be too expensive.\n */\nexport const TransactionRows: React.FC<{\n  categories: Array<GetTransactions_categories>\n  transactions: Array<GetTransactions_transaction>\n}> = (props) => {\n  const [expanded, setExpanded] = React.useState<number | null>(null)\n  const handleChange = (eventId: number) => (event: React.ChangeEvent<{}>) => {\n    if (eventId === expanded) {\n      return setExpanded(null)\n    }\n    setExpanded(eventId)\n  }\n  return (\n    <>\n      {props.transactions.map((t, index) => {\n        let showDate = false\n        if (index > 0) {\n          const prev = props.transactions[index - 1]\n          showDate = prev.issuedDate !== t.issuedDate\n        } else {\n          // First transaction always show date\n          showDate = true\n        }\n        return (\n          <TransactionRow\n            showDate={showDate}\n            selectableCategories={props.categories}\n            expanded={expanded === t.id}\n            key={t.id}\n            transaction={t}\n            onToggleExpansion={handleChange(t.id)}\n          />\n        )\n      })}\n    </>\n  )\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\nexport enum EventType {\n  BATCH_IMPORT = 'BATCH_IMPORT',\n  CHECKPOINT = 'CHECKPOINT',\n}\n\nexport interface CreateTransactionInput {\n  issuedDate: string\n  merchantName: string\n  totalAmount: string\n  balanceAdjust: string\n  notes: string\n  categoryId?: number | null\n}\n\nexport interface RecordsFilter {\n  recordType: string\n  offset: number\n  limit: number\n  orderBy?: string | null\n}\n\nexport interface TransactionFilters {\n  offset: number\n  limit: number\n  eventId?: string | null\n  categoryId?: number | null\n  sharedOnly?: boolean | null\n  uncategorizedOnly?: boolean | null\n  searchText?: string | null\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n","import { IImportBatch, ICheckPoint, IEvent } from './types'\nimport { EventType } from '@src/types/__generated__/globalTypes'\n\nexport const getEventDescription = (e: IEvent) => {\n  if (e.eventType === EventType.CHECKPOINT) {\n    const checkpoint = e as ICheckPoint\n    return checkpoint.signedTs\n      ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n          checkpoint.signedTs,\n        ).toLocaleDateString()}`\n      : 'Not Signed'\n  }\n  const batch: IImportBatch = e as IImportBatch\n  if (batch.isStatement) {\n    return `${batch.origin}: ${batch.startDate} TO ${batch.endDate}`\n  }\n  // Imported from wave or plaid\n  if (e.eventType === EventType.BATCH_IMPORT) {\n    const batch_import = e as IImportBatch\n    return `${batch_import.origin}: ${batch_import.startDate.slice(\n      0,\n      10,\n    )} TO ${batch_import.endDate.slice(0, 10)}`\n  }\n\n  throw new Error('not possible')\n}\nexport const getEventIcon = (event: IEvent) => {\n  if (event.eventType === EventType.CHECKPOINT) {\n    return 'toll'\n  }\n  const batch: IImportBatch = event as IImportBatch\n  if (batch.isStatement) {\n    return 'cloud_upload'\n  }\n  if (batch.eventType === EventType.BATCH_IMPORT) {\n    const batch_import = batch\n    return { plaid: 'grid_on', wave: 'waves' }[batch_import.origin]\n  }\n  throw new Error('not possible')\n}\n\nexport const getEventButtonIcon = (event: IEvent) => {\n  if (event.eventType === EventType.CHECKPOINT) {\n    return 'plus_one'\n  }\n  return null\n}\n","import * as React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport {\n  ListItemSecondaryAction,\n  ButtonGroup,\n  Button,\n  Tooltip,\n  Icon,\n  ListItemIcon,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@material-ui/core'\nimport { getEventButtonIcon, getEventIcon, getEventDescription } from './utils'\nimport { IEvent, ICheckPoint } from './types'\nimport {\n  QUERY as SIGN_CHECKPOINT_MUTATION,\n  SignCheckpoint,\n  SignCheckpointVariables,\n} from '@src/queries/__generated__/SignCheckpoint.hooks'\nimport { BASE_URL } from '@src/actions'\nimport { UrlStateContext } from '@src/Root/contexts'\nimport { UrlPathEnum } from '@src/types'\nimport { EventType } from '@src/types/__generated__/globalTypes'\nimport { pushHistory } from '@src/history'\n\nexport const EventRow = (props: { event: IEvent }) => {\n  const urlState = React.useContext(UrlStateContext)\n\n  const { event } = props\n  const disabled = urlState.eventId === `${event.eventType}-${event.id}`\n  if (event.eventType === EventType.CHECKPOINT) {\n    return <CheckpointListItem disabled={disabled} checkpoint={event as ICheckPoint} />\n  }\n  const eventIcon = getEventIcon(event)\n  const onFilter = (e) => {\n    pushHistory(UrlPathEnum.TransactionList, {\n      eventId: `${event.eventType}-${event.id}`,\n    })\n  }\n  const eventButtonIcon = getEventButtonIcon(event)\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilter}>\n      <ListItemIcon>\n        <Tooltip title={event.eventType || ''}>\n          <Icon color=\"primary\">{eventIcon}</Icon>\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(event.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{getEventDescription(event)}</Typography>\n      </ListItemText>\n      {eventButtonIcon ? (\n        <ListItemSecondaryAction>\n          <Button>\n            <Icon>{eventButtonIcon}</Icon>\n          </Button>\n        </ListItemSecondaryAction>\n      ) : null}\n    </ListItem>\n  )\n}\n\nexport const CheckpointListItem: React.FC<{\n  disabled: boolean\n  checkpoint: ICheckPoint\n}> = ({ checkpoint, disabled }) => {\n  const [signCheckpoint, { loading }] = useMutation<SignCheckpoint, SignCheckpointVariables>(\n    SIGN_CHECKPOINT_MUTATION,\n  )\n  const onFilter = (e) => {\n    pushHistory(UrlPathEnum.TransactionList, {\n      eventId: `${checkpoint.eventType}-${checkpoint.id}`,\n    })\n  }\n  const description = checkpoint.signedTs\n    ? `balance: ${checkpoint.signedBalance}  Signed at ${new Date(\n        checkpoint.signedTs,\n      ).toLocaleDateString()}`\n    : 'Not Signed'\n\n  if (loading) {\n    return <div>Signing ...</div>\n  }\n  return (\n    <ListItem selected={disabled} disabled={disabled} button onClick={onFilter}>\n      <ListItemIcon>\n        <Tooltip title={checkpoint.eventType || ''}>\n          {checkpoint.signedTs ? (\n            <Icon color=\"primary\">toll</Icon>\n          ) : (\n            <Icon style={{ color: 'green' }}>fiber_new</Icon>\n          )}\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText>\n        <Typography>{`${new Date(checkpoint.createdTs).toLocaleDateString()}`}</Typography>\n        <Typography color=\"textSecondary\">{description}</Typography>\n      </ListItemText>\n      <ListItemSecondaryAction>\n        <ButtonGroup\n          color=\"secondary\"\n          variant=\"contained\"\n          size=\"small\"\n          aria-label=\"Small outlined button group\"\n        >\n          {checkpoint.signedTs ? null : (\n            <Button\n              size=\"small\"\n              color=\"secondary\"\n              onClick={() =>\n                signCheckpoint({\n                  variables: {\n                    id: checkpoint.id,\n                  },\n                })\n              }\n            >\n              <Icon>plus_one</Icon>\n            </Button>\n          )}\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            disabled={!sessionStorage.getItem('authToken')}\n            onClick={() => {\n              window.open(\n                `${BASE_URL}/RAHoliCy/checkpoint/${checkpoint.id}?token=${sessionStorage.getItem(\n                  'authToken',\n                )}`,\n                '_blank',\n              )\n            }}\n          >\n            <Icon>cloud_download</Icon>\n          </Button>\n        </ButtonGroup>\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n}\n","import { LinearProgress, List } from '@material-ui/core'\nimport * as React from 'react'\nimport { EventRow } from './EventRow'\nimport { useApolloQuery } from '@src/queries/__generated__/GetEvents.hooks'\n\ninterface Prop {}\nexport const Timeline: React.FC<Prop> = (props) => {\n  const { loading, error, data } = useApolloQuery()\n  if (loading) return <LinearProgress />\n  if (error) return <p>Error :(</p>\n  if (!data) throw new Error('bad')\n  return (\n    <div>\n      <List>\n        {data.eventList.events.map((e, index) => {\n          return e ? <EventRow event={e} key={index} /> : null\n        })}\n      </List>\n    </div>\n  )\n}\n","import { LinearProgress, Button, Grid } from '@material-ui/core'\nimport * as React from 'react'\nimport { ImportForm } from './ImportForm'\n\nimport { NewTransactionForm } from './NewTransactionForm'\nimport { TransactionListAppBar } from './TransactionListAppBar'\nimport { TransactionRows } from './TransactionRow'\nimport { UrlStateContext } from '@src/Root/contexts'\nimport { useApolloQuery } from '@src/queries/__generated__/GetTransactions.hooks'\nimport { Timeline } from '@src/Root/Timeline'\n\ntype FormType = 'transaction' | 'statement' | 'wave'\n\nconst limit = 40\nconst isWide = window.innerWidth > 600\n\nexport const TransactionList = (props: {}) => {\n  console.log('rerender entire list page')\n  const urlFilters = React.useContext(UrlStateContext)\n  const [showTimeline, setShowTimeline] = React.useState(isWide)\n  const [formType, setFormType] = React.useState<FormType | null>(null)\n\n  const { loading: isTransactionLoading, error, data, fetchMore } = useApolloQuery({\n    variables: {\n      filters: {\n        offset: 0,\n        limit,\n        ...urlFilters,\n      },\n    },\n  })\n  if (error) {\n    return <div>{error.message}</div>\n  }\n\n  const transactions = data?.transactions || []\n  const categories = data?.categories || []\n  // TODO: implement selectable\n  const selectableCategories = categories.filter((c) => c)\n\n  const loadMoreTransactions = () => {\n    fetchMore({\n      variables: { filters: { offset: transactions.length || -1, limit, ...urlFilters } },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev\n        return Object.assign({}, prev, {\n          transactions: [...prev.transactions, ...fetchMoreResult.transactions],\n        })\n      },\n    })\n  }\n\n  const showForm = (formType: FormType) => {\n    setFormType(formType)\n  }\n  return (\n    <div style={{ maxWidth: '100%' }}>\n      <TransactionListAppBar\n        toggleTimeline={() => setShowTimeline(!showTimeline)}\n        showForm={showForm}\n        balance={data?.balance.amount || '?'}\n        categoryChoices={selectableCategories.map((c) => {\n          return { id: c.id, label: c.description }\n        })}\n      />\n      <div\n        style={{\n          height: window.innerHeight - 70,\n          overflow: 'scroll',\n        }}\n      >\n        <Grid container>\n          {showTimeline ? (\n            <Grid item sm={3}>\n              <Timeline />\n            </Grid>\n          ) : null}\n          <Grid item sm={showTimeline ? 9 : 12}>\n            <div style={{ marginBottom: '20px' }}>\n              {formType === 'transaction' ? (\n                <NewTransactionForm\n                  selectableCategories={selectableCategories || []}\n                  onClose={() => setFormType(null)}\n                />\n              ) : null}\n              {formType === 'wave' ? <ImportForm onClose={() => setFormType(null)} /> : null}\n            </div>\n            {isTransactionLoading ? (\n              <LinearProgress />\n            ) : (\n              <TransactionRows categories={categories || []} transactions={transactions || []} />\n            )}\n            <Button fullWidth size=\"large\" color=\"secondary\" onClick={loadMoreTransactions}>\n              ({transactions.length}) Click to Load More ...\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  )\n}\n","import { Typography, Icon, ListItemIcon, Select, MenuItem } from '@material-ui/core'\nimport * as React from 'react'\n\ninterface IIconSelect {\n  initialValue: string | null\n  onChange: (event, child) => void\n  /*\n  options: Array<{\n    value: number | string\n    label: string\n  }>\n   */\n}\nconst ICON_IDS = [\n  'attach_money',\n  'beach_access',\n  'cake',\n  'compare_arrows',\n  'free_breakfast',\n  'gavel',\n  'home',\n  'local_activity',\n  'local_bar',\n  'local_car_wash',\n  'local_gas_station',\n  'local_grocery_store',\n  'local_hospital',\n  'local_parking',\n  'local_taxi',\n  'motorcycle',\n  'movie',\n  'not_interested',\n  'perm_scan_wifi',\n  'phone_iphone',\n  'power',\n  'help',\n  'restaurant',\n  'rowing',\n  'school',\n  'settings_input_component',\n  'settings_input_hdmi',\n  'shopping_basket',\n  'subway',\n  'theaters',\n  'pets',\n]\nexport const IconSelect: React.FC<IIconSelect> = ({ initialValue, onChange }) => {\n  return (\n    <Select onChange={onChange} value={initialValue}>\n      {ICON_IDS.map((iconId) => (\n        <MenuItem key={iconId} value={iconId}>\n          <ListItemIcon>\n            <Icon color=\"primary\">{iconId}</Icon>\n          </ListItemIcon>\n          <Typography style={{ float: 'right' }}>{iconId}</Typography>\n        </MenuItem>\n      ))}\n    </Select>\n  )\n}\n","import * as React from 'react'\n\nimport {\n  makeStyles,\n  TextField,\n  ListItemSecondaryAction,\n  IconButton,\n  Theme,\n  createStyles,\n  Icon,\n  ListItemIcon,\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core'\nimport { ExpandMore, ExpandLess } from '@material-ui/icons'\nimport { Node } from './selectors'\nimport { IconSelect } from '@src/components/IconSelect'\n\ninterface ITreeProps {\n  node: Node\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n  level?: number\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    node: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n)\n\nexport const Tree: React.FC<ITreeProps> = (props) => {\n  const { node, level = 0, onSelectIcon, onSaveNode } = props\n  const classes = useStyles()\n\n  const [open, setOpen] = React.useState(true)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n  return (\n    <List component=\"nav\" className={classes.node}>\n      <ListItem button onClick={handleClick} style={{ paddingLeft: `${32 * level}px` }}>\n        <ListItemIcon>\n          <Icon color=\"secondary\">{node.mui_icon_id}</Icon>\n        </ListItemIcon>\n        <ListItemText primary={node.name}></ListItemText>\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {node.children.map((child) =>\n            child.children.length ? (\n              <Tree\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ) : (\n              <NodeListItem\n                onSelectIcon={onSelectIcon}\n                onSaveNode={onSaveNode}\n                key={child.id}\n                node={child}\n                level={level + 1}\n              />\n            ),\n          )}\n        </List>\n      </Collapse>\n    </List>\n  )\n}\n\nconst NodeListItem: React.FC<{\n  node: Node\n  level: number\n  onSaveNode: (number, string) => void\n  onSelectIcon: (id: number, iconId: string) => void\n}> = ({ node, level, onSaveNode, onSelectIcon }) => {\n  const [editable, setEditable] = React.useState(false)\n  const [pickingIcon, setPickingIcon] = React.useState(false)\n  const [nodeName, setNodeName] = React.useState(node.name)\n  const [iconId, setIconId] = React.useState(node.mui_icon_id)\n  return (\n    <>\n      <ListItem\n        key={node.id}\n        dense\n        button\n        role={undefined}\n        style={{ paddingLeft: `${32 * (level + 1)}px` }}\n      >\n        {editable ? (\n          <TextField\n            autoFocus={true}\n            value={nodeName}\n            onChange={(event) => setNodeName(event.target.value)}\n            onBlur={() => {\n              setEditable(false)\n              onSaveNode(node.id, nodeName)\n            }}\n          />\n        ) : (\n          <>\n            {pickingIcon ? (\n              <IconSelect\n                onChange={(e, child) => {\n                  onSelectIcon(node.id, e.target.value)\n                  setIconId(e.target.value)\n                  setPickingIcon(false)\n                }}\n                initialValue={iconId}\n              ></IconSelect>\n            ) : (\n              <ListItemText onClick={() => setEditable(true)} primary={nodeName}></ListItemText>\n            )}\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => setPickingIcon(true)} edge=\"end\">\n                <Icon color=\"primary\">{iconId}</Icon>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </>\n        )}\n      </ListItem>\n    </>\n  )\n}\n","import { GetCategories_categories } from 'src/queries/__generated__/GetCategories.hooks'\n\nexport interface Node extends GetCategories_categories {\n  children: Array<Node>\n}\n\n/*\n * Recursive: add a node to a tree. If node has no parent, add to root.\n * Otherwise, add to its parent\n */\nconst addNode = (node: Node, tree, visited: Array<Node>, remaining: Array<Node>) => {\n  // Add to root\n  visited.push(node)\n  const p = visited.find((x) => x.id === node.parent_id)\n\n  if (!node.parent_id) {\n    tree[node.id] = node\n    return\n  } else if (p) {\n    // Find parent who is in visited attach\n    const parentNode = p\n    if (!parentNode.children.find((x) => x.id === node.id)) {\n      parentNode.children.push(node)\n    }\n    return\n  } else {\n    //parent is not visited either\n    const parentNode = remaining.find((v) => v.id === node.parent_id)\n    if (!parentNode) {\n      throw new Error('no parent cat')\n    }\n    if (!parentNode.children.find((x) => x.id === node.id)) {\n      parentNode.children.push(node)\n    }\n    // const parentNode = { ...parentCat, children: [node] }\n    return addNode(parentNode, tree, visited, remaining)\n  }\n}\n\nexport const getCategoryTree = (categories: Array<GetCategories_categories>) => {\n  const tree = {}\n  const visited: Array<Node> = []\n  const remaining = categories.map((c) => {\n    return { ...c, children: [] }\n  })\n\n  while (remaining.length > 0) {\n    // Take node out of remaining\n    const node = remaining.pop()\n    if (!node) throw new Error()\n\n    addNode(node, tree, visited, remaining)\n  }\n\n  return tree\n}\n\n/*\n\nconst testData = [\n  {\n    id: 1,\n    description: 'Retail',\n    name: 'RETAIL',\n    parent_id: 42,\n    mui_icon_id: 'shopping_basket',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 2,\n    description: 'Clothing Cosmetic',\n    name: 'CLOTHING_COSMETIC',\n    parent_id: 1,\n    mui_icon_id: 'shopping_basket',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 3,\n    description: 'Electronic',\n    name: 'ELECTRONIC',\n    parent_id: 1,\n    mui_icon_id: 'settings_input_hdmi',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 4,\n    description: 'Sport',\n    name: 'SPORT',\n    parent_id: 1,\n    mui_icon_id: 'rowing',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 5,\n    description: 'Gift',\n    name: 'GIFT',\n    parent_id: 1,\n    mui_icon_id: 'cake',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 6,\n    description: 'Home',\n    name: 'HOME',\n    parent_id: 1,\n    mui_icon_id: 'home',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 8,\n    description: 'Restaurant',\n    name: 'RESTAURANT',\n    parent_id: 42,\n    mui_icon_id: 'restaurant',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 9,\n    description: 'Grocery',\n    name: 'GROCERY',\n    parent_id: 42,\n    mui_icon_id: 'local_grocery_store',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 10,\n    description: 'Liquor',\n    name: 'LIQUOR',\n    parent_id: 42,\n    mui_icon_id: 'local_bar',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 11,\n    description: 'Lunch',\n    name: 'LUNCH',\n    parent_id: 8,\n    mui_icon_id: 'restaurant',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 12,\n    description: 'Dinner',\n    name: 'DINNER',\n    parent_id: 8,\n    mui_icon_id: 'restaurant',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 13,\n    description: 'Breakfast',\n    name: 'BREAKFAST',\n    parent_id: 8,\n    mui_icon_id: 'free_breakfast',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 14,\n    description: 'Tranportaion',\n    name: 'TRANPORTAION',\n    parent_id: 42,\n    mui_icon_id: 'local_taxi',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 15,\n    description: 'Gas',\n    name: 'GAS',\n    parent_id: 14,\n    mui_icon_id: 'local_gas_station',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 16,\n    description: 'Parking',\n    name: 'PARKING',\n    parent_id: 14,\n    mui_icon_id: 'local_parking',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 17,\n    description: 'Public Transit',\n    name: 'PUBLIC_TRANSIT',\n    parent_id: 14,\n    mui_icon_id: 'subway',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 18,\n    description: 'Health',\n    name: 'HEALTH',\n    parent_id: 42,\n    mui_icon_id: 'local_hospital',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 19,\n    description: 'Medical',\n    name: 'MEDICAL',\n    parent_id: 18,\n    mui_icon_id: 'local_hospital',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 21,\n    description: 'Shelter',\n    name: 'SHELTER',\n    parent_id: 42,\n    mui_icon_id: 'home',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 22,\n    description: 'Mortgage',\n    name: 'MORTGAGE',\n    parent_id: 21,\n    mui_icon_id: 'home',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 24,\n    description: 'Down Payment',\n    name: 'DOWN_PAYMENT',\n    parent_id: 21,\n    mui_icon_id: 'home',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 26,\n    description: 'Automobile',\n    name: 'AUTOMOBILE',\n    parent_id: 42,\n    mui_icon_id: 'motorcycle',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 27,\n    description: 'Car Insurance',\n    name: 'CAR_INSURANCE',\n    parent_id: 26,\n    mui_icon_id: 'local_car_wash',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 30,\n    description: 'Maintanence',\n    name: 'MAINTANENCE',\n    parent_id: 26,\n    mui_icon_id: 'local_car_wash',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 31,\n    description: 'Utility',\n    name: 'UTILITY',\n    parent_id: 42,\n    mui_icon_id: 'settings_input_component',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 32,\n    description: 'Hydro',\n    name: 'HYDRO',\n    parent_id: 31,\n    mui_icon_id: 'power',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 33,\n    description: 'Mobile',\n    name: 'MOBILE',\n    parent_id: 31,\n    mui_icon_id: 'phone_iphone',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 34,\n    description: 'Internet',\n    name: 'INTERNET',\n    parent_id: 31,\n    mui_icon_id: 'perm_scan_wifi',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 35,\n    description: 'Entertainment',\n    name: 'ENTERTAINMENT',\n    parent_id: 42,\n    mui_icon_id: 'theaters',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 36,\n    description: 'Movie',\n    name: 'MOVIE',\n    parent_id: 35,\n    mui_icon_id: 'movie',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 37,\n    description: 'Miscellaneous',\n    name: 'MISCELLANEOUS',\n    parent_id: 42,\n    mui_icon_id: '',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 38,\n    description: 'Education',\n    name: 'EDUCATION',\n    parent_id: 42,\n    mui_icon_id: 'school',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 39,\n    description: 'Covernment Fees',\n    name: 'FEES_CHARGES',\n    parent_id: 42,\n    mui_icon_id: 'gavel',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 40,\n    description: 'Income',\n    name: 'INCOME',\n    parent_id: null,\n    mui_icon_id: 'attach_money',\n    is_selectable: true,\n    is_active: true,\n  },\n  {\n    id: 41,\n    description: 'Transfer',\n    name: 'TRANSFER',\n    parent_id: 18,\n    mui_icon_id: 'compare_arrows',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 42,\n    description: 'Expense',\n    name: 'EXPENSE',\n    parent_id: null,\n    mui_icon_id: '',\n    is_selectable: true,\n    is_active: true,\n  },\n  {\n    id: 46,\n    description: 'Vacation',\n    name: 'VACATION',\n    parent_id: 35,\n    mui_icon_id: 'beach_access',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 48,\n    description: 'Activity',\n    name: 'ACTIVITY',\n    parent_id: 35,\n    mui_icon_id: 'local_activity',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 49,\n    description: 'Ignore',\n    name: 'IGNORE',\n    parent_id: null,\n    mui_icon_id: 'not_interested',\n    is_selectable: true,\n    is_active: true,\n  },\n  {\n    id: 50,\n    description: 'Massage & Spa',\n    name: 'MASSAGE_SPA',\n    parent_id: 18,\n    mui_icon_id: 'spa',\n    is_selectable: false,\n    is_active: true,\n  },\n  {\n    id: 51,\n    description: 'Donation',\n    name: 'DONATION',\n    parent_id: 42,\n    mui_icon_id: 'pets',\n    is_selectable: false,\n    is_active: true,\n  },\n]\n*/\n","import * as React from 'react'\nimport { Tree } from './Tree'\nimport { getCategoryTree } from './selectors'\nimport { useApolloQuery } from '@src/queries/__generated__/GetCategories.hooks'\n\nexport const CategoryPage: React.FC<{}> = (props) => {\n  const { data } = useApolloQuery()\n\n  if (!data) {\n    return <div>loading...</div>\n  }\n  const tree = getCategoryTree(data.categories)\n  const root = {\n    id: 0,\n    name: 'root',\n    mui_icon_id: null,\n    parent_id: null,\n    is_selectable: false,\n    is_active: true,\n    __typename: 'Category',\n    description: 'root',\n    children: Object.keys(tree).map((k) => tree[k]),\n  }\n\n  return (\n    <Tree\n      onSaveNode={(id: number, name: string) => console.log(id, name)}\n      onSelectIcon={(id: number, iconId: string) => console.log(id, iconId)}\n      node={root as any}\n    />\n  )\n}\n","import * as React from 'react'\nimport {\n  TableBody,\n  TableHead,\n  Icon,\n  IconButton,\n  Tooltip,\n  TableRow,\n  TableContainer,\n  Table as T,\n  TableCell,\n} from '@material-ui/core'\nimport { useApolloQuery } from '@src/queries/__generated__/GetRecords.hooks.ts'\nimport { pushHistory } from '@src/history'\nimport { UrlPathEnum } from '@src/types'\n\ninterface ITableProps {\n  name: string\n  fields: Array<string>\n}\n\nconst Cell: React.FunctionComponent<{ value: string }> = ({ value }) => {\n  const content = <TableCell>{value ? value.substring(0, 100) : ''}</TableCell>\n  if (value.length > 100) {\n    return <Tooltip title={value}>{content}</Tooltip>\n  }\n  return content\n}\n\nexport const Table: React.FunctionComponent<ITableProps> = ({ fields, name }) => {\n  const { loading, data } = useApolloQuery({\n    variables: {\n      filters: {\n        recordType: name,\n        offset: 0,\n        limit: 100,\n      },\n    },\n  })\n  if (loading || !data) return <div>loading...</div>\n\n  return (\n    <div>\n      <IconButton onClick={(e) => pushHistory(UrlPathEnum.TablesPage)}>\n        <Icon fontSize=\"large\" color=\"primary\">\n          arrow_back\n        </Icon>\n      </IconButton>\n      <TableContainer>\n        <T>\n          <TableHead>\n            <TableRow>\n              {fields.map((c) => (\n                <TableCell key={c}>{c}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.records.map((r, index) => (\n              <TableRow key={index}>\n                {r.nameValuePairs.map((pair, i) => (\n                  <Cell key={pair.name} value={pair.value}>\n                    {' '}\n                  </Cell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </T>\n      </TableContainer>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { List, ListItem, ListItemText } from '@material-ui/core'\nimport { Table } from './Table'\nimport { getPathName, pushHistory } from '@src/history'\nimport { UrlPathEnum } from '@src/types'\nimport { useApolloQuery } from '@src/queries/__generated__/GetTableNames.hooks'\n\nexport const TablesPage = () => {\n  const { loading, data } = useApolloQuery()\n  if (loading || !data) return <div>loading ...</div>\n\n  const paths = getPathName().split('/')\n  if (paths[2]) {\n    const t = data.tables.find((t) => t.name === paths[2])\n    if (!t) {\n      throw new Error(paths[2])\n    }\n    return <Table name={t.name} fields={t.fields.map((c) => c.name)} />\n  }\n\n  return (\n    <List>\n      {data.tables.map((t) => {\n        return (\n          <ListItem\n            key={t.name}\n            button\n            onClick={() => pushHistory((UrlPathEnum.TablesPage + `/${t.name}`) as any)}\n          >\n            <ListItemText primary={t.name} />\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n","import { createBrowserHistory } from 'history'\nimport * as _ from 'lodash'\nimport { UrlPathEnum } from '@src/types'\n\nexport const history = createBrowserHistory()\nexport const pushHistory = (\n  pathname: UrlPathEnum,\n  urlState?: {} | null,\n  state: {} | null = null,\n) => {\n  const searchString =\n    urlState && urlState && Object.keys(urlState).length\n      ? '?urlState=' + JSON.stringify(_.pickBy(urlState, _.identity))\n      : ''\n  return history.push({\n    pathname,\n    search: searchString,\n    state,\n  })\n}\n\nexport const getPathName = () => {\n  const path = history.location.pathname\n  return path.endsWith('/') ? path.slice(0, path.length - 1) || '/' : path\n}\n","import { List, ListItem, ListItemText } from '@material-ui/core'\nimport { Route, Switch } from 'react-router'\nimport * as React from 'react'\nimport { hot } from 'react-hot-loader'\nimport { ApolloProvider } from '@apollo/react-hooks'\n\nimport { connect } from 'react-redux'\nimport { UrlStateContext } from './contexts'\nimport { CategoryPage } from '@src/CategoryPage'\nimport { UrlPathEnum } from '@src/types'\nimport { getPathName, pushHistory } from '@src/history'\nimport { LoginPage } from '@src/LoginPage'\nimport { TablesPage } from '@src/TablesPage'\nimport { PnlChart } from '@src/Report/PnlChart'\nimport { parseUrlState } from '@src/selectors'\nimport { TransactionList } from '@src/TransactionList'\nimport { client } from '@src/gqlClient'\n\ninterface StateProps {\n  isAuthenticated: boolean\n  urlState: any\n}\n\ntype Prop = StateProps\n\nconst RootComponent: React.FC<Prop> = (props) => {\n  return (\n    <div style={{ maxWidth: '100%', flex: 8 }}>\n      <UrlStateContext.Provider value={props.urlState}>\n        <Body isAuthenticated={props.isAuthenticated} />\n      </UrlStateContext.Provider>\n    </div>\n  )\n}\n\nexport const Root = connect<StateProps, null>((state, ownProps) => {\n  return {\n    isAuthenticated: !!sessionStorage.getItem('authToken'),\n    urlState: parseUrlState(),\n    state,\n  }\n}, null)(RootComponent)\n\nconst PageList: React.FC = () => {\n  const UrlPathsMap = {\n    TransactionList,\n    CategoryPage,\n    PnlChart,\n    TablesPage,\n  }\n  return (\n    <List>\n      {Object.keys(UrlPathsMap).map((c, index) => {\n        return (\n          <ListItem key={index} button onClick={() => pushHistory(c as UrlPathEnum)}>\n            <ListItemText primary={c} />\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n\nclass Body extends React.Component<{ isAuthenticated: boolean }> {\n  render() {\n    if (getPathName().startsWith(UrlPathEnum.TablesPage)) {\n      return <TablesPage />\n    }\n    if (getPathName() === UrlPathEnum.LoginPage) {\n      return <LoginPage />\n    }\n    if (!this.props.isAuthenticated) {\n      console.warn('not authenticated!!!')\n      pushHistory(UrlPathEnum.LoginPage)\n      return <div />\n    }\n    if (getPathName() === '/goTIOnaTErYeRsUraYhOMEO' || getPathName() === UrlPathEnum.Root) {\n      return <PageList />\n    }\n    if (getPathName() === UrlPathEnum.TransactionList) {\n      return <TransactionList />\n    }\n    if (getPathName() === UrlPathEnum.CategoryPage) {\n      return <CategoryPage />\n    }\n    if (getPathName() === UrlPathEnum.PnlChart) {\n      return <PnlChart />\n    }\n\n    throw new Error(`Invalid paths: ${getPathName()}`)\n  }\n}\nexport const App = hot(module)(() => (\n  <ApolloProvider client={client}>\n    <Switch>\n      <Route path=\"/\" component={Root} />\n    </Switch>\n  </ApolloProvider>\n))\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport { GetCategories } from '@src/queries/__generated__/GetCategories'\nimport GetCategories__QUERY from '@src/queries/GetCategories.graphql'\n\nexport * from '@src/queries/__generated__/GetCategories'\n\nexport const QUERY = GetCategories__QUERY\nexport type GetCategoriesVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(options?: QueryHookOptions<GetCategories, GetCategoriesVariables>) {\n  return useQuery<GetCategories, GetCategoriesVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetCategories\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"parent_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"mui_icon_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_selectable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":137}};\n    doc.loc.source = {\"body\":\"query GetCategories {\\n  categories {\\n    id\\n    description\\n    name\\n    parent_id\\n    mui_icon_id\\n    is_selectable\\n    is_active\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetCategories\"] = oneQuery(doc, \"GetCategories\");\n        \n","import { Button } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport * as React from 'react'\n\nimport { pushHistory } from '@src/history'\nimport { UrlPathEnum } from '@src/types'\nimport { BASE_URL } from '@src/actions'\n\nexport const LoginPage = (props) => {\n  const [username, setUsername] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const [errorMessage, setErrorMessage] = React.useState(null)\n  const submitLogin = () => {\n    fetch(`${BASE_URL}/goTIOnaTErYeRsUraYhOMEO/login`, {\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.code === 200) {\n          sessionStorage.setItem('authToken', data.token)\n          // Redirect to root\n          pushHistory(UrlPathEnum.Root)\n        } else {\n          console.error(data)\n          setErrorMessage(data.message)\n        }\n      })\n  }\n  return (\n    <div\n      style={{\n        height: `${window.innerHeight}px`,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <TextField label=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n      <br />\n      <TextField\n        error={!!errorMessage}\n        helperText={errorMessage || ''}\n        onChange={(e) => setPassword(e.target.value)}\n        type=\"password\"\n        label=\"Password\"\n        onKeyPress={(e) => {\n          if (e.charCode == 13) {\n            submitLogin()\n          }\n        }}\n      />\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={() => submitLogin()}>\n        Login\n      </Button>\n    </div>\n  )\n}\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport { GetRecords, GetRecordsVariables } from '@src/queries/__generated__/GetRecords'\nimport GetRecords__QUERY from '@src/queries/GetRecords.graphql'\n\nexport * from '@src/queries/__generated__/GetRecords'\n\nexport const QUERY = GetRecords__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(options: QueryHookOptions<GetRecords, GetRecordsVariables>) {\n  return useQuery<GetRecords, GetRecordsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetRecords\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"RecordsFilter\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"records\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"nameValuePairs\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"value\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":132}};\n    doc.loc.source = {\"body\":\"query GetRecords($filters: RecordsFilter!) {\\n  records(filters: $filters) {\\n    nameValuePairs {\\n      name\\n      value\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetRecords\"] = oneQuery(doc, \"GetRecords\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport { GetTableNames } from '@src/queries/__generated__/GetTableNames'\nimport GetTableNames__QUERY from '@src/queries/GetTableNames.graphql'\n\nexport * from '@src/queries/__generated__/GetTableNames'\n\nexport const QUERY = GetTableNames__QUERY\nexport type GetTableNamesVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(options?: QueryHookOptions<GetTableNames, GetTableNamesVariables>) {\n  return useQuery<GetTableNames, GetTableNamesVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetTableNames\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"tables\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"fields\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":89}};\n    doc.loc.source = {\"body\":\"query GetTableNames {\\n  tables {\\n    name\\n    fields {\\n      name\\n      type\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetTableNames\"] = oneQuery(doc, \"GetTableNames\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport {\n  GetProfitAndLossChart,\n  GetProfitAndLossChartVariables,\n} from '@src/queries/__generated__/GetProfitAndLossChart'\nimport GetProfitAndLossChart__QUERY from '@src/queries/GetProfitAndLossChart.graphql'\n\nexport * from '@src/queries/__generated__/GetProfitAndLossChart'\n\nexport const QUERY = GetProfitAndLossChart__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetProfitAndLossChart, GetProfitAndLossChartVariables>,\n) {\n  return useQuery<GetProfitAndLossChart, GetProfitAndLossChartVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetProfitAndLossChart\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"profitAndLossChart\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"series\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"y\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":215}};\n    doc.loc.source = {\"body\":\"query GetProfitAndLossChart($startDate: String!, $endDate: String!) {\\n  profitAndLossChart(startDate: $startDate, endDate: $endDate) {\\n    series {\\n      name\\n      data {\\n        name\\n        y\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetProfitAndLossChart\"] = oneQuery(doc, \"GetProfitAndLossChart\");\n        \n","import querystring from 'querystring'\nimport { history } from '@src/history'\n\nexport function parseUrlState() {\n  const params = parseSearch()\n  if (params && params.urlState) {\n    return JSON.parse(params.urlState as string)\n  }\n  return {}\n}\nexport function parseSearch() {\n  return querystring.parse(history.location.search.split('?')[1])\n}\n","export enum UrlPathEnum {\n  Root = '/',\n  LoginPage = '/LoginPage',\n  TablesPage = '/TablesPage',\n  TransactionList = '/TransactionList',\n  CategoryPage = '/CategoryPage',\n  PnlChart = '/PnlChart',\n}\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  ImportWaveTransactions,\n  ImportWaveTransactionsVariables,\n} from '@src/queries/__generated__/ImportWaveTransactions'\nimport ImportWaveTransactions__QUERY from '@src/queries/ImportWaveTransactions.graphql'\n\nexport * from '@src/queries/__generated__/ImportWaveTransactions'\n\nexport const QUERY = ImportWaveTransactions__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ImportWaveTransactions, ImportWaveTransactionsVariables>,\n) {\n  return useMutation<ImportWaveTransactions, ImportWaveTransactionsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ImportWaveTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"importFromWave\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":244}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation ImportWaveTransactions($startDate: String!, $endDate: String!) {\\n  importFromWave(startDate: $startDate, endDate: $endDate) {\\n    isOk\\n    transactions {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"ImportWaveTransactions\"] = oneQuery(doc, \"ImportWaveTransactions\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport { GetLatestImportDate } from '@src/queries/__generated__/GetLatestImportDate'\nimport GetLatestImportDate__QUERY from '@src/queries/GetLatestImportDate.graphql'\n\nexport * from '@src/queries/__generated__/GetLatestImportDate'\n\nexport const QUERY = GetLatestImportDate__QUERY\nexport type GetLatestImportDateVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options?: QueryHookOptions<GetLatestImportDate, GetLatestImportDateVariables>,\n) {\n  return useQuery<GetLatestImportDate, GetLatestImportDateVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetLatestImportDate\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"latestImportDate\"},\"arguments\":[],\"directives\":[]}]}}],\"loc\":{\"start\":0,\"end\":49}};\n    doc.loc.source = {\"body\":\"query GetLatestImportDate {\\n  latestImportDate\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetLatestImportDate\"] = oneQuery(doc, \"GetLatestImportDate\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetTransactions\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"TransactionFilters\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactions\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filters\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"parent_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"mui_icon_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_selectable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":311}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nquery GetTransactions($filters: TransactionFilters!) {\\n  balance {\\n    id\\n    amount\\n  }\\n  transactions(filters: $filters) {\\n    ...FragmentTransaction\\n  }\\n  categories {\\n    id\\n    description\\n    name\\n    parent_id\\n    mui_icon_id\\n    is_selectable\\n    is_active\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetTransactions\"] = oneQuery(doc, \"GetTransactions\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  CreateTransaction,\n  CreateTransactionVariables,\n} from '@src/queries/__generated__/CreateTransaction'\nimport CreateTransaction__QUERY from '@src/queries/CreateTransaction.graphql'\n\nexport * from '@src/queries/__generated__/CreateTransaction'\n\nexport const QUERY = CreateTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<CreateTransaction, CreateTransactionVariables>,\n) {\n  return useMutation<CreateTransaction, CreateTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateTransactionInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":207}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation CreateTransaction($input: CreateTransactionInput!) {\\n  createTransaction(input: $input) {\\n    isOk\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"CreateTransaction\"] = oneQuery(doc, \"CreateTransaction\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  AcceptPrediction,\n  AcceptPredictionVariables,\n} from '@src/queries/__generated__/AcceptPrediction'\nimport AcceptPrediction__QUERY from '@src/queries/AcceptPrediction.graphql'\n\nexport * from '@src/queries/__generated__/AcceptPrediction'\n\nexport const QUERY = AcceptPrediction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<AcceptPrediction, AcceptPredictionVariables>,\n) {\n  return useMutation<AcceptPrediction, AcceptPredictionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"AcceptPrediction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"acceptPrediction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":219}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation AcceptPrediction($id: Int!) {\\n  acceptPrediction(id: $id) {\\n    isOk\\n    balance {\\n      id\\n      amount\\n    }\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"AcceptPrediction\"] = oneQuery(doc, \"AcceptPrediction\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  CategorizeTransaction,\n  CategorizeTransactionVariables,\n} from '@src/queries/__generated__/CategorizeTransaction'\nimport CategorizeTransaction__QUERY from '@src/queries/CategorizeTransaction.graphql'\n\nexport * from '@src/queries/__generated__/CategorizeTransaction'\n\nexport const QUERY = CategorizeTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<CategorizeTransaction, CategorizeTransactionVariables>,\n) {\n  return useMutation<CategorizeTransaction, CategorizeTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"CategorizeTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categorizeTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":231}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation CategorizeTransaction($id: Int!, $categoryId: Int!) {\\n  categorizeTransaction(id: $id, categoryId: $categoryId) {\\n    isOk\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"CategorizeTransaction\"] = oneQuery(doc, \"CategorizeTransaction\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transaction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":383}};\n    doc.loc.source = {\"body\":\"#import './FragmentTransaction.graphql'\\nmutation UpdateTransaction(\\n  $id: Int!\\n  $notes: String\\n  $merchantName: String\\n  $balanceAdjust: String\\n) {\\n  updateTransaction(\\n    id: $id\\n    notes: $notes\\n    balanceAdjust: $balanceAdjust\\n    merchantName: $merchantName\\n  ) {\\n    isOk\\n    balance {\\n      id\\n      amount\\n    }\\n    transaction {\\n      ...FragmentTransaction\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require('./FragmentTransaction.graphql').definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"UpdateTransaction\"] = oneQuery(doc, \"UpdateTransaction\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport {\n  ArchiveTransaction,\n  ArchiveTransactionVariables,\n} from '@src/queries/__generated__/ArchiveTransaction'\nimport ArchiveTransaction__QUERY from '@src/queries/ArchiveTransaction.graphql'\n\nexport * from '@src/queries/__generated__/ArchiveTransaction'\n\nexport const QUERY = ArchiveTransaction__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<ArchiveTransaction, ArchiveTransactionVariables>,\n) {\n  return useMutation<ArchiveTransaction, ArchiveTransactionVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"ArchiveTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"archiveTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":88}};\n    doc.loc.source = {\"body\":\"mutation ArchiveTransaction($id: Int!) {\\n  archiveTransaction(id: $id) {\\n    isOk\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"ArchiveTransaction\"] = oneQuery(doc, \"ArchiveTransaction\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { MutationHookOptions, useMutation } from '@apollo/react-hooks'\nimport { SignCheckpoint, SignCheckpointVariables } from '@src/queries/__generated__/SignCheckpoint'\nimport SignCheckpoint__QUERY from '@src/queries/SignCheckpoint.graphql'\n\nexport * from '@src/queries/__generated__/SignCheckpoint'\n\nexport const QUERY = SignCheckpoint__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: MutationHookOptions<SignCheckpoint, SignCheckpointVariables>,\n) {\n  return useMutation<SignCheckpoint, SignCheckpointVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"SignCheckpoint\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signCheckpoint\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isOk\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpoint\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBy\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"groupId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":176}};\n    doc.loc.source = {\"body\":\"mutation SignCheckpoint($id: Int!) {\\n  signCheckpoint(id: $id) {\\n    isOk\\n    checkpoint {\\n      id\\n      signedTs\\n      signedBy\\n      groupId\\n      signedBalance\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"SignCheckpoint\"] = oneQuery(doc, \"SignCheckpoint\");\n        \n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport { GetEvents } from '@src/queries/__generated__/GetEvents'\nimport GetEvents__QUERY from '@src/queries/GetEvents.graphql'\n\nexport * from '@src/queries/__generated__/GetEvents'\n\nexport const QUERY = GetEvents__QUERY\nexport type GetEventsVariables = {}\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(options?: QueryHookOptions<GetEvents, GetEventsVariables>) {\n  return useQuery<GetEvents, GetEventsVariables>(QUERY, options)\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetEvents\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventList\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"events\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ICheckPoint\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"signedBalance\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IImportBatch\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"eventType\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdTs\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"origin\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isStatement\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":330}};\n    doc.loc.source = {\"body\":\"query GetEvents {\\n  eventList {\\n    events {\\n      ... on ICheckPoint {\\n        id\\n        eventType\\n        createdTs\\n        signedTs\\n        signedBalance\\n      }\\n      ... on IImportBatch {\\n        id\\n        eventType\\n        createdTs\\n        origin\\n        startDate\\n        endDate\\n        isStatement\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GetEvents\"] = oneQuery(doc, \"GetEvents\");\n        \n","import { InMemoryCache, IntrospectionFragmentMatcher } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n\nimport { ApolloClient as AC } from 'apollo-client'\nimport { concat } from 'apollo-link'\nimport { onError } from 'apollo-link-error'\nimport { HttpLink } from 'apollo-link-http'\nimport { BASE_URL } from '@src/actions'\n\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\n  introspectionQueryResultData: {\n    __schema: {\n      types: [],\n    },\n  },\n})\n\nexport const errorLink = onError((response) => {\n  const { graphQLErrors, networkError } = response\n  if (graphQLErrors) {\n    graphQLErrors.forEach((gqlError) => {\n      if (gqlError.extensions && gqlError.extensions.code == '401') {\n        console.error('Not Authenticated')\n        window.location.href = '/LoginPage'\n      }\n    })\n  }\n\n  if (networkError) {\n    if (networkError['statusCode'] === 401) {\n      sessionStorage.removeItem('authToken')\n      console.error('Not Authenticated')\n      window.location.href = '/LoginPage'\n    }\n    console.error(`[Network error]: ${networkError}`)\n  }\n})\n\nconst getLink = () => {\n  return concat(authLink, errorLink).concat(\n    new HttpLink({\n      uri: `${BASE_URL}/RAHoliCy/graphql`,\n      headers: {\n        authorization: `Bearer ${sessionStorage.getItem('authToken')}`,\n      },\n    }),\n  )\n}\nconst authLink = setContext((_, { headers }) => {\n  const token = sessionStorage.getItem('authToken')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  }\n})\n\nexport const client = new AC({\n  link: getLink(),\n  cache: new InMemoryCache({\n    fragmentMatcher,\n  }),\n})\n","import * as _ from 'lodash'\nimport { combineReducers } from 'redux'\n\nexport const initialState = {}\n\nfunction createReducer(initialState, handlers) {\n  return function reducer(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action)\n    } else {\n      return state\n    }\n  }\n}\n\nconst snacks = createReducer([], {\n  EAT_SNACK: (snacks) => [...snacks.slice(1)],\n  ADD_SNACK: (snacks, action) => [...snacks, action.snack],\n})\n\nconst reducers = combineReducers({\n  snacks,\n})\n\nexport default reducers\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport { Router } from 'react-router'\nimport { history } from './history'\n\nimport { configureStore } from './configureStore'\nimport { App } from '@src/Root'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n)\n","import { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { applyMiddleware, createStore } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nexport const configureStore = (initialState?) => {\n  let middleware = applyMiddleware(thunk, logger())\n  if (process.env.NODE_ENV !== 'production') {\n    middleware = composeWithDevTools(middleware)\n  }\n  const store = createStore(reducers, initialState, middleware)\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers')\n      store.replaceReducer(nextReducer)\n    })\n  }\n  return store\n}\n","import * as React from 'react'\n\ninterface IUrlState {\n  eventId?: string\n  sharedOnly?: boolean\n  searchText?: string\n  categoryId?: number\n  uncategorizedOnly?: boolean\n}\nexport const UrlStateContext = React.createContext<IUrlState>({})\n","/*\n * Generated code! DO NOT EDIT !!!!!\n */\nimport { QueryHookOptions, useQuery } from '@apollo/react-hooks'\nimport {\n  GetTransactions,\n  GetTransactionsVariables,\n} from '@src/queries/__generated__/GetTransactions'\nimport GetTransactions__QUERY from '@src/queries/GetTransactions.graphql'\n\nexport * from '@src/queries/__generated__/GetTransactions'\n\nexport const QUERY = GetTransactions__QUERY\n\n/*\n * Used for hooks\n */\n\nexport function useApolloQuery(\n  options: QueryHookOptions<GetTransactions, GetTransactionsVariables>,\n) {\n  return useQuery<GetTransactions, GetTransactionsVariables>(QUERY, options)\n}\n","export function stringToDate(dateString: string): Date {\n  const [year, month, day] = dateString.split('-').map((v) => parseInt(v))\n  const ret = new Date(year, month - 1, day)\n  return ret\n}\nexport function formatDate(d: string): string {\n  const date = new Date(d)\n  return date.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    timeZone: 'UTC',\n  })\n}\n\nexport const getIsoDateString = (d: Date) => {\n  const year = d.getFullYear()\n  const month = d.getMonth() < 9 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1\n  const day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport function getToday(): string {\n  const today = new Date()\n  const year = today.getFullYear()\n  const month = today.getMonth() < 9 ? '0' + (today.getMonth() + 1) : today.getMonth() + 1\n  const day = today.getDate() < 10 ? '0' + today.getDate() : today.getDate()\n  return `${year}-${month}-${day}`\n}\n\nexport interface Identifiable {\n  id: string | number\n}\nexport const mergeArrays = <T extends Identifiable>(\n  existing: Array<T>,\n  incoming: Array<T>,\n  prependOrAppend: 'prepend' | 'append',\n): Array<T> => {\n  return incoming.reduce(\n    function (accumulator: Array<T>, value: T) {\n      const index = existing.findIndex((x) => x.id === value.id)\n      if (index >= 0) {\n        const ret = [\n          ...accumulator.slice(0, index),\n          value,\n          ...accumulator.slice(index + 1, accumulator.length),\n        ]\n        return ret\n      } else {\n        return prependOrAppend === 'append' ? [...accumulator, value] : [value, ...accumulator]\n      }\n    },\n    [...existing],\n  )\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FragmentTransaction\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IUserTransaction\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalAmount\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issuedDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"notes\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"checkpointId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"statementId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"merchantName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balanceAdjust\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdById\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lenderId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"plaidCategory\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"editable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"originPayload\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"IWaveTransaction\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"anchorAccountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"dateCreated\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"direction\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionDescription\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionAmount\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"accountName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"prediction\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"categoryName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"split\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":530}};\n    doc.loc.source = {\"body\":\"fragment FragmentTransaction on IUserTransaction {\\n  id\\n  lenderId\\n  totalAmount\\n  issuedDate\\n  notes\\n  categoryId\\n  checkpointId\\n  statementId\\n  merchantName\\n  balanceAdjust\\n  createdById\\n  lenderId\\n  plaidCategory\\n  editable\\n  originPayload {\\n    __typename\\n    ... on IWaveTransaction {\\n      anchorAccountName\\n      dateCreated\\n      direction\\n      transactionDescription\\n      transactionDate\\n      transactionId\\n      transactionAmount\\n    }\\n  }\\n  accountName\\n  prediction {\\n    categoryId\\n    categoryName\\n    split\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","export function addSnack(message: string) {\n  return {\n    type: 'ADD_SNACK',\n    snack: message,\n  }\n}\n\nexport function eatSnack() {\n  return {\n    type: 'EAT_SNACK',\n  }\n}\n\nconst isLocal = !!window.location.port\nexport const BASE_URL = `${window.location.protocol}//${window.location.hostname}:${\n  isLocal ? '8888' : ''\n}`\n"],"sourceRoot":""}